Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (l:lambda), check_ta1 (l) = check (l)(rank : 0.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda1) ((Nil)) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:5.)
=================================================
Progress: 3


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda1) ((Nil)) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction lambda1(rank : 5.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check_ta1 (V (string1)) ((Nil)) = check (V (string1))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 4


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check_ta1 (V (string1)) ((Nil)) = check (V (string1))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = check (P (string1) (lambda2))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 5


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = check (P (string1) (lambda2))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = if list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) then true else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))(rank:5.)
=================================================
Progress: 6


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = if list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) then true else false

1 goal(s) more...

0 conjecture(s) more...
>>> case list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))(rank : 5.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:5.)
=================================================
Progress: 7


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 5.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("blo")) (("nbu"::(Nil))) = list_eq (deleteAll (listStation (V ("blo"))) ("nbu")) ((Nil))
Prop: sub_check_ta1 (V ("pnj")) (("dyb"::(Nil))) = list_eq (deleteAll (listStation (V ("pnj"))) ("dyb")) ((Nil))
Prop: sub_check_ta1 (C (V ("zjp")) (V ("biu"))) (("gxg"::(Nil))) = list_eq (deleteAll (listStation (C (V ("zjp")) (V ("biu")))) ("gxg")) ((Nil))
previous tactics
simpl in goal
case list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
parent
(string1::(Nil))
lower
Cons(_, Nil())
upper
sub_check_ta1(lambda2, _)
remove upper
Nil()
remove lower
Nil()
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("tvb") (V ("brh"))) (("rzm"::(Nil))) = true
Prop: sub_check_ta1 (V ("odv")) (("fyo"::(Nil))) = true
Prop: sub_check_ta1 (C (C (P ("hdi") (V ("aer"))) (C (V ("she")) (V ("kss")))) (V ("xzw"))) (("dab"::(Nil))) = true
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 8


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:5.)
intro string1(rank:5.)
induction lambda1(rank:15.)
=================================================
Progress: 9


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:5.)
intro string1(rank:5.)
induction lambda1(rank:15.)
=================================================
Progress: 10


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:5.)
=================================================
Progress: 11


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7.)
=================================================
Progress: 12


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:5.)
=================================================
Progress: 13


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7.)
=================================================
Progress: 14


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 15


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 16


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:5.)
=================================================
Progress: 17


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:5.)
=================================================
Progress: 18


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("yez") (P ("hnu") (V ("ubg")))) (("hej"::(Nil))) = list_eq (deleteAll (listStation (P ("yez") (P ("hnu") (V ("ubg"))))) ("hej")) ((Nil))
Prop: sub_check_ta1 (V ("htk")) (("dsk"::(Nil))) = list_eq (deleteAll (listStation (V ("htk"))) ("dsk")) ((Nil))
Prop: sub_check_ta1 (V ("fkr")) (("ymr"::(Nil))) = list_eq (deleteAll (listStation (V ("fkr"))) ("ymr")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("vta")) (V ("byx"))) (("qra"::(Nil))) = true
Prop: sub_check_ta1 (V ("pmp")) (("mxw"::(Nil))) = true
Prop: sub_check_ta1 (P ("und") (C (V ("klo")) (V ("fqi")))) (("cyy"::(Nil))) = true
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 19


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:7.)
intro string1(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 20


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:7.)
intro string1(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 21


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("lxe") (P ("hqw") (P ("ket") (V ("jlx"))))) (("hcb"::(Nil))) = true
Prop: sub_check_ta1 (V ("uch")) (("puo"::(Nil))) = true
Prop: sub_check_ta1 (V ("hxe")) (("wyk"::(Nil))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("zvm")) (("oaq"::(Nil))) = list_eq (deleteAll (listStation (V ("zvm"))) ("oaq")) ((Nil))
Prop: sub_check_ta1 (V ("rqq")) (("sru"::(Nil))) = list_eq (deleteAll (listStation (V ("rqq"))) ("sru")) ((Nil))
Prop: sub_check_ta1 (V ("lpn")) (("tkh"::(Nil))) = list_eq (deleteAll (listStation (V ("lpn"))) ("tkh")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 22


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:7.)
intro string1(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 23


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:7.)
intro string1(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 24


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 25


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 26


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 27


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 28


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 29


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 30


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 31


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 32


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 33


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 34


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 35


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 36


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 37


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 38


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 39


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 40


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:8.)
rewrite <- Cond1 in goal at 2(rank:15.)
rewrite <- Cond1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 1(rank:23.)
=================================================
Progress: 41


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string1)(rank:8.)
case string_eq (string1) (string2)(rank:8.)
rewrite Cond1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 42


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:7.)
=================================================
Progress: 43


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:7.)
=================================================
Progress: 44


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:7.)
=================================================
Progress: 45


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:7.)
=================================================
Progress: 46


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("gyv")) (("lcw"::(Nil))) = list_eq (deleteAll (listStation (V ("gyv"))) ("lcw")) ((Nil))
Prop: sub_check_ta1 (V ("fao")) (("okl"::(Nil))) = list_eq (deleteAll (listStation (V ("fao"))) ("okl")) ((Nil))
Prop: sub_check_ta1 (V ("wjk")) (("uti"::(Nil))) = list_eq (deleteAll (listStation (V ("wjk"))) ("uti")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ybm")) (("raq"::(Nil))) = true
Prop: sub_check_ta1 (V ("otd")) (("mts"::(Nil))) = true
Prop: sub_check_ta1 (P ("rcx") (V ("dqb"))) (("xkz"::(Nil))) = true
=================================================
Progress: 47


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("ifb")) (C (V ("itq")) (P ("waz") (V ("lgc"))))) (("pnr"::(Nil))) = true
Prop: sub_check_ta1 (P ("njh") (V ("url"))) (("lsi"::(Nil))) = true
Prop: sub_check_ta1 (V ("mki")) (("knz"::(Nil))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("tyd")) (("lvf"::(Nil))) = list_eq (deleteAll (listStation (V ("tyd"))) ("lvf")) ((Nil))
Prop: sub_check_ta1 (P ("nbb") (V ("jku"))) (("mib"::(Nil))) = list_eq (deleteAll (listStation (P ("nbb") (V ("jku")))) ("mib")) ((Nil))
Prop: sub_check_ta1 (V ("vnv")) (("wdw"::(Nil))) = list_eq (deleteAll (listStation (V ("vnv"))) ("wdw")) ((Nil))
=================================================
Progress: 48


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("bwc")) (("bev"::(Nil))) = true
Prop: sub_check_ta1 (V ("inj")) (("vai"::(Nil))) = true
Prop: sub_check_ta1 (P ("hid") (V ("tca"))) (("lua"::(Nil))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lao")) (("hdn"::(Nil))) = list_eq (deleteAll (listStation (V ("lao"))) ("hdn")) ((Nil))
Prop: sub_check_ta1 (V ("ciy")) (("rwu"::(Nil))) = list_eq (deleteAll (listStation (V ("ciy"))) ("rwu")) ((Nil))
Prop: sub_check_ta1 (P ("awc") (V ("ztk"))) (("ykq"::(Nil))) = list_eq (deleteAll (listStation (P ("awc") (V ("ztk")))) ("ykq")) ((Nil))
=================================================
Progress: 49


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lra")) (("odr"::(Nil))) = list_eq (deleteAll (listStation (V ("lra"))) ("odr")) ((Nil))
Prop: sub_check_ta1 (V ("ewk")) (("cli"::(Nil))) = list_eq (deleteAll (listStation (V ("ewk"))) ("cli")) ((Nil))
Prop: sub_check_ta1 (V ("khg")) (("alf"::(Nil))) = list_eq (deleteAll (listStation (V ("khg"))) ("alf")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("lwd") (C (C (V ("ogk")) (V ("nbe"))) (C (V ("uka")) (V ("jux"))))) (("dlc"::(Nil))) = true
Prop: sub_check_ta1 (V ("lmd")) (("svs"::(Nil))) = true
Prop: sub_check_ta1 (V ("gxy")) (("utv"::(Nil))) = true
=================================================
Progress: 50


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 51


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 52


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:8.)
=================================================
Progress: 53


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:8.)
=================================================
Progress: 54


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:8.)
rewrite Case1 in goal at 2(rank:24.)
case string_eq (string1) (string2)(rank:9.)
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
=================================================
Progress: 55


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:8.)
rewrite <- Case1 in goal at 1(rank:8.)
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
rewrite Case1 in goal at 2(rank:24.)
rewrite Case1 in goal at 3(rank:24.)
rewrite <- Case1 in goal at 2(rank:8.)
case string_eq (string2) (string1)(rank:9.)
rewrite <- Cond1 in goal at 0(rank:16.)
rewrite Cond1 in goal at 0(rank:16.)
=================================================
Progress: 56


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 57


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 58


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 59


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:8.)
=================================================
Progress: 60


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 61


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 62


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 12
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 63


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 64


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:6.)
=================================================
Progress: 65


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("nbs")) (("ejn"::("rud"::(Nil)))) = true
Prop: sub_check_ta1 (V ("ihz")) (("oci"::("npl"::(Nil)))) = true
Prop: sub_check_ta1 (V ("rfm")) (("mzh"::("cfy"::(Nil)))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string2::(string1::(Nil)))
lower
Cons(_, Cons(string1, Nil()))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
parent
deleteAll (listStation (lambda2)) (string2)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(_, string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string2)
remove lower
deleteAll(listStation(lambda2), string2)
remove upper
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove lower
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("acm")) (("rjr"::("lpl"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("acm"))) ("rjr")) ("lpl")) ((Nil))
Prop: sub_check_ta1 (P ("eln") (P ("fkc") (V ("jxw")))) (("bfb"::("azg"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("eln") (P ("fkc") (V ("jxw"))))) ("bfb")) ("azg")) ((Nil))
Prop: sub_check_ta1 (V ("ogl")) (("tls"::("kyd"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("ogl"))) ("tls")) ("kyd")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 66


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:7.)
intro string1(rank:7.)
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 67


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:7.)
intro string1(rank:7.)
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 68


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 69


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 70


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 71


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 72


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 73


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 74


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:7.)
=================================================
Progress: 75


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 76


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:7.)
=================================================
Progress: 77


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 78


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 79


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 80


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:7.)
=================================================
Progress: 81


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:7.)
=================================================
Progress: 82


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hip")) (("awb"::("xnr"::(Nil)))) = true
Prop: sub_check_ta1 (V ("ueh")) (("yqy"::("vto"::(Nil)))) = true
Prop: sub_check_ta1 (V ("kev")) (("fon"::("ndr"::(Nil)))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("wkg")) (("nex"::("qyf"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("wkg"))) ("nex")) ("qyf")) ((Nil))
Prop: sub_check_ta1 (V ("ggi")) (("vou"::("tui"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("ggi"))) ("vou")) ("tui")) ((Nil))
Prop: sub_check_ta1 (V ("sjk")) (("nhm"::("css"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("sjk"))) ("nhm")) ("css")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 83


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:9.)
intro string1(rank:9.)
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 84


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:9.)
intro string1(rank:9.)
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 85


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("myi")) (V ("wgi"))) (("lsq"::("hxf"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (C (V ("myi")) (V ("wgi")))) ("lsq")) ("hxf")) ((Nil))
Prop: sub_check_ta1 (V ("ecr")) (("qnq"::("djw"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("ecr"))) ("qnq")) ("djw")) ((Nil))
Prop: sub_check_ta1 (V ("iqm")) (("zuk"::("qgu"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("iqm"))) ("zuk")) ("qgu")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lew")) (("aao"::("ubg"::(Nil)))) = true
Prop: sub_check_ta1 (V ("ulg")) (("dpp"::("fpl"::(Nil)))) = true
Prop: sub_check_ta1 (C (C (V ("vts")) (V ("uqo"))) (V ("yzw"))) (("egn"::("ubk"::(Nil)))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 86


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:9.)
intro string1(rank:9.)
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 87


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:9.)
intro string1(rank:9.)
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 88


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 89


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 90


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 91


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 92


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 93


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 94


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 95


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 96


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 97


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 98


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 99


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 100


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 101


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 102


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 103


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 104


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 105


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 106


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 107


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 108


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 109


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 110


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 111


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 112


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 113


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 114


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 115


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 116


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 117


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 118


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 119


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 120


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 121


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 122


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 123


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 124


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 125


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string1)(rank:10.)
case string_eq (string1) (string2)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 126


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string1)(rank:10.)
case string_eq (string1) (string2)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 127


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 128


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 129


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 130


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string2)(rank:10.)
case string_eq (string2) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 131


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 132


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 133


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 134


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 135


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 136


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string2)(rank:10.)
case string_eq (string2) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 137


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 138


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 139


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 140


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 141


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 142


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ety")) (("oyd"::("ijh"::(Nil)))) = true
Prop: sub_check_ta1 (V ("rjk")) (("kqv"::("wum"::(Nil)))) = true
Prop: sub_check_ta1 (C (V ("dix")) (V ("faj"))) (("gyc"::("bxd"::(Nil)))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("spj")) (("ics"::("qjp"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("spj"))) ("ics")) ("qjp")) ((Nil))
Prop: sub_check_ta1 (C (V ("mcr")) (V ("ufm"))) (("hwo"::("uvo"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (C (V ("mcr")) (V ("ufm")))) ("hwo")) ("uvo")) ((Nil))
Prop: sub_check_ta1 (V ("zmz")) (("enk"::("inw"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("zmz"))) ("enk")) ("inw")) ((Nil))
=================================================
Progress: 143


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("sqk")) (("pmh"::("jxj"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("sqk"))) ("pmh")) ("jxj")) ((Nil))
Prop: sub_check_ta1 (C (V ("uym")) (V ("nhk"))) (("gix"::("blk"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (C (V ("uym")) (V ("nhk")))) ("gix")) ("blk")) ((Nil))
Prop: sub_check_ta1 (P ("tgc") (V ("slz"))) (("gbl"::("uij"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("tgc") (V ("slz")))) ("gbl")) ("uij")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("jnc")) (("iai"::("tne"::(Nil)))) = true
Prop: sub_check_ta1 (P ("pmm") (V ("hyw"))) (("nsl"::("pkm"::(Nil)))) = true
Prop: sub_check_ta1 (V ("fej")) (("gtt"::("kut"::(Nil)))) = true
=================================================
Progress: 144


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hhq")) (("hkx"::("fkp"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("hhq"))) ("hkx")) ("fkp")) ((Nil))
Prop: sub_check_ta1 (V ("uqg")) (("glj"::("kvx"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("uqg"))) ("glj")) ("kvx")) ((Nil))
Prop: sub_check_ta1 (V ("hqa")) (("skh"::("ndy"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("hqa"))) ("skh")) ("ndy")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("twa")) (("wrz"::("vbn"::(Nil)))) = true
Prop: sub_check_ta1 (V ("boj")) (("xuh"::("bnz"::(Nil)))) = true
Prop: sub_check_ta1 (C (P ("ncb") (P ("euq") (V ("fxd")))) (P ("qia") (V ("gbh")))) (("qar"::("rss"::(Nil)))) = true
=================================================
Progress: 145


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("wap")) (("ala"::("pzf"::(Nil)))) = true
Prop: sub_check_ta1 (V ("qlr")) (("dui"::("ufo"::(Nil)))) = true
Prop: sub_check_ta1 (V ("moe")) (("lzy"::("rug"::(Nil)))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("ybw")) (C (C (V ("pbd")) (V ("sgl"))) (P ("oyp") (V ("wgr"))))) (("ugx"::("plu"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (C (V ("ybw")) (C (C (V ("pbd")) (V ("sgl"))) (P ("oyp") (V ("wgr")))))) ("ugx")) ("plu")) ((Nil))
Prop: sub_check_ta1 (P ("pmt") (C (V ("brg")) (V ("nqc")))) (("xlh"::("osy"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("pmt") (C (V ("brg")) (V ("nqc"))))) ("xlh")) ("osy")) ((Nil))
Prop: sub_check_ta1 (V ("adf")) (("wrf"::("iul"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("adf"))) ("wrf")) ("iul")) ((Nil))
=================================================
Progress: 146


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 147


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 148


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 149


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 150


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 151


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 152


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 153


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 154


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 155


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 156


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 157


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 158


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 159


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 160


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 161


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 162


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10.)
rewrite Case1 in goal at 2(rank:26.)
case string_eq (string1) (string2)(rank:11.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
=================================================
Progress: 163


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10.)
rewrite <- Case1 in goal at 1(rank:10.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
rewrite Case1 in goal at 2(rank:26.)
rewrite Case1 in goal at 3(rank:26.)
rewrite <- Case1 in goal at 2(rank:10.)
case string_eq (string2) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 164


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10.)
rewrite Case1 in goal at 2(rank:26.)
case string_eq (string1) (string2)(rank:11.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
=================================================
Progress: 165


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10.)
rewrite <- Case1 in goal at 1(rank:10.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
rewrite Case1 in goal at 2(rank:26.)
rewrite Case1 in goal at 3(rank:26.)
rewrite <- Case1 in goal at 2(rank:10.)
case string_eq (string2) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 166


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10.)
rewrite Case1 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
=================================================
Progress: 167


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10.)
rewrite <- Case1 in goal at 1(rank:10.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
rewrite Case1 in goal at 2(rank:26.)
rewrite Case1 in goal at 3(rank:26.)
rewrite <- Case1 in goal at 2(rank:10.)
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 168


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 169


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 170


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10.)
rewrite Case1 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
=================================================
Progress: 171


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10.)
rewrite <- Case1 in goal at 1(rank:10.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
rewrite Case1 in goal at 2(rank:26.)
rewrite Case1 in goal at 3(rank:26.)
rewrite <- Case1 in goal at 2(rank:10.)
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 172


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 173


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 174


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 175


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 176


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 177


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 178


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 179


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 180


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 181


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 182


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 183


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 184


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 185


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 186


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 187


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 188


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 189


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 190


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 191


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 192


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 12
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 193


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 194


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 195


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("kks")) (("hve"::("riq"::(Nil)))) = true
Prop: sub_check_ta1 (V ("ktm")) (("vhs"::("toa"::(Nil)))) = true
Prop: sub_check_ta1 (P ("mvf") (V ("djx"))) (("vxl"::("dfm"::(Nil)))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string2::(string1::(Nil)))
lower
Cons(_, Cons(string1, Nil()))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
parent
deleteAll (listStation (lambda2)) (string2)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(_, string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string2)
remove lower
deleteAll(listStation(lambda2), string2)
remove upper
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove lower
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hzf")) (("igd"::("rzn"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("hzf"))) ("igd")) ("rzn")) ((Nil))
Prop: sub_check_ta1 (P ("xjs") (V ("qou"))) (("lhd"::("rgv"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("xjs") (V ("qou")))) ("lhd")) ("rgv")) ((Nil))
Prop: sub_check_ta1 (V ("ovl")) (("zxh"::("rrz"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("ovl"))) ("zxh")) ("rrz")) ((Nil))
=================================================
Progress: 196


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 197


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 198


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 12
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 199


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 200


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 201


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("oar")) (("hiv"::("dou"::(Nil)))) = true
Prop: sub_check_ta1 (P ("blg") (P ("efh") (C (V ("hid")) (C (C (C (C (P ("wuz") (V ("elu"))) (V ("eum"))) (P ("wqe") (P ("zkt") (V ("zod"))))) (V ("zzv"))) (C (V ("dfx")) (C (V ("xtt")) (C (V ("ygz")) (C (P ("rwq") (V ("vlr"))) (C (P ("eug") (V ("cwk"))) (V ("grr"))))))))))) (("koc"::("vuq"::(Nil)))) = true
Prop: sub_check_ta1 (P ("wld") (P ("tsn") (V ("ddj")))) (("zjz"::("lxw"::(Nil)))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string2::(string1::(Nil)))
lower
Cons(_, Cons(string1, Nil()))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
parent
deleteAll (listStation (lambda2)) (string2)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(_, string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string2)
remove lower
deleteAll(listStation(lambda2), string2)
remove upper
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove lower
deleteAll(deleteAll(listStation(lambda3), string3), string2)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string4), string3), string2)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("eyw")) (("lje"::("ktm"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("eyw"))) ("lje")) ("ktm")) ((Nil))
Prop: sub_check_ta1 (V ("qjo")) (("peb"::("eoj"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("qjo"))) ("peb")) ("eoj")) ((Nil))
Prop: sub_check_ta1 (V ("wrp")) (("rxh"::("hyl"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("wrp"))) ("rxh")) ("hyl")) ((Nil))
=================================================
Progress: 202


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 203


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string1)(rank:10.)
case string_eq (string2) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 204


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 205


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string3) (string2)(rank:10.)
case string_eq (string1) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 206


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 207


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string1)(rank:10.)
case string_eq (string2) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 208


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 209


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string3) (string2)(rank:10.)
case string_eq (string1) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 210


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 211


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 212


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 213


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 214


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 215


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 216


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 217


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 218


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10.)
rewrite Case2 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 219


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 1(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
case string_eq (string3) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 220


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:11.)
rewrite Case2 in goal at 2(rank:26.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 221


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
rewrite <- Cond1 in goal at 0(rank:18.)
case string_eq (string3) (string2)(rank:11.)
rewrite Cond1 in goal at 0(rank:18.)
rewrite Case2 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 1(rank:10.)
=================================================
Progress: 222


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10.)
rewrite Case2 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 223


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 1(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
case string_eq (string3) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 224


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:11.)
rewrite Case2 in goal at 2(rank:26.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 225


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
rewrite <- Cond1 in goal at 0(rank:18.)
case string_eq (string3) (string2)(rank:11.)
rewrite Cond1 in goal at 0(rank:18.)
rewrite Case2 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 1(rank:10.)
=================================================
Progress: 226


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:11.)
=================================================
Progress: 227


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 228


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 229


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 230


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 231


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 232


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 233


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:11.)
=================================================
Progress: 234


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 235


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 236


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 237


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 238


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 239


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 240


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:11.)
case string_eq (string2) (string1)(rank:11.)
=================================================
Progress: 241


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:11.)
=================================================
Progress: 242


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:11.)
case string_eq (string2) (string1)(rank:11.)
=================================================
Progress: 243


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:11.)
=================================================
Progress: 244


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 245


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 246


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 247


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 248


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 249


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 250


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 251


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 252


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 253


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10.)
rewrite Case2 in goal at 2(rank:26.)
case string_eq (string1) (string3)(rank:11.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 254


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 255


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 256


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 8
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 257


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 258


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 259


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 260


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("wjh")) (("cci"::("zxi"::("hic"::(Nil))))) = true
Prop: sub_check_ta1 (V ("wwk")) (("qzj"::("olw"::("tac"::(Nil))))) = true
Prop: sub_check_ta1 (V ("lwb")) (("rqc"::("lod"::("skq"::(Nil))))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string3::(string2::(string1::(Nil))))
lower
Cons(_, Cons(string2, Cons(string1, Nil())))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
parent
deleteAll (listStation (lambda2)) (string3)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(deleteAll(_, string2), string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string3)
remove lower
deleteAll(listStation(lambda2), string3)
remove upper
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove lower
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("qlm")) (("cgy"::("dkz"::("pcm"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("qlm"))) ("cgy")) ("dkz")) ("pcm")) ((Nil))
Prop: sub_check_ta1 (V ("yvo")) (("wen"::("jtu"::("zfc"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("yvo"))) ("wen")) ("jtu")) ("zfc")) ((Nil))
Prop: sub_check_ta1 (V ("yql")) (("fnq"::("tne"::("qhl"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("yql"))) ("fnq")) ("tne")) ("qhl")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 261


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:9.)
intro string2(rank:9.)
intro string3(rank:9.)
induction lambda1(rank:19.)
intro string1(rank:9.)
=================================================
Progress: 262


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:9.)
intro string2(rank:9.)
intro string3(rank:9.)
induction lambda1(rank:19.)
intro string1(rank:9.)
=================================================
Progress: 263


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 264


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro string2(rank:9.)
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 265


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 266


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 267


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 268


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro string2(rank:9.)
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 269


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 270


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 271


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 272


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 273


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 274


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 275


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 276


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 277


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 278


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 279


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string3(rank:9.)
=================================================
Progress: 280


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 281


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 282


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string3(rank:9.)
=================================================
Progress: 283


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 284


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 285


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 286


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 287


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 288


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 289


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 290


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ash")) (("cxr"::("pxi"::("xsa"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ash"))) ("cxr")) ("pxi")) ("xsa")) ((Nil))
Prop: sub_check_ta1 (V ("ffk")) (("asc"::("wsr"::("tge"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ffk"))) ("asc")) ("wsr")) ("tge")) ((Nil))
Prop: sub_check_ta1 (V ("beo")) (("jew"::("vho"::("isz"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("beo"))) ("jew")) ("vho")) ("isz")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 291


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 292


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:9.)
=================================================
Progress: 293


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("mlx")) (("mgq"::("glq"::("nsl"::(Nil))))) = true
Prop: sub_check_ta1 (C (V ("iwf")) (V ("yja"))) (("rlk"::("jfq"::("drd"::(Nil))))) = true
Prop: sub_check_ta1 (V ("qer")) (("sye"::("bzc"::("uvj"::(Nil))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 294


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 295


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("bve")) (("heq"::("hog"::("dys"::(Nil))))) = true
Prop: sub_check_ta1 (V ("pgj")) (("ztt"::("nft"::("lvg"::(Nil))))) = true
Prop: sub_check_ta1 (C (V ("ycm")) (V ("nfr"))) (("epu"::("wjf"::("ztx"::(Nil))))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("eiw")) (("jwu"::("wub"::("cva"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("eiw"))) ("jwu")) ("wub")) ("cva")) ((Nil))
Prop: sub_check_ta1 (V ("jku")) (("qhc"::("sjm"::("kbx"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("jku"))) ("qhc")) ("sjm")) ("kbx")) ((Nil))
Prop: sub_check_ta1 (V ("ggt")) (("wpd"::("hpl"::("uml"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ggt"))) ("wpd")) ("hpl")) ("uml")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 296


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 297


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ygk")) (("mte"::("gtx"::("dog"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ygk"))) ("mte")) ("gtx")) ("dog")) ((Nil))
Prop: sub_check_ta1 (V ("ugi")) (("iad"::("cvq"::("cxm"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ugi"))) ("iad")) ("cvq")) ("cxm")) ((Nil))
Prop: sub_check_ta1 (C (V ("wkj")) (C (V ("zmc")) (V ("kws")))) (("qph"::("yjs"::("bqb"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("wkj")) (C (V ("zmc")) (V ("kws"))))) ("qph")) ("yjs")) ("bqb")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("yqn")) (("fho"::("oks"::("pxv"::(Nil))))) = true
Prop: sub_check_ta1 (C (V ("akr")) (V ("gbv"))) (("jwt"::("bgd"::("tyf"::(Nil))))) = true
Prop: sub_check_ta1 (V ("isg")) (("epf"::("kbt"::("hum"::(Nil))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 298


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 299


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 300


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10.)
rewrite Case2 in goal at 2(rank:26.)
case string_eq (string1) (string3)(rank:11.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 301


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 302


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 303


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 8
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 304


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 305


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:8.)
=================================================
Progress: 306


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 307


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 308


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("cog")) (("irk"::("oie"::("vch"::(Nil))))) = true
Prop: sub_check_ta1 (V ("pfo")) (("lkr"::("xtz"::("vqq"::(Nil))))) = true
Prop: sub_check_ta1 (C (P ("ejs") (V ("nvu"))) (V ("lwt"))) (("hua"::("lpw"::("lnv"::(Nil))))) = true
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ffp")) (("emr"::("vwj"::("kma"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ffp"))) ("emr")) ("vwj")) ("kma")) ((Nil))
Prop: sub_check_ta1 (V ("fhq")) (("lbi"::("dld"::("dge"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("fhq"))) ("lbi")) ("dld")) ("dge")) ((Nil))
Prop: sub_check_ta1 (V ("nuz")) (("vwh"::("njo"::("wms"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("nuz"))) ("vwh")) ("njo")) ("wms")) ((Nil))
=================================================
Progress: 309


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 310


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 311


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 312


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 313


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 314


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 315


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 316


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 317


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 318


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 319


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 320


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 321


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 322


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 323


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 324


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 325


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 326


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 327


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 328


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 329


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 330


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 331


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 332


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 333


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 334


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 335


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 336


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 337


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 338


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 339


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 340


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 341


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 342


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 343


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
case string_eq (string2) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 344


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:19.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 345


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:19.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 346


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
case string_eq (string2) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 347


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 348


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 349


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 350


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 351


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 352


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 353


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 354


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 355


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 356


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 357


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 358


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 359


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 360


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 361


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 362


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 363


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 364


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 365


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 366


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 367


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 368


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 369


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
case string_eq (string2) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 370


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:19.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 371


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:19.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 372


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
case string_eq (string2) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 373


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 374


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 375


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 376


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 377


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string3)(rank:12.)
case string_eq (string3) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 378


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 379


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 380


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 381


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 382


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 383


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 384


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 385


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 386


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 387


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 388


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 389


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 390


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 391


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 392


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 393


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string3)(rank:12.)
case string_eq (string3) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 394


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 395


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 396


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 397


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 398


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 399


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 400


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 401


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 402


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 403


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string3)(rank:12.)
case string_eq (string3) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 404


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 405


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 406


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("iah")) (("vsr"::("blq"::("qvj"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("iah"))) ("vsr")) ("blq")) ("qvj")) ((Nil))
Prop: sub_check_ta1 (C (V ("hov")) (V ("gxu"))) (("yoq"::("ncz"::("ued"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("hov")) (V ("gxu")))) ("yoq")) ("ncz")) ("ued")) ((Nil))
Prop: sub_check_ta1 (V ("qcp")) (("fnn"::("gqr"::("dpl"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("qcp"))) ("fnn")) ("gqr")) ("dpl")) ((Nil))
=================================================
Progress: 407


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:11.)
=================================================
Progress: 408


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("gdl")) (("yez"::("vsu"::("uku"::(Nil))))) = true
Prop: sub_check_ta1 (V ("zqn")) (("pke"::("ymp"::("rjb"::(Nil))))) = true
Prop: sub_check_ta1 (C (C (C (V ("bhc")) (V ("apl"))) (C (C (V ("ftw")) (V ("uen"))) (V ("blx")))) (V ("pfi"))) (("ych"::("sng"::("kbo"::(Nil))))) = true
=================================================
Progress: 409


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:11.)
=================================================
Progress: 410


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("uoq") (P ("xzz") (V ("wqg")))) (("gxm"::("ovd"::("jnv"::(Nil))))) = true
Prop: sub_check_ta1 (V ("yfj")) (("svz"::("sep"::("xyp"::(Nil))))) = true
Prop: sub_check_ta1 (V ("cyr")) (("efy"::("ixt"::("zei"::(Nil))))) = true
=================================================
Progress: 411


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 412


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("knn")) (("bfo"::("pob"::("ipa"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("knn"))) ("bfo")) ("pob")) ("ipa")) ((Nil))
Prop: sub_check_ta1 (P ("hdx") (V ("oeu"))) (("ayz"::("pjh"::("yay"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P ("hdx") (V ("oeu")))) ("ayz")) ("pjh")) ("yay")) ((Nil))
Prop: sub_check_ta1 (V ("zdn")) (("ozt"::("nvr"::("qim"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("zdn"))) ("ozt")) ("nvr")) ("qim")) ((Nil))
=================================================
Progress: 413


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("mbk")) (("yyq"::("wue"::("lgl"::(Nil))))) = true
Prop: sub_check_ta1 (V ("nrx")) (("ope"::("iwc"::("esg"::(Nil))))) = true
Prop: sub_check_ta1 (V ("ifl")) (("wuw"::("wva"::("sav"::(Nil))))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("not") (P ("vhr") (V ("yhj")))) (("ozw"::("krb"::("qgg"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P ("not") (P ("vhr") (V ("yhj"))))) ("ozw")) ("krb")) ("qgg")) ((Nil))
Prop: sub_check_ta1 (V ("gma")) (("gag"::("kls"::("izt"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("gma"))) ("gag")) ("kls")) ("izt")) ((Nil))
Prop: sub_check_ta1 (V ("pvh")) (("ysy"::("dcz"::("vbd"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("pvh"))) ("ysy")) ("dcz")) ("vbd")) ((Nil))
=================================================
Progress: 414


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("evz")) (("bkj"::("gna"::("zdc"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("evz"))) ("bkj")) ("gna")) ("zdc")) ((Nil))
Prop: sub_check_ta1 (V ("jwn")) (("vro"::("ehe"::("iha"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("jwn"))) ("vro")) ("ehe")) ("iha")) ((Nil))
Prop: sub_check_ta1 (V ("fxy")) (("vic"::("esj"::("eoa"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("fxy"))) ("vic")) ("esj")) ("eoa")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("uyf")) (("vks"::("axm"::("qlg"::(Nil))))) = true
Prop: sub_check_ta1 (V ("yhr")) (("kwj"::("ria"::("tsh"::(Nil))))) = true
Prop: sub_check_ta1 (V ("ogs")) (("ewx"::("ggm"::("str"::(Nil))))) = true
=================================================
Progress: 415


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("pjt")) (V ("jir"))) (("vne"::("twl"::("bcy"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("pjt")) (V ("jir")))) ("vne")) ("twl")) ("bcy")) ((Nil))
Prop: sub_check_ta1 (C (V ("hwn")) (C (V ("hwh")) (C (V ("cgh")) (V ("srj"))))) (("vhu"::("sco"::("nwl"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("hwn")) (C (V ("hwh")) (C (V ("cgh")) (V ("srj")))))) ("vhu")) ("sco")) ("nwl")) ((Nil))
Prop: sub_check_ta1 (C (V ("emd")) (V ("uzm"))) (("nkb"::("pdm"::("isi"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("emd")) (V ("uzm")))) ("nkb")) ("pdm")) ("isi")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("qhm")) (("psc"::("rtd"::("pvq"::(Nil))))) = true
Prop: sub_check_ta1 (P ("fnz") (V ("rea"))) (("nsr"::("seu"::("mxf"::(Nil))))) = true
Prop: sub_check_ta1 (V ("cwg")) (("vxe"::("enq"::("kfl"::(Nil))))) = true
=================================================
Progress: 416


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("ebe")) (V ("zjq"))) (("afw"::("ewl"::("obj"::(Nil))))) = true
Prop: sub_check_ta1 (P ("jbt") (V ("nun"))) (("sbg"::("fxi"::("mtw"::(Nil))))) = true
Prop: sub_check_ta1 (V ("ohk")) (("ser"::("qsq"::("cqg"::(Nil))))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("csn") (V ("nfl"))) (("pxr"::("wwk"::("giq"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P ("csn") (V ("nfl")))) ("pxr")) ("wwk")) ("giq")) ((Nil))
Prop: sub_check_ta1 (V ("fid")) (("elj"::("hdl"::("eha"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("fid"))) ("elj")) ("hdl")) ("eha")) ((Nil))
Prop: sub_check_ta1 (V ("bpp")) (("cfd"::("bwz"::("hni"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("bpp"))) ("cfd")) ("bwz")) ("hni")) ((Nil))
=================================================
Progress: 417


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 418


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 419


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 420


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 421


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 422


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 423


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 424


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 425


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 426


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 427


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 428


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 429


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 430


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 431


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 432


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 433


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 434


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 435


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 436


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 437


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 438


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 439


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 440


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 441


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 442


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:12.)
=================================================
Progress: 443


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 444


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 445


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 446


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 447


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 448


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 449


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 450


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 451


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 452


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 453


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 454


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 455


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 456


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 457


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 458


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 459


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 460


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 461


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 462


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 463


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 464


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 465


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 466


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 467


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 468


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 469


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12.)
rewrite Case1 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
=================================================
Progress: 470


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite Case1 in goal at 0(rank:28.)
rewrite Case1 in goal at 1(rank:28.)
rewrite Case1 in goal at 2(rank:28.)
rewrite Case1 in goal at 3(rank:28.)
rewrite <- Case1 in goal at 2(rank:12.)
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 471


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 472


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:12.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 473


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 474


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 475


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 476


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 477


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 478


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 479


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 480


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 481


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 482


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 483


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 484


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 485


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 486


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 487


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 488


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 489


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 490


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 491


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 492


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 493


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 494


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 495


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 496


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 497


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 498


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 499


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 500


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 501


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 502


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 503


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 504


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 505


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 506


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 507


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 508


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string1)(rank:12.)
case string_eq (string2) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 509


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 510


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
case string_eq (string1) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 511


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 512


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string1)(rank:12.)
case string_eq (string2) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 513


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 514


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
case string_eq (string1) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 515


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 516


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string1)(rank:12.)
case string_eq (string2) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 517


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 518


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
case string_eq (string1) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 519


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 520


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string1)(rank:12.)
case string_eq (string2) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 521


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 522


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string3) (string2)(rank:12.)
case string_eq (string1) (string3)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 523


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 524


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string2)(rank:12.)
case string_eq (string3) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 525


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 526


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string3)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 527


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 528


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string2)(rank:12.)
case string_eq (string3) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 529


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 530


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string3)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 531


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 532


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string2)(rank:12.)
case string_eq (string3) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 533


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 534


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string3)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 535


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 536


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 537


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 538


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 539


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 540


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 541


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 542


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 543


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 544


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 545


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 546


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 547


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 548


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 549


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 550


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 551


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 552


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 553


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 554


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 555


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 556


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 557


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 558


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 559


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 560


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 561


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 562


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:12.)
=================================================
Progress: 563


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 564


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 565


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 566


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string3) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 567


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 568


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 569


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 570


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string3) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 571


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 572


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 573


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 574


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string3) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 575


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 576


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 577


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 578


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string3) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 579


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 580


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 581


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 582


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 583


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 584


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 585


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 586


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 587


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 588


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 589


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 590


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 1(rank:12.)
=================================================
Progress: 591


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13.)
=================================================
Progress: 592


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 593


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 594


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 595


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 596


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 597


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 598


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13.)
=================================================
Progress: 599


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 600


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 601


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 602


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 603


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 604


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 605


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13.)
=================================================
Progress: 606


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 607


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 608


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 609


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 610


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 611


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 612


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13.)
=================================================
Progress: 613


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 614


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 615


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 616


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 617


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 618


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 619


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 620


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 621


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 622


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 623


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 624


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 625


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 626


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 627


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 628


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 629


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 630


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 631


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 632


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 633


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 634


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 635


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 636


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 637


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 638


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 639


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 640


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
case string_eq (string2) (string1)(rank:13.)
=================================================
Progress: 641


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 642


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
case string_eq (string2) (string1)(rank:13.)
=================================================
Progress: 643


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 644


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
case string_eq (string2) (string1)(rank:13.)
=================================================
Progress: 645


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 646


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
case string_eq (string2) (string1)(rank:13.)
=================================================
Progress: 647


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 648


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 649


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 650


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 651


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 652


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 653


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 654


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 655


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 656


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 657


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 658


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 659


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 660


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 661


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 662


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 663


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 664


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 665


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 666


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 667


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 668


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("uoj")) (("qif"::("aqk"::("otc"::(Nil))))) = true
Prop: sub_check_ta1 (V ("cop")) (("rmw"::("zqy"::("doa"::(Nil))))) = true
Prop: sub_check_ta1 (V ("kcs")) (("ffe"::("hvy"::("psu"::(Nil))))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string3::(string2::(string1::(Nil))))
lower
Cons(_, Cons(string2, Cons(string1, Nil())))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
parent
deleteAll (listStation (lambda2)) (string3)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(deleteAll(_, string2), string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string3)
remove lower
deleteAll(listStation(lambda2), string3)
remove upper
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove lower
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lpu")) (("qdn"::("rdf"::("ysg"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("lpu"))) ("qdn")) ("rdf")) ("ysg")) ((Nil))
Prop: sub_check_ta1 (C (V ("tia")) (V ("rlm"))) (("qpk"::("pxe"::("gqu"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("tia")) (V ("rlm")))) ("qpk")) ("pxe")) ("gqu")) ((Nil))
Prop: sub_check_ta1 (C (V ("wiz")) (V ("bcc"))) (("osn"::("uvn"::("jrb"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("wiz")) (V ("bcc")))) ("osn")) ("uvn")) ("jrb")) ((Nil))
=================================================
Progress: 669


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 670


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 671


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 672


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 673


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 674


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 675


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 676


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 677


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lms")) (("eeb"::("bbz"::("pmu"::(Nil))))) = true
Prop: sub_check_ta1 (C (V ("flz")) (V ("wdy"))) (("zfi"::("ddk"::("uiv"::(Nil))))) = true
Prop: sub_check_ta1 (V ("wsh")) (("qkz"::("bpv"::("rvb"::(Nil))))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string3::(string2::(string1::(Nil))))
lower
Cons(_, Cons(string2, Cons(string1, Nil())))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
parent
deleteAll (listStation (lambda2)) (string3)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(deleteAll(_, string2), string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string3)
remove lower
deleteAll(listStation(lambda2), string3)
remove upper
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove lower
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ouk")) (("mhh"::("aia"::("cux"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ouk"))) ("mhh")) ("aia")) ("cux")) ((Nil))
Prop: sub_check_ta1 (V ("wbx")) (("txa"::("iww"::("yqb"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("wbx"))) ("txa")) ("iww")) ("yqb")) ((Nil))
Prop: sub_check_ta1 (V ("xog")) (("lgb"::("otb"::("uea"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("xog"))) ("lgb")) ("otb")) ("uea")) ((Nil))
=================================================
Progress: 678


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 679


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 680


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 681


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 682


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 683


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 684


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:10.)
=================================================
Progress: 685


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 686


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 687


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("uqk") (V ("mkf"))) (("fyg"::("fgk"::("trr"::(Nil))))) = true
Prop: sub_check_ta1 (C (P ("nau") (V ("nwb"))) (V ("agj"))) (("rvs"::("puf"::("xoe"::(Nil))))) = true
Prop: sub_check_ta1 (V ("acx")) (("pcd"::("upl"::("uqf"::(Nil))))) = true
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("xqr")) (("cpn"::("qer"::("hzc"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("xqr"))) ("cpn")) ("qer")) ("hzc")) ((Nil))
Prop: sub_check_ta1 (V ("rme")) (("cwk"::("zmn"::("haq"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("rme"))) ("cwk")) ("zmn")) ("haq")) ((Nil))
Prop: sub_check_ta1 (C (C (V ("ulu")) (V ("pxt"))) (C (P ("whu") (V ("yag"))) (V ("ebu")))) (("qoh"::("wgk"::("xii"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (C (V ("ulu")) (V ("pxt"))) (C (P ("whu") (V ("yag"))) (V ("ebu"))))) ("qoh")) ("wgk")) ("xii")) ((Nil))
=================================================
Progress: 688


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 689


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string1) (string3)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 690


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 691


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 692


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 693


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 694


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:10.)
=================================================
Progress: 695


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 696


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 697


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("exi")) (("wse"::("xtb"::("tyg"::(Nil))))) = true
Prop: sub_check_ta1 (V ("hfd")) (("imr"::("bhf"::("mpf"::(Nil))))) = true
Prop: sub_check_ta1 (V ("xdw")) (("zkd"::("yor"::("apq"::(Nil))))) = true
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ebg")) (("mzb"::("jqm"::("fdk"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ebg"))) ("mzb")) ("jqm")) ("fdk")) ((Nil))
Prop: sub_check_ta1 (V ("swp")) (("oui"::("uhq"::("zkl"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("swp"))) ("oui")) ("uhq")) ("zkl")) ((Nil))
Prop: sub_check_ta1 (V ("dgr")) (("evh"::("pop"::("yjl"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("dgr"))) ("evh")) ("pop")) ("yjl")) ((Nil))
=================================================
Progress: 698


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 699


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 700


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 701


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 702


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string4) (string1)(rank:12.)
case string_eq (string3) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 703


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 704


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 705


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 706


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 707


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 708


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 709


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 710


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 711


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 712


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 713


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 714


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 715


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 716


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 717


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 718


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 719


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 720


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 721


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 722


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 723


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 3(rank:28.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 724


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 725


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 726


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 727


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 728


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string4) (string3)(rank:12.)
case string_eq (string1) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 729


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 730


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 731


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 732


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 733


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 734


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 735


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 736


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 737


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 738


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 739


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 740


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string4) (string1)(rank:12.)
case string_eq (string3) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 741


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 742


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 743


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 744


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 745


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 746


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 747


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 748


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 749


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 750


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 751


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 752


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 753


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 754


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 755


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 756


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 757


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 758


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 759


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 760


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 761


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 3(rank:28.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 762


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 763


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 764


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 765


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 766


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string4) (string3)(rank:12.)
case string_eq (string1) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 767


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 768


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 769


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 770


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 771


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 772


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 773


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 774


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 775


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12.)
rewrite Case2 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 776


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 777


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 778


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string4) (string1)(rank:12.)
case string_eq (string3) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 779


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 780


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 781


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string3) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 782


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 783


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13.)
=================================================
Progress: 784


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 785


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 786


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 787


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 788


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 789


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 790


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 791


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 792


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 793


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 794


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string3) (string1)(rank:13.)
=================================================
Progress: 795


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 796


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 797


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 798


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 799


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 1(rank:12.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 3(rank:28.)
rewrite <- Case2 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 800


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 801


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 802


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 803


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 804


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string4) (string3)(rank:12.)
case string_eq (string1) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 805


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 806


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 807


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 808


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string3)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 809


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 810


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 811


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 812


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 813


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 814


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:13.)
=================================================
Progress: 815


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:13.)
=================================================
Progress: 816


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 817


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 818


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:13.)
=================================================
Progress: 819


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:13.)
=================================================
Progress: 820


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 821


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
case string_eq (string3) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Case2 in goal at 2(rank:28.)
rewrite Case2 in goal at 0(rank:28.)
rewrite Case2 in goal at 1(rank:28.)
=================================================
Progress: 822


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:13.)
=================================================
Progress: 823


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:13.)
=================================================
Progress: 824


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 825


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 826


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 827


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 828


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 829


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 830


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 831


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 832


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 833


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 834


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 835


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 836


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 837


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 838


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 839


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 840


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 841


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string4) (string1)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 842


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 843


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 844


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 845


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 846


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 847


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 848


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 849


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 850


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string2) (string1)(rank:13.)
=================================================
Progress: 851


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 852


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:13.)
=================================================
Progress: 853


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 854


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 855


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string4) (string2)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 856


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 857


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 858


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 859


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 860


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 861


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 862


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 863


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 864


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 865


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string1)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 866


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 867


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string2)(rank:12.)
case string_eq (string1) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 868


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 869


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 870


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 871


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 872


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 873


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 874


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case4 in goal at 2(rank:28.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 875


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case4 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 1(rank:12.)
=================================================
Progress: 876


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 877


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 878


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 879


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 880


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 881


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 882


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 883


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string2) (string1)(rank:13.)
=================================================
Progress: 884


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 885


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 886


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 887


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 888


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 889


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 890


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 891


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 892


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 893


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 894


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 895


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
case string_eq (string1) (string2)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 896


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 897


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 898


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:13.)
=================================================
Progress: 899


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 900


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 901


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 902


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 903


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 904


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string4) (string1)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 905


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 906


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 907


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 908


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 909


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 910


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 911


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 912


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 913


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string2) (string1)(rank:13.)
=================================================
Progress: 914


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 915


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:13.)
=================================================
Progress: 916


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 917


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 918


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string4) (string2)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 919


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 920


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 921


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 922


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 923


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 924


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 925


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 926


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 927


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 928


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string1)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 929


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 930


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string2)(rank:12.)
case string_eq (string1) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 931


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 932


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 933


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 934


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 935


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 936


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 937


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case4 in goal at 2(rank:28.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 938


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case4 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 1(rank:12.)
=================================================
Progress: 939


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 940


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 941


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 942


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 943


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 944


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 945


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 946


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string2) (string1)(rank:13.)
=================================================
Progress: 947


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 948


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 949


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 950


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 951


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 952


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 953


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 954


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 955


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 956


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 957


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 958


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
case string_eq (string1) (string2)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 959


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 960


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 961


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:13.)
=================================================
Progress: 962


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 963


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 964


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 965


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 966


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 967


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string4) (string1)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 968


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 969


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 970


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 971


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 972


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 973


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 974


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 975


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 976


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string2) (string1)(rank:13.)
=================================================
Progress: 977


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 978


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:13.)
=================================================
Progress: 979


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 980


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 981


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string4) (string2)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 982


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 983


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:12.)
=================================================
Progress: 984


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 985


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 1(rank:12.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Case3 in goal at 2(rank:12.)
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 986


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 987


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 988


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 989


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 990


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 991


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string1)(rank:12.)
case string_eq (string2) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 992


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 993


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string2)(rank:12.)
case string_eq (string1) (string4)(rank:12.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Cond1 in goal at 0(rank:19.)
=================================================
Progress: 994


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 995


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 996


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 997


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:12.)
=================================================
Progress: 998


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12.)
rewrite Case4 in goal at 2(rank:28.)
case string_eq (string2) (string4)(rank:13.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 999


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 1(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
case string_eq (string4) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
rewrite Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1000


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13.)
rewrite Case4 in goal at 2(rank:28.)
rewrite Case4 in goal at 0(rank:28.)
rewrite Case4 in goal at 1(rank:28.)
=================================================
Progress: 1001


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case4 in goal at 0(rank:12.)
rewrite <- Case4 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case4 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 1(rank:12.)
=================================================
Progress: 1002


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13.)
=================================================
Progress: 1003


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1004


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1005


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12.)
=================================================
Progress: 1006


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1007


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1008


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1009


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:13.)
case string_eq (string2) (string1)(rank:13.)
=================================================
Progress: 1010


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13.)
=================================================
Progress: 1011


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1012


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 1013


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1014


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:28.)
rewrite <- Case4 in goal at 0(rank:28.)
=================================================
Progress: 1015


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1016


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12.)
rewrite <- Case3 in goal at 2(rank:12.)
rewrite <- Cond1 in goal at 0(rank:20.)
case string_eq (string4) (string2)(rank:13.)
rewrite Cond1 in goal at 0(rank:20.)
rewrite Case3 in goal at 0(rank:28.)
rewrite <- Case3 in goal at 1(rank:12.)
=================================================
Progress: 1017


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1018


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1019


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1020


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1021


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
case string_eq (string1) (string2)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
rewrite Case3 in goal at 2(rank:28.)
rewrite Case3 in goal at 3(rank:28.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1022


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1023


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case string_eq (string4) (string2)(rank:13.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1024


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 1(rank:13.)
=================================================
Progress: 1025


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1026


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1027


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1028


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1029


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1030


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1031


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1032


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1033


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1034


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1035


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1036


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1037


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1038


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string1) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 1039


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1040


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1041


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 12
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 1042


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 98
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1043


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1044


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1045


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("bot") (V ("vew"))) (V ("uqt"))) (("exw"::("pyq"::("asw"::("yez"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("kej")) (("ugu"::("btj"::("rkv"::("fgu"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("ffg")) (("qcw"::("vsz"::("vgz"::("bpq"::(Nil)))))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string4::(string3::(string2::(string1::(Nil)))))
lower
Cons(_, Cons(string3, Cons(string2, Cons(string1, Nil()))))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove upper
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
remove lower
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
parent
deleteAll (listStation (lambda2)) (string4)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(deleteAll(deleteAll(_, string3), string2), string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string4)
remove lower
deleteAll(listStation(lambda2), string4)
remove upper
deleteAll(deleteAll(listStation(lambda3), string5), string4)
remove lower
deleteAll(deleteAll(listStation(lambda3), string5), string4)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string6), string5), string4)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string6), string5), string4)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("yir") (P ("szp") (V ("euv")))) (("fdh"::("ero"::("uvn"::("kbk"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("yir") (P ("szp") (V ("euv"))))) ("fdh")) ("ero")) ("uvn")) ("kbk")) ((Nil))
Prop: sub_check_ta1 (V ("tav")) (("rup"::("vwj"::("fkv"::("byo"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("tav"))) ("rup")) ("vwj")) ("fkv")) ("byo")) ((Nil))
Prop: sub_check_ta1 (V ("xps")) (("chi"::("tnw"::("rdl"::("nlx"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("xps"))) ("chi")) ("tnw")) ("rdl")) ("nlx")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 1046


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 1047


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 1048


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1049


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro string2(rank:11.)
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1050


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1051


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1052


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1053


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1054


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro string2(rank:11.)
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1055


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1056


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1057


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1058


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1059


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1060


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1061


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1062


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1063


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1064


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1065


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1066


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1067


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1068


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1069


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1070


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1071


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1072


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 1073


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1074


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1075


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1076


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1077


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1078


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1079


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1080


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 1081


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1082


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1083


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 1084


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1085


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1086


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1087


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 1088


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11.)
=================================================
Progress: 1089


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1090


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1091


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11.)
=================================================
Progress: 1092


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 1093


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1094


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11.)
=================================================
Progress: 1095


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 1096


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1097


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11.)
=================================================
Progress: 1098


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 1099


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 1100


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1101


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1102


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1103


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1104


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1105


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1106


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1107


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1108


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1109


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1110


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1111


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("pdg")) (("czl"::("zrf"::("hfa"::("bou"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("pdg"))) ("czl")) ("zrf")) ("hfa")) ("bou")) ((Nil))
Prop: sub_check_ta1 (V ("eal")) (("alr"::("qos"::("spv"::("jbj"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("eal"))) ("alr")) ("qos")) ("spv")) ("jbj")) ((Nil))
Prop: sub_check_ta1 (V ("plz")) (("ugd"::("ley"::("bzi"::("jqn"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("plz"))) ("ugd")) ("ley")) ("bzi")) ("jqn")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1112


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:13.)
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
intro string1(rank:13.)
=================================================
Progress: 1113


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("vie")) (("gyq"::("evd"::("vdq"::("ylp"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("vie"))) ("gyq")) ("evd")) ("vdq")) ("ylp")) ((Nil))
Prop: sub_check_ta1 (C (V ("dpi")) (V ("txb"))) (("icl"::("vrf"::("jyi"::("eld"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (V ("dpi")) (V ("txb")))) ("icl")) ("vrf")) ("jyi")) ("eld")) ((Nil))
Prop: sub_check_ta1 (V ("tzh")) (("xim"::("kbe"::("pzt"::("yur"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("tzh"))) ("xim")) ("kbe")) ("pzt")) ("yur")) ((Nil))
=================================================
Progress: 1114


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("tle") (C (P ("ikk") (C (C (V ("yed")) (V ("dhk"))) (V ("znk")))) (V ("lqq")))) (("iub"::("rak"::("clo"::("dof"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("tle") (C (P ("ikk") (C (C (V ("yed")) (V ("dhk"))) (V ("znk")))) (V ("lqq"))))) ("iub")) ("rak")) ("clo")) ("dof")) ((Nil))
Prop: sub_check_ta1 (C (P ("wjj") (V ("cyb"))) (V ("rwc"))) (("ikt"::("fdc"::("uen"::("xlz"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (P ("wjj") (V ("cyb"))) (V ("rwc")))) ("ikt")) ("fdc")) ("uen")) ("xlz")) ((Nil))
Prop: sub_check_ta1 (V ("oam")) (("fxz"::("hfz"::("kal"::("faf"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("oam"))) ("fxz")) ("hfz")) ("kal")) ("faf")) ((Nil))
=================================================
Progress: 1115


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("fzt")) (("dhy"::("toj"::("riw"::("gtf"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("fzt"))) ("dhy")) ("toj")) ("riw")) ("gtf")) ((Nil))
Prop: sub_check_ta1 (V ("ega")) (("kwh"::("yuz"::("ckc"::("uxu"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("ega"))) ("kwh")) ("yuz")) ("ckc")) ("uxu")) ((Nil))
Prop: sub_check_ta1 (P ("rnp") (V ("ltq"))) (("grz"::("jxn"::("jky"::("eqe"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("rnp") (V ("ltq")))) ("grz")) ("jxn")) ("jky")) ("eqe")) ((Nil))
=================================================
Progress: 1116


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1117


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("xze")) (("kwy"::("ohx"::("gfx"::("mds"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("kqr")) (("hny"::("uxx"::("nqj"::("nlh"::(Nil)))))) = true
Prop: sub_check_ta1 (C (C (V ("mlx")) (P ("iil") (V ("gte")))) (V ("ncs"))) (("pdq"::("xia"::("kmc"::("wey"::(Nil)))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1118


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:13.)
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
intro string1(rank:13.)
=================================================
Progress: 1119


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("ytr")) (V ("kup"))) (("dkm"::("tzm"::("saa"::("ggv"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("ekj")) (("ato"::("lzz"::("woi"::("eyg"::(Nil)))))) = true
Prop: sub_check_ta1 (C (V ("tnq")) (V ("zkp"))) (("bqt"::("snf"::("jow"::("gnr"::(Nil)))))) = true
=================================================
Progress: 1120


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("uqd")) (("ysp"::("xvz"::("byk"::("ujv"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("fyo")) (("zsm"::("hce"::("uxc"::("rjj"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("mou")) (("swr"::("raz"::("uxk"::("yqu"::(Nil)))))) = true
=================================================
Progress: 1121


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("htq")) (("owg"::("aum"::("lhq"::("ldg"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("wgg") (V ("qmc"))) (("mtf"::("ojl"::("mku"::("kqr"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("jku")) (("tnl"::("swm"::("wmr"::("kbk"::(Nil)))))) = true
=================================================
Progress: 1122


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("qfb")) (P ("brf") (V ("abz")))) (("qiv"::("mpp"::("cox"::("cij"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("kjc") (V ("yma"))) (("cie"::("ckz"::("ach"::("ibv"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("khz")) (("ewd"::("trt"::("zpg"::("wvj"::(Nil)))))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("xtd") (V ("lbp"))) (("mog"::("qvj"::("ahf"::("zui"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("xtd") (V ("lbp")))) ("mog")) ("qvj")) ("ahf")) ("zui")) ((Nil))
Prop: sub_check_ta1 (V ("gxc")) (("jno"::("oux"::("jgq"::("ovh"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("gxc"))) ("jno")) ("oux")) ("jgq")) ("ovh")) ((Nil))
Prop: sub_check_ta1 (C (V ("yty")) (V ("pgv"))) (("sln"::("vhz"::("mzs"::("qud"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (V ("yty")) (V ("pgv")))) ("sln")) ("vhz")) ("mzs")) ("qud")) ((Nil))
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1123


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:13.)
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
intro string1(rank:13.)
=================================================
Progress: 1124


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("lpv") (C (V ("gqn")) (P ("bsv") (V ("hku"))))) (("wpk"::("vif"::("pha"::("bnv"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("lpv") (C (V ("gqn")) (P ("bsv") (V ("hku")))))) ("wpk")) ("vif")) ("pha")) ("bnv")) ((Nil))
Prop: sub_check_ta1 (C (V ("diu")) (V ("jxi"))) (("mop"::("qsn"::("vjr"::("tvc"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (V ("diu")) (V ("jxi")))) ("mop")) ("qsn")) ("vjr")) ("tvc")) ((Nil))
Prop: sub_check_ta1 (V ("ywa")) (("qwz"::("iwh"::("nbe"::("dpy"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("ywa"))) ("qwz")) ("iwh")) ("nbe")) ("dpy")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("efh")) (("jaj"::("sva"::("ltr"::("ilx"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("sme")) (("egw"::("qyx"::("pzl"::("ujb"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("qpz")) (("ohp"::("kzi"::("xrj"::("pcx"::(Nil)))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1125


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:13.)
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
intro string1(rank:13.)
=================================================
Progress: 1126


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1127


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string1) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 1128


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1129


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1130


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 12
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 1131


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 98
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1132


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:10.)
=================================================
Progress: 1133


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1134


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1135


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string2
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("kdl")) (V ("tet"))) (("qix"::("psn"::("lvi"::("zuv"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("iwp")) (("nez"::("qbz"::("elo"::("bvv"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("ujt")) (("ect"::("lbw"::("pug"::("uww"::(Nil)))))) = true
previous tactics
simpl in goal
intro string2
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("qlx")) (("tbt"::("tef"::("dgy"::("xuu"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("qlx"))) ("tbt")) ("tef")) ("dgy")) ("xuu")) ((Nil))
Prop: sub_check_ta1 (V ("rjj")) (("zmd"::("rar"::("vpl"::("ijs"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("rjj"))) ("zmd")) ("rar")) ("vpl")) ("ijs")) ((Nil))
Prop: sub_check_ta1 (P ("sue") (P ("mjn") (V ("bjv")))) (("kmj"::("nxm"::("yuv"::("qzy"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("sue") (P ("mjn") (V ("bjv"))))) ("kmj")) ("nxm")) ("yuv")) ("qzy")) ((Nil))
=================================================
Progress: 1136


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1137


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12.)
rewrite Case3 in goal at 2(rank:28.)
case string_eq (string1) (string4)(rank:13.)
rewrite Case3 in goal at 0(rank:28.)
rewrite Case3 in goal at 1(rank:28.)
=================================================
Progress: 1138


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12.)
=================================================
Progress: 1139


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1140


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
Case5 : string_eq (string2) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 12
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 1141


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 98
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1142


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:10.)
=================================================
Progress: 1143


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:10.)
=================================================
Progress: 1144


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1145


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1146


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro string2
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("oly") (P ("zjm") (V ("ose")))) (V ("zco"))) (("bkp"::("lgv"::("iht"::("giu"::(Nil)))))) = true
Prop: sub_check_ta1 (C (V ("vxq")) (P ("fxu") (C (V ("qut")) (V ("foi"))))) (("pph"::("dvw"::("cyo"::("lav"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("iow")) (("mrl"::("jml"::("ack"::("dya"::(Nil)))))) = true
previous tactics
simpl in goal
intro string1
intro string2
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("zpu")) (V ("uqu"))) (("bnj"::("erx"::("wel"::("stt"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (V ("zpu")) (V ("uqu")))) ("bnj")) ("erx")) ("wel")) ("stt")) ((Nil))
Prop: sub_check_ta1 (V ("lbb")) (("peh"::("hzz"::("pln"::("csr"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("lbb"))) ("peh")) ("hzz")) ("pln")) ("csr")) ((Nil))
Prop: sub_check_ta1 (V ("htx")) (("zov"::("rhw"::("rxq"::("vtk"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("htx"))) ("zov")) ("rhw")) ("rxq")) ("vtk")) ((Nil))
=================================================
Progress: 1147


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1148


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1149


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1150


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1151


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1152


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1153


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1154


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1155


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 1156


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 1157


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 1158


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 1159


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 1160


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 1161


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 1162


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 1163


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 1164


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 1165


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1166


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1167


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1168


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1169


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1170


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1171


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1172


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1173


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1174


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1175


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1176


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1177


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1178


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1179


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1180


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1181


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1182


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1183


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1184


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1185


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1186


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1187


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1188


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1189


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1190


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1191


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1192


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1193


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1194


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1195


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1196


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1197


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1198


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1199


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1200


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1201


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1202


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1203


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1204


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1205


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1206


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1207


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1208


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1209


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1210


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1211


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1212


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1213


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1214


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1215


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1216


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1217


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1218


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1219


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1220


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1221


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1222


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1223


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1224


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1225


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1226


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1227


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1228


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1229


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1230


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1231


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1232


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1233


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1234


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1235


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string5) (string4)(rank:14.)
case string_eq (string4) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1236


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1237


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1238


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1239


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1240


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1241


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1242


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1243


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1244


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1245


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1246


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1247


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1248


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1249


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1250


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1251


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1252


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1253


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1254


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1255


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1256


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1257


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1258


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1259


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1260


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1261


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1262


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1263


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1264


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 1265


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1266


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1267


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1268


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 1269


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1270


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1271


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1272


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1273


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string5) (string4)(rank:14.)
case string_eq (string4) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1274


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string5) (string4)(rank:14.)
case string_eq (string4) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1275


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1276


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1277


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 1278


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1279


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1280


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 1281


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1282


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1283


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 1284


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1285


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1286


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 1287


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1288


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1289


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 1290


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1291


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1292


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 1293


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1294


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1295


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 1296


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 1297


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1298


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 1299


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 1300


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 1301


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1302


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1303


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string5) (string4)(rank:14.)
case string_eq (string4) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1304


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1305


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1306


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1307


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1308


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1309


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1310


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1311


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1312


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1313


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1314


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1315


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1316


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1317


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1318


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1319


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1320


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1321


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1322


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1323


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1324


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 1325


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string5) (string4)(rank:14.)
case string_eq (string4) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1326


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1327


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:13.)
=================================================
Progress: 1328


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("xoc") (C (C (V ("rig")) (C (V ("bym")) (V ("ezy")))) (V ("juy")))) (("fcr"::("buo"::("cck"::("jvq"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("xoc") (C (C (V ("rig")) (C (V ("bym")) (V ("ezy")))) (V ("juy"))))) ("fcr")) ("buo")) ("cck")) ("jvq")) ((Nil))
Prop: sub_check_ta1 (V ("ryl")) (("aqt"::("akr"::("izi"::("umv"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("ryl"))) ("aqt")) ("akr")) ("izi")) ("umv")) ((Nil))
Prop: sub_check_ta1 (V ("fat")) (("zks"::("fcv"::("tqk"::("agr"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("fat"))) ("zks")) ("fcv")) ("tqk")) ("agr")) ((Nil))
=================================================
Progress: 1329


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("lsk")) (V ("mvg"))) (("ccq"::("dmw"::("qiw"::("cfy"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (V ("lsk")) (V ("mvg")))) ("ccq")) ("dmw")) ("qiw")) ("cfy")) ((Nil))
Prop: sub_check_ta1 (C (V ("dhc")) (V ("org"))) (("olw"::("ppm"::("gzd"::("fje"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (V ("dhc")) (V ("org")))) ("olw")) ("ppm")) ("gzd")) ("fje")) ((Nil))
Prop: sub_check_ta1 (V ("oyu")) (("uos"::("qkr"::("jyg"::("gmf"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("oyu"))) ("uos")) ("qkr")) ("jyg")) ("gmf")) ((Nil))
=================================================
Progress: 1330


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lwq")) (("ihy"::("qbc"::("uys"::("amb"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("lwq"))) ("ihy")) ("qbc")) ("uys")) ("amb")) ((Nil))
Prop: sub_check_ta1 (V ("sqr")) (("odg"::("ssn"::("fmm"::("gwd"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("sqr"))) ("odg")) ("ssn")) ("fmm")) ("gwd")) ((Nil))
Prop: sub_check_ta1 (P ("zfa") (C (C (V ("ggn")) (C (V ("uut")) (P ("eom") (V ("mal"))))) (V ("cfj")))) (("xtx"::("ytl"::("ufm"::("nuw"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("zfa") (C (C (V ("ggn")) (C (V ("uut")) (P ("eom") (V ("mal"))))) (V ("cfj"))))) ("xtx")) ("ytl")) ("ufm")) ("nuw")) ((Nil))
=================================================
Progress: 1331


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("xxc")) (V ("adq"))) (("mke"::("amm"::("ors"::("fpb"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (V ("xxc")) (V ("adq")))) ("mke")) ("amm")) ("ors")) ("fpb")) ((Nil))
Prop: sub_check_ta1 (V ("fqh")) (("kcs"::("zvp"::("alf"::("hzl"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("fqh"))) ("kcs")) ("zvp")) ("alf")) ("hzl")) ((Nil))
Prop: sub_check_ta1 (V ("eer")) (("trx"::("wki"::("dsd"::("usj"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("eer"))) ("trx")) ("wki")) ("dsd")) ("usj")) ((Nil))
=================================================
Progress: 1332


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:13.)
=================================================
Progress: 1333


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("aib")) (P ("jam") (V ("peo")))) (("iqf"::("cxo"::("wal"::("fgz"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("wtt")) (("sat"::("boe"::("gqr"::("kio"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("xzg")) (("ked"::("dlv"::("jmu"::("xsq"::(Nil)))))) = true
=================================================
Progress: 1334


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("nkj") (V ("eus"))) (("iwl"::("xfx"::("bon"::("hlf"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("ipu")) (("erx"::("mkr"::("qbp"::("bqx"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("jgq") (P ("cjd") (P ("rix") (V ("qoc"))))) (("wcg"::("cys"::("jqr"::("jzz"::(Nil)))))) = true
=================================================
Progress: 1335


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("uhm")) (V ("thd"))) (("tys"::("xqk"::("vny"::("lci"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("gpo")) (("fvt"::("txs"::("wop"::("shz"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("aca")) (("hyh"::("iwx"::("cmj"::("rhh"::(Nil)))))) = true
=================================================
Progress: 1336


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("guw")) (("bfh"::("vut"::("klv"::("igq"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("bds")) (("nns"::("rmx"::("ssr"::("jrn"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("nkt") (P ("yxs") (V ("cyh")))) (("zmx"::("wwv"::("axh"::("nlg"::(Nil)))))) = true
=================================================
Progress: 1337


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:13.)
=================================================
Progress: 1338


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("old")) (("mxq"::("roy"::("lwm"::("zgc"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("hyr")) (("qqw"::("nun"::("pyu"::("tth"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("tjw")) (("ruw"::("pcu"::("zgb"::("daq"::(Nil)))))) = true
=================================================
Progress: 1339


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("keg")) (("wye"::("kpx"::("wsu"::("pxf"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("mbv")) (("iyw"::("qeb"::("qhw"::("qld"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("frm")) (("njq"::("tyw"::("thc"::("zob"::(Nil)))))) = true
=================================================
Progress: 1340


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("xbr") (V ("uzn"))) (("eun"::("ilz"::("gbr"::("exl"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("vbk")) (("sqo"::("lak"::("cor"::("she"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("flz") (V ("las"))) (("jdd"::("bse"::("nrt"::("tzy"::(Nil)))))) = true
=================================================
Progress: 1341


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("djf")) (("yjh"::("sng"::("ehp"::("sfz"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("ykl")) (("ygr"::("jpc"::("ffr"::("bmq"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("cqu")) (("las"::("xhz"::("kpm"::("rcv"::(Nil)))))) = true
=================================================
Progress: 1342


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:13.)
=================================================
Progress: 1343


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("tps")) (("ekr"::("vqo"::("hwg"::("vfh"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("tps"))) ("ekr")) ("vqo")) ("hwg")) ("vfh")) ((Nil))
Prop: sub_check_ta1 (V ("bhm")) (("vbc"::("evx"::("fxk"::("kqk"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("bhm"))) ("vbc")) ("evx")) ("fxk")) ("kqk")) ((Nil))
Prop: sub_check_ta1 (C (P ("mhv") (V ("yok"))) (V ("oag"))) (("pba"::("ojm"::("lit"::("ynk"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (P ("mhv") (V ("yok"))) (V ("oag")))) ("pba")) ("ojm")) ("lit")) ("ynk")) ((Nil))
=================================================
Progress: 1344


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("icn")) (("vqo"::("wob"::("rgx"::("ocu"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("icn"))) ("vqo")) ("wob")) ("rgx")) ("ocu")) ((Nil))
Prop: sub_check_ta1 (V ("vgf")) (("zpj"::("wvk"::("kei"::("dmt"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("vgf"))) ("zpj")) ("wvk")) ("kei")) ("dmt")) ((Nil))
Prop: sub_check_ta1 (V ("uox")) (("osv"::("nnp"::("xse"::("glg"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("uox"))) ("osv")) ("nnp")) ("xse")) ("glg")) ((Nil))
=================================================
Progress: 1345


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lxj")) (("fwf"::("cts"::("zub"::("hhz"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("lxj"))) ("fwf")) ("cts")) ("zub")) ("hhz")) ((Nil))
Prop: sub_check_ta1 (P ("lem") (V ("ykj"))) (("ybz"::("vtk"::("tsz"::("wie"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("lem") (V ("ykj")))) ("ybz")) ("vtk")) ("tsz")) ("wie")) ((Nil))
Prop: sub_check_ta1 (V ("ndy")) (("kau"::("dls"::("aui"::("vsd"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("ndy"))) ("kau")) ("dls")) ("aui")) ("vsd")) ((Nil))
=================================================
Progress: 1346


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hht")) (("oed"::("edb"::("ycf"::("yhj"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("hht"))) ("oed")) ("edb")) ("ycf")) ("yhj")) ((Nil))
Prop: sub_check_ta1 (V ("kga")) (("fih"::("tvh"::("ibp"::("yxg"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("kga"))) ("fih")) ("tvh")) ("ibp")) ("yxg")) ((Nil))
Prop: sub_check_ta1 (V ("fuc")) (("xxd"::("uwq"::("zdp"::("uhj"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("fuc"))) ("xxd")) ("uwq")) ("zdp")) ("uhj")) ((Nil))
=================================================
Progress: 1347


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("laa")) (("ydc"::("rhv"::("qps"::("xul"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("goh")) (("szq"::("fcw"::("mxm"::("jdw"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("idk") (P ("yfg") (P ("bjn") (V ("fui"))))) (("gkx"::("zwy"::("ncb"::("vni"::(Nil)))))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("ias") (V ("zfg"))) (V ("iuu"))) (("gbs"::("pnp"::("dti"::("prq"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (P ("ias") (V ("zfg"))) (V ("iuu")))) ("gbs")) ("pnp")) ("dti")) ("prq")) ((Nil))
Prop: sub_check_ta1 (C (V ("fvw")) (P ("nrm") (P ("vuf") (V ("zey"))))) (("yfb"::("rlv"::("sva"::("bav"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (V ("fvw")) (P ("nrm") (P ("vuf") (V ("zey")))))) ("yfb")) ("rlv")) ("sva")) ("bav")) ((Nil))
Prop: sub_check_ta1 (V ("lzw")) (("eop"::("wts"::("uke"::("dss"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("lzw"))) ("eop")) ("wts")) ("uke")) ("dss")) ((Nil))
=================================================
Progress: 1348


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("dje")) (("xkh"::("dkj"::("liv"::("jtq"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("dje"))) ("xkh")) ("dkj")) ("liv")) ("jtq")) ((Nil))
Prop: sub_check_ta1 (V ("ujk")) (("wmt"::("xxt"::("iqg"::("xoi"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("ujk"))) ("wmt")) ("xxt")) ("iqg")) ("xoi")) ((Nil))
Prop: sub_check_ta1 (V ("clf")) (("yte"::("btg"::("gnq"::("kku"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("clf"))) ("yte")) ("btg")) ("gnq")) ("kku")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("xmx") (V ("dxc"))) (("fni"::("xyf"::("qkk"::("jqc"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("ftu")) (("qey"::("qgl"::("dof"::("fnw"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("gjv")) (("vnh"::("wdb"::("mil"::("jvn"::(Nil)))))) = true
=================================================
Progress: 1349


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("awc")) (("oas"::("lya"::("yhv"::("tdz"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("awc"))) ("oas")) ("lya")) ("yhv")) ("tdz")) ((Nil))
Prop: sub_check_ta1 (V ("dyh")) (("ydu"::("qms"::("qru"::("lae"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("dyh"))) ("ydu")) ("qms")) ("qru")) ("lae")) ((Nil))
Prop: sub_check_ta1 (V ("xpp")) (("zrt"::("mci"::("bio"::("mno"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("xpp"))) ("zrt")) ("mci")) ("bio")) ("mno")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("cod")) (("woc"::("zdd"::("dda"::("bps"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("ufe")) (("jtp"::("arz"::("prs"::("oem"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("gqc")) (("hwq"::("xaz"::("idm"::("teh"::(Nil)))))) = true
=================================================
Progress: 1350


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("xhe")) (P ("etr") (V ("oaf")))) (("zav"::("yat"::("gfi"::("zqn"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("ywd")) (("tgn"::("lkq"::("xzg"::("cot"::(Nil)))))) = true
Prop: sub_check_ta1 (C (V ("xra")) (V ("gcg"))) (("mgs"::("tii"::("qod"::("rdl"::(Nil)))))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("ykr") (V ("kgq"))) (("rko"::("fai"::("ter"::("pnx"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (P ("ykr") (V ("kgq")))) ("rko")) ("fai")) ("ter")) ("pnx")) ((Nil))
Prop: sub_check_ta1 (V ("sba")) (("yll"::("ckv"::("vyd"::("bft"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("sba"))) ("yll")) ("ckv")) ("vyd")) ("bft")) ((Nil))
Prop: sub_check_ta1 (C (C (V ("qhu")) (P ("avm") (V ("las")))) (V ("ycr"))) (("lce"::("wqy"::("dis"::("jnc"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (C (V ("qhu")) (P ("avm") (V ("las")))) (V ("ycr")))) ("lce")) ("wqy")) ("dis")) ("jnc")) ((Nil))
=================================================
Progress: 1351


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1352


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1353


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1354


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1355


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1356


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1357


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1358


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1359


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1360


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1361


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1362


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1363


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1364


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1365


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1366


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1367


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1368


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1369


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1370


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1371


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1372


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1373


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1374


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1375


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1376


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1377


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1378


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string3) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1379


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1380


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1381


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1382


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1383


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1384


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string3) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1385


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1386


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string3) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1387


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1388


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1389


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1390


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string3) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1391


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1392


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:14.)
=================================================
Progress: 1393


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1394


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string3) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1395


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
=================================================
Progress: 1396


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
rewrite Case1 in goal at 2(rank:30.)
rewrite Case1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 2(rank:14.)
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1397


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1398


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1399


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1400


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1401


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
=================================================
Progress: 1402


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
rewrite Case1 in goal at 2(rank:30.)
rewrite Case1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 2(rank:14.)
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1403


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
=================================================
Progress: 1404


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
rewrite Case1 in goal at 2(rank:30.)
rewrite Case1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 2(rank:14.)
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1405


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1406


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1407


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1408


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1409


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
=================================================
Progress: 1410


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
rewrite Case1 in goal at 2(rank:30.)
rewrite Case1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 2(rank:14.)
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1411


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
=================================================
Progress: 1412


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
rewrite Case1 in goal at 2(rank:30.)
rewrite Case1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 2(rank:14.)
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1413


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1414


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1415


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1416


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1417


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
=================================================
Progress: 1418


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
rewrite Case1 in goal at 2(rank:30.)
rewrite Case1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 2(rank:14.)
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1419


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:30.)
case string_eq (string4) (string5)(rank:15.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
=================================================
Progress: 1420


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
rewrite Case1 in goal at 2(rank:30.)
rewrite Case1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 2(rank:14.)
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1421


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1422


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1423


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:30.)
case string_eq (string4) (string5)(rank:15.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
=================================================
Progress: 1424


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
rewrite Case1 in goal at 2(rank:30.)
rewrite Case1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 2(rank:14.)
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1425


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:30.)
case string_eq (string4) (string5)(rank:15.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
=================================================
Progress: 1426


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
rewrite Case1 in goal at 2(rank:30.)
rewrite Case1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 2(rank:14.)
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1427


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1428


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1429


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1430


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1431


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:30.)
case string_eq (string4) (string5)(rank:15.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
=================================================
Progress: 1432


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
rewrite Case1 in goal at 2(rank:30.)
rewrite Case1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 2(rank:14.)
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1433


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1434


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1435


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:30.)
case string_eq (string4) (string5)(rank:15.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
=================================================
Progress: 1436


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite Case1 in goal at 0(rank:30.)
rewrite Case1 in goal at 1(rank:30.)
rewrite Case1 in goal at 2(rank:30.)
rewrite Case1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 2(rank:14.)
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1437


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1438


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1439


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1440


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1441


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1442


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1443


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1444


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1445


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1446


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1447


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1448


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1449


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1450


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1451


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1452


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1453


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1454


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1455


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1456


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1457


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1458


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1459


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1460


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1461


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1462


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1463


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1464


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1465


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1466


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1467


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1468


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1469


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1470


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1471


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1472


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1473


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1474


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1475


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string5) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1476


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1477


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1478


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1479


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1480


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1481


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string5) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1482


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1483


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1484


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1485


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string5) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1486


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1487


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1488


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1489


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1490


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1491


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1492


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1493


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string5) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1494


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1495


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1496


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1497


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1498


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1499


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string5) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1500


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1501


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1502


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1503


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1504


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string5)(rank:14.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
=================================================
Progress: 1505


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1506


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string2)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1507


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1508


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string2) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1509


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1510


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string2)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1511


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1512


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string2) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1513


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1514


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string2)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1515


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1516


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string2) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1517


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1518


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string2)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1519


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1520


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string2) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1521


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1522


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string2)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1523


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1524


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string2) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1525


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1526


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string4) (string2)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1527


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1528


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string2) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1529


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string5) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if true then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1530


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if true then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string5) (string3)(rank:14.)
case string_eq (string4) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1531


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1532


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string5) (string4)(rank:14.)
case string_eq (string3) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1533


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1534


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Case4 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
=================================================
Progress: 1535


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string5) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if true then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1536


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if true then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string5) (string3)(rank:14.)
case string_eq (string4) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1537


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1538


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string5) (string4)(rank:14.)
case string_eq (string3) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1539


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string5) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if true then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1540


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if true then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string5) (string3)(rank:14.)
case string_eq (string4) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1541


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1542


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string5) (string4)(rank:14.)
case string_eq (string3) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1543


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1544


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Case4 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
=================================================
Progress: 1545


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1546


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Case4 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
=================================================
Progress: 1547


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string5) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if true then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1548


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if true then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string5) (string3)(rank:14.)
case string_eq (string4) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1549


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1550


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string5) (string4)(rank:14.)
case string_eq (string3) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1551


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1552


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Case4 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
=================================================
Progress: 1553


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if string_eq (string5) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if true then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1554


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string5 = string4
---------------------------------------
if true then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string5) (string3)(rank:14.)
case string_eq (string4) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1555


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string4) (string4) then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1556


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string4) else (string4::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string5) (string4)(rank:14.)
case string_eq (string3) (string5)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1557


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1558


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Case4 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
=================================================
Progress: 1559


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1560


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1561


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1562


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1563


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1564


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1565


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1566


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1567


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1568


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1569


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1570


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1571


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1572


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1573


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1574


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1575


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1576


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1577


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1578


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1579


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1580


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1581


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1582


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1583


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string5) (string3) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1584


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1585


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1586


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1587


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string5) (string3) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1588


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1589


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1590


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1591


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string5) (string3) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1592


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1593


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1594


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1595


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string5) (string3) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1596


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1597


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1598


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1599


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string5) (string3) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1600


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1601


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string5) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1602


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:14.)
=================================================
Progress: 1603


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1604


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1605


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1606


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string4) (string3)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case2 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 1607


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1608


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1609


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1610


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string4) (string3)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case2 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 1611


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1612


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1613


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1614


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string4) (string3)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case2 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 1615


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1616


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1617


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1618


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string4) (string3)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case2 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 1619


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1620


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1621


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1622


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string4) (string3)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case2 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 1623


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1624


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1625


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1626


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string4) (string3)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case2 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 1627


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string5) (string3) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string4) (string5)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1628


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string5) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1629


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string5 = string4
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string5)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1630


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string5) (string4)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case2 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 1631


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string5) (string3) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string4) (string5)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1632


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string5) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1633


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string5 = string4
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string5)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1634


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string5) (string4)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case2 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 1635


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string5) (string3) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string4) (string5)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1636


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string5) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1637


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string5 = string4
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string5)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1638


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string5) (string4)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case2 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 1639


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string5) (string3) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string4) (string5)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1640


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string5) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1641


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string5 = string4
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string5)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1642


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string5) (string4)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case2 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 1643


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string5) (string3) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string4) (string5)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1644


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string_eq (string4) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string5) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1645


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string5) (string4) = true
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string5 = string4
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string5)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1646


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string5) (string4)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case2 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 1647


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:15.)
=================================================
Progress: 1648


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1649


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1650


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1651


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1652


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1653


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1654


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:15.)
=================================================
Progress: 1655


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1656


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1657


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1658


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1659


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1660


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1661


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:15.)
=================================================
Progress: 1662


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1663


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1664


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1665


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1666


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1667


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1668


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:15.)
=================================================
Progress: 1669


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1670


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1671


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1672


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1673


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1674


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1675


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:15.)
=================================================
Progress: 1676


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1677


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1678


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1679


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1680


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1681


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1682


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:15.)
=================================================
Progress: 1683


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1684


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1685


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1686


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1687


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1688


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1689


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string5::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:15.)
=================================================
Progress: 1690


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1691


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1692


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1693


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string3) (string4) then deleteAll ((Nil)) (string4) else (string3::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1694


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string3) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1695


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string3::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1696


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string5::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:15.)
=================================================
Progress: 1697


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1698


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1699


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1700


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string3) (string4) then deleteAll ((Nil)) (string4) else (string3::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1701


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string3) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1702


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string3::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1703


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string5::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:15.)
=================================================
Progress: 1704


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1705


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1706


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1707


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string3) (string4) then deleteAll ((Nil)) (string4) else (string3::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1708


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string3) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1709


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string3::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1710


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string5::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:15.)
=================================================
Progress: 1711


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1712


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1713


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1714


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string3) (string4) then deleteAll ((Nil)) (string4) else (string3::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1715


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string3) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1716


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string3::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1717


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string4) = false
Case2 : string5 = string3
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string5::(string2::(string1::(Nil))))) (string5) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:15.)
=================================================
Progress: 1718


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1719


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1720


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string5::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string5) (string4) = false
Case2 : string4 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string5) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1721


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string3) (string4) then deleteAll ((Nil)) (string4) else (string3::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1722


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string3) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1723


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string3 = string5
---------------------------------------
true = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string3::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string5) (string4)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1724


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1725


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 1726


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1727


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:8.)
rewrite <- Cond1 in goal at 2(rank:15.)
rewrite <- Cond1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 1(rank:23.)
=================================================
Progress: 1728


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1729


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 1730


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1731


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 1732


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1733


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string1)(rank:8.)
case string_eq (string1) (string2)(rank:8.)
rewrite Cond1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 1734


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:8.)
=================================================
Progress: 1735


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:8.)
=================================================
Progress: 1736


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:8.)
rewrite Case1 in goal at 2(rank:24.)
case string_eq (string1) (string2)(rank:9.)
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
=================================================
Progress: 1737


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:8.)
rewrite <- Case1 in goal at 1(rank:8.)
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
rewrite Case1 in goal at 2(rank:24.)
rewrite Case1 in goal at 3(rank:24.)
rewrite <- Case1 in goal at 2(rank:8.)
case string_eq (string2) (string1)(rank:9.)
rewrite <- Cond1 in goal at 0(rank:16.)
rewrite Cond1 in goal at 0(rank:16.)
=================================================
Progress: 1738


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 1739


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 1740


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 1741


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:8.)
=================================================
Progress: 1742


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1743


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 1744


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 12
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1745


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:6.)
=================================================
Progress: 1746


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 1747


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:6.)
=================================================
Progress: 1748


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("nli")) (("bmq"::("ldw"::(Nil)))) = true
Prop: sub_check_ta1 (V ("bby")) (("mbb"::("fiz"::(Nil)))) = true
Prop: sub_check_ta1 (V ("lst")) (("dol"::("cdh"::(Nil)))) = true
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (C (V ("clq")) (P ("puv") (V ("pbn")))) (V ("cmt"))) (("zdg"::("wue"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (C (C (V ("clq")) (P ("puv") (V ("pbn")))) (V ("cmt")))) ("zdg")) ("wue")) ((Nil))
Prop: sub_check_ta1 (V ("lrf")) (("kxb"::("vdn"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("lrf"))) ("kxb")) ("vdn")) ((Nil))
Prop: sub_check_ta1 (V ("qap")) (("wtg"::("axr"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("qap"))) ("wtg")) ("axr")) ((Nil))
=================================================
Progress: 1749


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:8.)
case string_eq (string1) (string2)(rank:8.)
=================================================
Progress: 1750


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:8.)
=================================================
Progress: 1751


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:8.)
=================================================
Progress: 1752


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:8.)
rewrite Case1 in goal at 2(rank:24.)
case string_eq (string1) (string2)(rank:9.)
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
=================================================
Progress: 1753


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:8.)
rewrite <- Case1 in goal at 1(rank:8.)
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
rewrite Case1 in goal at 2(rank:24.)
rewrite Case1 in goal at 3(rank:24.)
rewrite <- Case1 in goal at 2(rank:8.)
case string_eq (string2) (string1)(rank:9.)
rewrite <- Cond1 in goal at 0(rank:16.)
rewrite Cond1 in goal at 0(rank:16.)
=================================================
Progress: 1754


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 1755


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 1756


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8.)
=================================================
Progress: 1757


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:8.)
=================================================
Progress: 1758


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1759


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 1760


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 14
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1761


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 1762


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Cond1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:15.)
=================================================
Progress: 1763


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("lcy") (V ("bna"))) (("hzt"::("zbh"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("lcy") (V ("bna")))) ("hzt")) ("zbh")) ((Nil))
Prop: sub_check_ta1 (V ("rcd")) (("xwe"::("qoz"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("rcd"))) ("xwe")) ("qoz")) ((Nil))
Prop: sub_check_ta1 (V ("tkc")) (("qmf"::("nie"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("tkc"))) ("qmf")) ("nie")) ((Nil))
previous tactics
simpl in goal
intro Cond1
parent
(string2::(string1::(Nil)))
lower
Cons(_, Cons(string1, Nil()))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("ogt") (C (V ("jay")) (C (V ("znj")) (V ("hnk"))))) (("vni"::("ixk"::(Nil)))) = true
Prop: sub_check_ta1 (P ("ned") (P ("snb") (V ("ygq")))) (("rwp"::("lku"::(Nil)))) = true
Prop: sub_check_ta1 (V ("pyb")) (("wrh"::("lyg"::(Nil)))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1764


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:7.)
intro string1(rank:7.)
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 1765


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:7.)
intro string1(rank:7.)
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 1766


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 1767


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 1768


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 1769


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 1770


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 1771


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 1772


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:7.)
=================================================
Progress: 1773


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 1774


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:7.)
=================================================
Progress: 1775


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 1776


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1777


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1778


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:7.)
=================================================
Progress: 1779


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:7.)
=================================================
Progress: 1780


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("xlb") (V ("loe"))) (V ("erd"))) (("lzj"::("pft"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (C (P ("xlb") (V ("loe"))) (V ("erd")))) ("lzj")) ("pft")) ((Nil))
Prop: sub_check_ta1 (V ("obi")) (("lna"::("hml"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("obi"))) ("lna")) ("hml")) ((Nil))
Prop: sub_check_ta1 (V ("kio")) (("bry"::("koy"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("kio"))) ("bry")) ("koy")) ((Nil))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("kyl")) (("klc"::("kqe"::(Nil)))) = true
Prop: sub_check_ta1 (V ("oxj")) (("hmu"::("zyb"::(Nil)))) = true
Prop: sub_check_ta1 (V ("csx")) (("eil"::("hkh"::(Nil)))) = true
=================================================
Progress: 1781


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("zcp") (V ("lgo"))) (("ydl"::("iav"::(Nil)))) = true
Prop: sub_check_ta1 (V ("evy")) (("lfy"::("yxt"::(Nil)))) = true
Prop: sub_check_ta1 (V ("jiw")) (("xzv"::("myk"::(Nil)))) = true
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("bxn")) (("juq"::("sjx"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("bxn"))) ("juq")) ("sjx")) ((Nil))
Prop: sub_check_ta1 (V ("hpp")) (("vgx"::("iwl"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("hpp"))) ("vgx")) ("iwl")) ((Nil))
Prop: sub_check_ta1 (P ("bgc") (V ("liy"))) (("nmt"::("inv"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("bgc") (V ("liy")))) ("nmt")) ("inv")) ((Nil))
=================================================
Progress: 1782


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1783


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1784


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1785


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1786


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 1787


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 1788


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1789


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1790


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1791


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1792


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 1793


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string2)(rank:10.)
case string_eq (string2) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 1794


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:17.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 1795


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string2)(rank:10.)
case string_eq (string2) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 1796


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1797


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 1798


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 1799


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 1800


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1801


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:10.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
=================================================
Progress: 1802


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 1803


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 1(rank:10.)
=================================================
Progress: 1804


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1805


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 1806


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10.)
rewrite Case1 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
=================================================
Progress: 1807


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10.)
rewrite <- Case1 in goal at 1(rank:10.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
rewrite Case1 in goal at 2(rank:26.)
rewrite Case1 in goal at 3(rank:26.)
rewrite <- Case1 in goal at 2(rank:10.)
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1808


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1809


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 1810


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10.)
rewrite Case1 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
=================================================
Progress: 1811


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10.)
rewrite <- Case1 in goal at 1(rank:10.)
rewrite Case1 in goal at 0(rank:26.)
rewrite Case1 in goal at 1(rank:26.)
rewrite Case1 in goal at 2(rank:26.)
rewrite Case1 in goal at 3(rank:26.)
rewrite <- Case1 in goal at 2(rank:10.)
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1812


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 1813


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 1814


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 1815


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1816


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 1817


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 1818


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 1819


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1820


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1821


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string1)(rank:10.)
case string_eq (string2) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 1822


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1823


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string3) (string2)(rank:10.)
case string_eq (string1) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 1824


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1825


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string1)(rank:10.)
case string_eq (string2) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 1826


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1827


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string3) (string2)(rank:10.)
case string_eq (string1) (string3)(rank:10.)
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- Cond1 in goal at 0(rank:17.)
=================================================
Progress: 1828


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 1829


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 1830


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 1831


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 1832


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 1833


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 1834


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 1835


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 1(rank:10.)
=================================================
Progress: 1836


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10.)
rewrite Case2 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 1837


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 1(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
case string_eq (string3) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1838


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:11.)
rewrite Case2 in goal at 2(rank:26.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 1839


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
rewrite <- Cond1 in goal at 0(rank:18.)
case string_eq (string3) (string2)(rank:11.)
rewrite Cond1 in goal at 0(rank:18.)
rewrite Case2 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 1(rank:10.)
=================================================
Progress: 1840


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10.)
rewrite Case2 in goal at 2(rank:26.)
case string_eq (string2) (string3)(rank:11.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 1841


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 1(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
case string_eq (string3) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1842


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:11.)
rewrite Case2 in goal at 2(rank:26.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 1843


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:10.)
rewrite <- Case2 in goal at 2(rank:10.)
rewrite <- Cond1 in goal at 0(rank:18.)
case string_eq (string3) (string2)(rank:11.)
rewrite Cond1 in goal at 0(rank:18.)
rewrite Case2 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 1(rank:10.)
=================================================
Progress: 1844


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:11.)
=================================================
Progress: 1845


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1846


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1847


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1848


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1849


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1850


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1851


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:11.)
=================================================
Progress: 1852


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1853


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1854


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1855


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1856


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1857


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1858


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:11.)
case string_eq (string2) (string1)(rank:11.)
=================================================
Progress: 1859


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:11.)
=================================================
Progress: 1860


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:11.)
case string_eq (string2) (string1)(rank:11.)
=================================================
Progress: 1861


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:11.)
=================================================
Progress: 1862


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1863


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10.)
rewrite Case2 in goal at 2(rank:26.)
case string_eq (string1) (string3)(rank:11.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 1864


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 1865


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1866


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 8
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 1867


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1868


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1869


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 1870


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("tdb")) (("vgy"::("gwm"::("abv"::(Nil))))) = true
Prop: sub_check_ta1 (P ("bcx") (V ("sfc"))) (("kgp"::("cek"::("cjo"::(Nil))))) = true
Prop: sub_check_ta1 (V ("rfv")) (("aei"::("lli"::("trp"::(Nil))))) = true
previous tactics
simpl in goal
intro Cond1
parent
(string3::(string2::(string1::(Nil))))
lower
Cons(_, Cons(string2, Cons(string1, Nil())))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
parent
deleteAll (listStation (lambda2)) (string3)
lower
deleteAll(listStation(lambda2), _)
upper
list_eq(deleteAll(deleteAll(_, string2), string1), Nil())
remove upper
listStation(lambda2)
remove lower
listStation(lambda2)
remove upper
deleteAll(listStation(lambda2), string3)
remove lower
deleteAll(listStation(lambda2), string3)
remove upper
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove lower
deleteAll(deleteAll(listStation(lambda3), string4), string3)
remove upper
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
remove lower
deleteAll(deleteAll(deleteAll(listStation(lambda4), string5), string4), string3)
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("vod")) (("lzf"::("tbk"::("hkm"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("vod"))) ("lzf")) ("tbk")) ("hkm")) ((Nil))
Prop: sub_check_ta1 (P ("trk") (P ("rvb") (V ("tre")))) (("qwr"::("alc"::("umf"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P ("trk") (P ("rvb") (V ("tre"))))) ("qwr")) ("alc")) ("umf")) ((Nil))
Prop: sub_check_ta1 (P ("uxj") (V ("eqi"))) (("kgm"::("dai"::("yhc"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P ("uxj") (V ("eqi")))) ("kgm")) ("dai")) ("yhc")) ((Nil))
=================================================
Progress: 1871


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1872


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10.)
rewrite Case2 in goal at 2(rank:26.)
case string_eq (string1) (string3)(rank:11.)
rewrite Case2 in goal at 0(rank:26.)
rewrite Case2 in goal at 1(rank:26.)
=================================================
Progress: 1873


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10.)
=================================================
Progress: 1874


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1875


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
Case3 : string_eq (string2) (string3) = false
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 8
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 1876


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1877


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:8.)
=================================================
Progress: 1878


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1879


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8.)
=================================================
Progress: 1880


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("bpb")) (("mch"::("dkx"::("omt"::(Nil))))) = true
Prop: sub_check_ta1 (C (V ("yqk")) (V ("ukw"))) (("kvv"::("lta"::("jzc"::(Nil))))) = true
Prop: sub_check_ta1 (V ("swz")) (("scv"::("ylw"::("apm"::(Nil))))) = true
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("ual")) (V ("shb"))) (("bxt"::("nvo"::("bad"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("ual")) (V ("shb")))) ("bxt")) ("nvo")) ("bad")) ((Nil))
Prop: sub_check_ta1 (C (V ("iid")) (P ("bym") (V ("fks")))) (("bco"::("xcs"::("fbl"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (C (V ("iid")) (P ("bym") (V ("fks"))))) ("bco")) ("xcs")) ("fbl")) ((Nil))
Prop: sub_check_ta1 (V ("qtc")) (("rdw"::("xuq"::("zli"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("qtc"))) ("rdw")) ("xuq")) ("zli")) ((Nil))
=================================================
Progress: 1881


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1882


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1883


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1884


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1885


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1886


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1887


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1888


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1889


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1890


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1891


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1892


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1893


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1894


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1895


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1896


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1897


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1898


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1899


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1900


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1901


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1902


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string2) (string4)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1903


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1904


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1905


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string4) (string1)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1906


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 1907


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 1908


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:14.)
rewrite Case3 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case3 in goal at 0(rank:30.)
rewrite Case3 in goal at 1(rank:30.)
=================================================
Progress: 1909


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:14.)
rewrite <- Case3 in goal at 1(rank:14.)
rewrite <- Case3 in goal at 2(rank:14.)
case string_eq (string4) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1910


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:15.)
=================================================
Progress: 1911


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1912


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1913


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1914


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:15.)
case string_eq (string3) (string1)(rank:15.)
=================================================
Progress: 1915


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:15.)
=================================================
Progress: 1916


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1917


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1918


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1919


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1920


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1921


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:15.)
case string_eq (string3) (string1)(rank:15.)
=================================================
Progress: 1922


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:15.)
=================================================
Progress: 1923


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1924


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1925


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1926


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 3(rank:30.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1927


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1928


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1929


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1930


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1931


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string1) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1932


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 1933


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 1934


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:15.)
rewrite Case3 in goal at 2(rank:30.)
rewrite Case3 in goal at 0(rank:30.)
rewrite Case3 in goal at 1(rank:30.)
=================================================
Progress: 1935


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:14.)
rewrite <- Case3 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string4) (string3)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case3 in goal at 0(rank:30.)
rewrite <- Case3 in goal at 1(rank:14.)
=================================================
Progress: 1936


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1937


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1938


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1939


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1940


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string2) (string4)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1941


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1942


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1943


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string4) (string1)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1944


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 1945


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 1946


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:14.)
rewrite Case3 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case3 in goal at 0(rank:30.)
rewrite Case3 in goal at 1(rank:30.)
=================================================
Progress: 1947


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:14.)
rewrite <- Case3 in goal at 1(rank:14.)
rewrite <- Case3 in goal at 2(rank:14.)
case string_eq (string4) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1948


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:15.)
=================================================
Progress: 1949


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1950


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1951


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1952


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:15.)
case string_eq (string3) (string1)(rank:15.)
=================================================
Progress: 1953


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:15.)
=================================================
Progress: 1954


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1955


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1956


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1957


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1958


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1959


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:15.)
case string_eq (string3) (string1)(rank:15.)
=================================================
Progress: 1960


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:15.)
=================================================
Progress: 1961


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1962


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1963


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1964


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 3(rank:30.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1965


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1966


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1967


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1968


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1969


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string1) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 1970


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 1971


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 1972


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:15.)
rewrite Case3 in goal at 2(rank:30.)
rewrite Case3 in goal at 0(rank:30.)
rewrite Case3 in goal at 1(rank:30.)
=================================================
Progress: 1973


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:14.)
rewrite <- Case3 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string4) (string3)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case3 in goal at 0(rank:30.)
rewrite <- Case3 in goal at 1(rank:14.)
=================================================
Progress: 1974


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1975


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1976


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1977


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1978


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string2) (string4)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 1979


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 1980


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1981


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string4) (string1)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 1982


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 1983


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 1984


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:14.)
rewrite Case3 in goal at 2(rank:30.)
case string_eq (string3) (string4)(rank:15.)
rewrite Case3 in goal at 0(rank:30.)
rewrite Case3 in goal at 1(rank:30.)
=================================================
Progress: 1985


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:14.)
rewrite <- Case3 in goal at 1(rank:14.)
rewrite <- Case3 in goal at 2(rank:14.)
case string_eq (string4) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1986


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:15.)
=================================================
Progress: 1987


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1988


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1989


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1990


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:15.)
case string_eq (string3) (string1)(rank:15.)
=================================================
Progress: 1991


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:15.)
=================================================
Progress: 1992


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1993


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1994


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 1995


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1996


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1997


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string1)(rank:15.)
case string_eq (string3) (string1)(rank:15.)
=================================================
Progress: 1998


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:15.)
=================================================
Progress: 1999


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 2000


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:15.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 2001


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 2002


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
rewrite Case2 in goal at 2(rank:30.)
rewrite Case2 in goal at 3(rank:30.)
rewrite <- Case2 in goal at 2(rank:14.)
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:22.)
=================================================
Progress: 2003


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 2004


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 2005


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 2006


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 2007


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string4) (string3)(rank:14.)
case string_eq (string1) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
=================================================
Progress: 2008


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 2009


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 1(rank:14.)
=================================================
Progress: 2010


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:15.)
rewrite Case3 in goal at 2(rank:30.)
rewrite Case3 in goal at 0(rank:30.)
rewrite Case3 in goal at 1(rank:30.)
=================================================
Progress: 2011


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:14.)
rewrite <- Case3 in goal at 2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:22.)
case string_eq (string4) (string3)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite Case3 in goal at 0(rank:30.)
rewrite <- Case3 in goal at 1(rank:14.)
=================================================
Progress: 2012


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 2013


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 2014


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 2015


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 2016


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:30.)
case string_eq (string2) (string4)(rank:15.)
rewrite Case2 in goal at 0(rank:30.)
rewrite Case2 in goal at 1(rank:30.)
=================================================
Progress: 2017


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:14.)
=================================================
Progress: 2018


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 2019


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string4) (string1)(rank:14.)
case string_eq (string3) (string4)(rank:14.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
=================================================
Progress: 2020


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

4 conjecture(s) more...
