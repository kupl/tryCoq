Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (l:lambda), check_ta1 (l) = check (l)(rank : 0)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 2


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda1) ((Nil)) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:5)
=================================================
Progress: 3


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda1) ((Nil)) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction lambda1(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check_ta1 (V (string1)) ((Nil)) = check (V (string1))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 4


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check_ta1 (V (string1)) ((Nil)) = check (V (string1))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = check (P (string1) (lambda2))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 5


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = check (P (string1) (lambda2))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = if list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) then true else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))(rank:5)
=================================================
Progress: 6


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = if list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) then true else false

1 goal(s) more...

0 conjecture(s) more...
>>> case list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:5)
=================================================
Progress: 7


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Model : lambda2: V ("wzz"), string1: "aws"
Model : lambda2: V ("cbm"), string1: "rej"
Model : lambda2: V ("jap"), string1: "tms"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("wzz")) (("aws"::(Nil))) = list_eq (deleteAll (listStation (V ("wzz"))) ("aws")) ((Nil))
sub_check_ta1 (V ("cbm")) (("rej"::(Nil))) = list_eq (deleteAll (listStation (V ("cbm"))) ("rej")) ((Nil))
sub_check_ta1 (V ("jap")) (("tms"::(Nil))) = list_eq (deleteAll (listStation (V ("jap"))) ("tms")) ((Nil))
Simplifying took 0.002935 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 8


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = check (lambda2)
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda2:lambda) (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:5)
intro string1(rank:5)
induction lambda1(rank:15)
=================================================
Progress: 9


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda1(rank : 5)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:5)
=================================================
Progress: 10


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7)
=================================================
Progress: 11


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5)
=================================================
Progress: 12


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:5)
=================================================
Progress: 13


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 5)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
Model : lambda1: V ("fsv"), string1: "uzn"
Model : lambda1: V ("dum"), string1: "ihq"
Model : lambda1: V ("ygc"), string1: "ood"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("fsv")) (("uzn"::(Nil))) = true
sub_check_ta1 (V ("dum")) (("ihq"::(Nil))) = true
sub_check_ta1 (V ("ygc")) (("ood"::(Nil))) = true
Simplifying took 0.002752 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 14


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:7)
intro string1(rank:7)
induction lambda1(rank:17)
=================================================
Progress: 15


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 16


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7)
=================================================
Progress: 17


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9)
=================================================
Progress: 18


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 19


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 20


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:8)
case string_eq (string2) (string1)(rank:8)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 21


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:7)
=================================================
Progress: 22


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
Model : lambda1: V ("sgc"), string1: "cat"
Model : lambda1: C (V ("cdy")) (V ("mcu")), string1: "exl"
Model : lambda1: V ("xdj"), string1: "aeu"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("sgc")) (("cat"::(Nil))) = list_eq (deleteAll (listStation (V ("sgc"))) ("cat")) ((Nil))
sub_check_ta1 (C (V ("cdy")) (V ("mcu"))) (("exl"::(Nil))) = list_eq (deleteAll (listStation (C (V ("cdy")) (V ("mcu")))) ("exl")) ((Nil))
sub_check_ta1 (V ("xdj")) (("aeu"::(Nil))) = list_eq (deleteAll (listStation (V ("xdj"))) ("aeu")) ((Nil))
Simplifying took 0.003512 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 23


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:9)
intro string1(rank:9)
induction lambda1(rank:19)
=================================================
Progress: 24


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:8)
=================================================
Progress: 25


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:8)
=================================================
Progress: 26


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:8)
rewrite <- Case1 in goal at 1(rank:8)
rewrite Case1 in goal at 0(rank:24)
rewrite Case1 in goal at 1(rank:24)
rewrite Case1 in goal at 2(rank:24)
rewrite Case1 in goal at 3(rank:24)
rewrite <- Case1 in goal at 2(rank:8)
case string_eq (string2) (string1)(rank:9)
rewrite <- Cond1 in goal at 0(rank:16)
rewrite Cond1 in goal at 0(rank:16)
=================================================
Progress: 27


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:8)
rewrite Case1 in goal at 2(rank:24)
case string_eq (string1) (string2)(rank:9)
rewrite Case1 in goal at 0(rank:24)
rewrite Case1 in goal at 1(rank:24)
=================================================
Progress: 28


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8)
=================================================
Progress: 29


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8)
=================================================
Progress: 30


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:8)
=================================================
Progress: 31


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8)
=================================================
Progress: 32


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 33


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 9
Tactic List : 3
case string_eq (string2) (string1)(rank:8)
rewrite Cond1 in goal at 0(rank:15)
rewrite <- Case1 in goal at 0(rank:15)
=================================================
Progress: 34


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 35


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:6)
=================================================
Progress: 36


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 5
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 37


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6)
=================================================
Progress: 38


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:6)
=================================================
Progress: 39


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 6)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Model : lambda2: V ("btx"), string1: "khe", string2: "vgp"
Model : lambda2: V ("bay"), string1: "zlm", string2: "msv"
Model : lambda2: V ("boa"), string1: "gkj", string2: "iba"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("btx")) (("vgp"::("khe"::(Nil)))) = true
sub_check_ta1 (V ("bay")) (("msv"::("zlm"::(Nil)))) = true
sub_check_ta1 (V ("boa")) (("iba"::("gkj"::(Nil)))) = true
Simplifying took 0.002869 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 40


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda2:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:7)
intro string1(rank:7)
intro string2(rank:7)
induction lambda1(rank:17)
=================================================
Progress: 41


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7)
=================================================
Progress: 42


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro string2(rank:7)
induction lambda1(rank:17)
=================================================
Progress: 43


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9)
=================================================
Progress: 44


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:7)
=================================================
Progress: 45


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9)
=================================================
Progress: 46


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 47


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:7)
=================================================
Progress: 48


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("skp"), string1: "ymy", string2: "zas"
Model : lambda1: V ("tlr"), string1: "vmd", string2: "cld"
Model : lambda1: P ("snb") (V ("hns")), string1: "pnp", string2: "ckz"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("skp")) (("zas"::("ymy"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("skp"))) ("zas")) ("ymy")) ((Nil))
sub_check_ta1 (V ("tlr")) (("cld"::("vmd"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("tlr"))) ("cld")) ("vmd")) ((Nil))
sub_check_ta1 (P ("snb") (V ("hns"))) (("ckz"::("pnp"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("snb") (V ("hns")))) ("ckz")) ("pnp")) ((Nil))
Simplifying took 0.010831 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 49


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:9)
intro string1(rank:9)
intro string2(rank:9)
induction lambda1(rank:19)
=================================================
Progress: 50


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 51


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9)
=================================================
Progress: 52


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11)
=================================================
Progress: 53


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 54


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 55


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9)
=================================================
Progress: 56


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string2(rank:9)
induction lambda1(rank:19)
=================================================
Progress: 57


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11)
=================================================
Progress: 58


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 59


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 60


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9)
=================================================
Progress: 61


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 62


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9)
=================================================
Progress: 63


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11)
=================================================
Progress: 64


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:10)
rewrite <- Cond1 in goal at 2(rank:17)
rewrite <- Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 1(rank:25)
=================================================
Progress: 65


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9)
=================================================
Progress: 66


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 67


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10)
rewrite <- Cond1 in goal at 2(rank:17)
rewrite <- Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 1(rank:25)
=================================================
Progress: 68


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 69


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
Model : lambda1: V ("mdp"), string1: "wae"
Model : lambda1: V ("wzc"), string1: "yxy"
Model : lambda1: V ("kvm"), string1: "fsb"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("mdp")) (("wae"::(Nil))) = true
sub_check_ta1 (V ("wzc")) (("yxy"::(Nil))) = true
sub_check_ta1 (V ("kvm")) (("fsb"::(Nil))) = true
Simplifying took 0.003086 seconds
Result : true
advanced_generalize done
=================================================
Progress: 70


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10)
rewrite <- Cond1 in goal at 2(rank:17)
rewrite <- Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 1(rank:25)
=================================================
Progress: 71


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9)
=================================================
Progress: 72


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
Model : lambda1: V ("dmf"), string1: "lko", string2: "fbd"
Model : lambda1: P ("eqn") (V ("peu")), string1: "jki", string2: "mvq"
Model : lambda1: V ("jgu"), string1: "fbc", string2: "dpg"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("dmf")) (("fbd"::("lko"::(Nil)))) = true
sub_check_ta1 (P ("eqn") (V ("peu"))) (("mvq"::("jki"::(Nil)))) = true
sub_check_ta1 (V ("jgu")) (("dpg"::("fbc"::(Nil)))) = true
Simplifying took 0.004994 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 73


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:11)
intro string1(rank:11)
intro string2(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 74


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 75


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
=================================================
Progress: 76


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 77


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:10)
rewrite <- Cond1 in goal at 2(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 1(rank:25)
=================================================
Progress: 78


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 79


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:10)
rewrite <- Cond1 in goal at 2(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 1(rank:25)
=================================================
Progress: 80


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 81


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25)
rewrite <- Case2 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
=================================================
Progress: 82


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 83


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25)
rewrite <- Case2 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
=================================================
Progress: 84


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 85


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 86


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 87


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11)
=================================================
Progress: 88


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string2(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 89


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13)
=================================================
Progress: 90


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 91


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11)
=================================================
Progress: 92


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 93


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11)
=================================================
Progress: 94


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13)
=================================================
Progress: 95


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:12)
case string_eq (string2) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 96


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 97


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12)
case string_eq (string3) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 98


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 99


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12)
case string_eq (string3) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 100


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:11)
=================================================
Progress: 101


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
Model : lambda1: P ("ggx") (V ("mcb")), string1: "ujc", string2: "dei"
Model : lambda1: V ("iwj"), string1: "hqx", string2: "jsc"
Model : lambda1: V ("hli"), string1: "jjw", string2: "red"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (P ("ggx") (V ("mcb"))) (("dei"::("ujc"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("ggx") (V ("mcb")))) ("dei")) ("ujc")) ((Nil))
sub_check_ta1 (V ("iwj")) (("jsc"::("hqx"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("iwj"))) ("jsc")) ("hqx")) ((Nil))
sub_check_ta1 (V ("hli")) (("red"::("jjw"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("hli"))) ("red")) ("jjw")) ((Nil))
Simplifying took 0.006082 seconds
Result : true
advanced_generalize done
=================================================
Progress: 102


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 103


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 104


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 105


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 106


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 107


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 108


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12)
rewrite <- Case1 in goal at 1(rank:12)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
rewrite Case1 in goal at 2(rank:28)
rewrite Case1 in goal at 3(rank:28)
rewrite <- Case1 in goal at 2(rank:12)
case string_eq (string2) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 109


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12)
rewrite Case1 in goal at 2(rank:28)
case string_eq (string1) (string2)(rank:13)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
=================================================
Progress: 110


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12)
rewrite <- Case1 in goal at 1(rank:12)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
rewrite Case1 in goal at 2(rank:28)
rewrite Case1 in goal at 3(rank:28)
rewrite <- Case1 in goal at 2(rank:12)
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 111


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12)
rewrite Case1 in goal at 2(rank:28)
case string_eq (string2) (string3)(rank:13)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
=================================================
Progress: 112


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12)
rewrite <- Case1 in goal at 1(rank:12)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
rewrite Case1 in goal at 2(rank:28)
rewrite Case1 in goal at 3(rank:28)
rewrite <- Case1 in goal at 2(rank:12)
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 113


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12)
rewrite Case1 in goal at 2(rank:28)
case string_eq (string2) (string3)(rank:13)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
=================================================
Progress: 114


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 115


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 116


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 117


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 118


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 119


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 120


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 121


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 122


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 123


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 124


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 125


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 126


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 127


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 3
case string_eq (string2) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
=================================================
Progress: 128


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 129


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10)
=================================================
Progress: 130


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 5
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 131


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 132


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10)
=================================================
Progress: 133


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Model : lambda2: C (V ("cit")) (C (C (V ("qvb")) (V ("ygj"))) (V ("njx"))), string1: "wdb", string2: "vzg"
Model : lambda2: V ("rwp"), string1: "dlw", string2: "kwe"
Model : lambda2: P ("eyi") (V ("fkq")), string1: "wpz", string2: "iss"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (C (V ("cit")) (C (C (V ("qvb")) (V ("ygj"))) (V ("njx")))) (("vzg"::("wdb"::(Nil)))) = true
sub_check_ta1 (V ("rwp")) (("kwe"::("dlw"::(Nil)))) = true
sub_check_ta1 (P ("eyi") (V ("fkq"))) (("iss"::("wpz"::(Nil)))) = true
Simplifying took 0.013708 seconds
Result : true
advanced_generalize done
=================================================
Progress: 134


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 135


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string3)(rank:12)
case string_eq (string3) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 136


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 137


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:12)
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 138


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 139


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string3)(rank:12)
case string_eq (string3) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 140


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 141


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:12)
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 142


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 143


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 144


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 145


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 146


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 147


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 148


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 149


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 150


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string3) (string2)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case2 in goal at 0(rank:28)
rewrite <- Case2 in goal at 1(rank:12)
=================================================
Progress: 151


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 152


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 153


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12)
rewrite Case2 in goal at 2(rank:28)
case string_eq (string2) (string3)(rank:13)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 154


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string3) (string2)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case2 in goal at 0(rank:28)
rewrite <- Case2 in goal at 1(rank:12)
=================================================
Progress: 155


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 156


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 157


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12)
rewrite Case2 in goal at 2(rank:28)
case string_eq (string2) (string3)(rank:13)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 158


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 159


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 160


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 161


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 162


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 163


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 164


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13)
=================================================
Progress: 165


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 166


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 167


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 168


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 169


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 170


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 171


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13)
=================================================
Progress: 172


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
case string_eq (string3) (string1)(rank:13)
=================================================
Progress: 173


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13)
=================================================
Progress: 174


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
case string_eq (string3) (string1)(rank:13)
=================================================
Progress: 175


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13)
=================================================
Progress: 176


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 177


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 178


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 179


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 3(rank:28)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 180


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 181


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 182


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 183


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 184


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 4
case string_eq (string3) (string2)(rank:12)
rewrite <- Case2 in goal at 0(rank:19)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
=================================================
Progress: 185


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 186


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string3 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
=================================================
Progress: 187


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 188


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
=================================================
Progress: 189


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 190


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 191


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:12)
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 192


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 193


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 194


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 195


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string1) (string3)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 196


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 197


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 198


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 199


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 200


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 201


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
=================================================
Progress: 202


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 203


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10)
=================================================
Progress: 204


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 205


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 206


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10)
=================================================
Progress: 207


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Model : lambda2: V ("gld"), string1: "xwt", string2: "bhn", string3: "brd"
Model : lambda2: V ("ner"), string1: "bfr", string2: "mcr", string3: "pnh"
Model : lambda2: V ("xkk"), string1: "pso", string2: "kpf", string3: "fkf"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("gld")) (("brd"::("bhn"::("xwt"::(Nil))))) = true
sub_check_ta1 (V ("ner")) (("pnh"::("mcr"::("bfr"::(Nil))))) = true
sub_check_ta1 (V ("xkk")) (("fkf"::("kpf"::("pso"::(Nil))))) = true
Simplifying took 0.006228 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 208


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda2:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:11)
intro string2(rank:11)
intro string3(rank:11)
induction lambda1(rank:21)
intro string1(rank:11)
=================================================
Progress: 209


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11)
=================================================
Progress: 210


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string2(rank:11)
intro string3(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 211


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 212


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13)
=================================================
Progress: 213


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11)
=================================================
Progress: 214


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 215


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13)
=================================================
Progress: 216


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 217


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11)
=================================================
Progress: 218


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13)
=================================================
Progress: 219


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11)
=================================================
Progress: 220


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 221


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 222


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:11)
=================================================
Progress: 223


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
Model : lambda1: V ("bip"), string1: "owz", string2: "lhc", string3: "tuo"
Model : lambda1: V ("gxr"), string1: "hms", string2: "xbf", string3: "epf"
Model : lambda1: V ("uks"), string1: "set", string2: "ccq", string3: "nui"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("bip")) (("tuo"::("lhc"::("owz"::(Nil))))) = true
sub_check_ta1 (V ("gxr")) (("epf"::("xbf"::("hms"::(Nil))))) = true
sub_check_ta1 (V ("uks")) (("nui"::("ccq"::("set"::(Nil))))) = true
Simplifying took 0.007272 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 224


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:13)
intro string2(rank:13)
intro string3(rank:13)
induction lambda1(rank:23)
intro string1(rank:13)
=================================================
Progress: 225


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("mgj"), string1: "ode", string2: "uxm", string3: "qqi"
Model : lambda1: V ("jhm"), string1: "sap", string2: "uvp", string3: "qkx"
Model : lambda1: V ("vic"), string1: "gqx", string2: "tbp", string3: "wbt"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("mgj")) (("qqi"::("uxm"::("ode"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("mgj"))) ("qqi")) ("uxm")) ("ode")) ((Nil))
sub_check_ta1 (V ("jhm")) (("qkx"::("uvp"::("sap"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("jhm"))) ("qkx")) ("uvp")) ("sap")) ((Nil))
sub_check_ta1 (V ("vic")) (("wbt"::("tbp"::("gqx"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("vic"))) ("wbt")) ("tbp")) ("gqx")) ((Nil))
Simplifying took 0.013799 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 226


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:13)
intro string2(rank:13)
intro string3(rank:13)
induction lambda1(rank:23)
intro string1(rank:13)
=================================================
Progress: 227


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 228


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 3(rank:28)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 229


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 230


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 231


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 232


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 233


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 4
case string_eq (string3) (string2)(rank:12)
rewrite <- Case2 in goal at 0(rank:19)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
=================================================
Progress: 234


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 235


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string3 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
=================================================
Progress: 236


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 237


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
=================================================
Progress: 238


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 239


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 240


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:12)
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 241


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 242


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 243


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 244


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string1) (string3)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 245


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 246


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 247


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 248


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 249


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 250


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
=================================================
Progress: 251


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 252


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10)
=================================================
Progress: 253


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 254


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:10)
=================================================
Progress: 255


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 256


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10)
=================================================
Progress: 257


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Model : lambda2: V ("oho"), string1: "jzk", string2: "row", string3: "pxu"
Model : lambda2: P ("pgy") (V ("rhd")), string1: "ghu", string2: "ofs", string3: "apv"
Model : lambda2: V ("ekp"), string1: "wzd", string2: "hgm", string3: "zad"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("oho")) (("pxu"::("row"::("jzk"::(Nil))))) = true
sub_check_ta1 (P ("pgy") (V ("rhd"))) (("apv"::("ofs"::("ghu"::(Nil))))) = true
sub_check_ta1 (V ("ekp")) (("zad"::("hgm"::("wzd"::(Nil))))) = true
Simplifying took 0.007498 seconds
Result : true
advanced_generalize done
=================================================
Progress: 258


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 259


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 260


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 261


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 262


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 263


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 264


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string2(rank:13)
intro string3(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 265


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string3(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 266


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 267


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 268


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string2(rank:13)
intro string3(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 269


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string3(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 270


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 271


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 272


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:14)
rewrite <- Cond1 in goal at 2(rank:21)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 273


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 274


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 275


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 276


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 277


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string3(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 278


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 279


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 280


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 281


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string3(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 282


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 283


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 284


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:14)
rewrite <- Cond1 in goal at 2(rank:21)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 285


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 286


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 287


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 288


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13)
=================================================
Progress: 289


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 290


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 291


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13)
=================================================
Progress: 292


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 293


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 294


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 295


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 296


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 297


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 298


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 299


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 300


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 301


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:13)
=================================================
Progress: 302


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
Model : lambda1: V ("dac"), string1: "qwm", string2: "cwa", string3: "cmu"
Model : lambda1: V ("fqz"), string1: "bqg", string2: "sfr", string3: "rtz"
Model : lambda1: V ("zvf"), string1: "xde", string2: "mzq", string3: "mzc"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("dac")) (("cmu"::("cwa"::("qwm"::(Nil))))) = true
sub_check_ta1 (V ("fqz")) (("rtz"::("sfr"::("bqg"::(Nil))))) = true
sub_check_ta1 (V ("zvf")) (("mzc"::("mzq"::("xde"::(Nil))))) = true
Simplifying took 0.008407 seconds
Result : true
advanced_generalize done
=================================================
Progress: 303


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:13)
=================================================
Progress: 304


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("eml"), string1: "xcq", string2: "nho", string3: "zco"
Model : lambda1: V ("gtq"), string1: "jmj", string2: "zrc", string3: "gor"
Model : lambda1: V ("cck"), string1: "sxu", string2: "jnq", string3: "ytr"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("eml")) (("zco"::("nho"::("xcq"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("eml"))) ("zco")) ("nho")) ("xcq")) ((Nil))
sub_check_ta1 (V ("gtq")) (("gor"::("zrc"::("jmj"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("gtq"))) ("gor")) ("zrc")) ("jmj")) ((Nil))
sub_check_ta1 (V ("cck")) (("ytr"::("jnq"::("sxu"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("cck"))) ("ytr")) ("jnq")) ("sxu")) ((Nil))
Simplifying took 0.010237 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 305


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:15)
intro string2(rank:15)
intro string3(rank:15)
induction lambda1(rank:25)
intro string1(rank:15)
=================================================
Progress: 306


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("egd"), string1: "bkt", string2: "kat", string3: "cpc"
Model : lambda1: V ("wko"), string1: "akg", string2: "wer", string3: "xjp"
Model : lambda1: V ("ukk"), string1: "nfe", string2: "oqm", string3: "cox"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("egd")) (("cpc"::("kat"::("bkt"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("egd"))) ("cpc")) ("kat")) ("bkt")) ((Nil))
sub_check_ta1 (V ("wko")) (("xjp"::("wer"::("akg"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("wko"))) ("xjp")) ("wer")) ("akg")) ((Nil))
sub_check_ta1 (V ("ukk")) (("cox"::("oqm"::("nfe"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("ukk"))) ("cox")) ("oqm")) ("nfe")) ((Nil))
Simplifying took 0.011397 seconds
Result : true
advanced_generalize done
=================================================
Progress: 307


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
Model : lambda1: V ("oqe"), string1: "gea", string2: "smr", string3: "fwi"
Model : lambda1: V ("xcf"), string1: "iig", string2: "cgp", string3: "bpu"
Model : lambda1: P ("pls") (V ("zus")), string1: "ojp", string2: "kdw", string3: "rdc"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("oqe")) (("fwi"::("smr"::("gea"::(Nil))))) = true
sub_check_ta1 (V ("xcf")) (("bpu"::("cgp"::("iig"::(Nil))))) = true
sub_check_ta1 (P ("pls") (V ("zus"))) (("rdc"::("kdw"::("ojp"::(Nil))))) = true
Simplifying took 0.010507 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 308


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:15)
intro string2(rank:15)
intro string3(rank:15)
induction lambda1(rank:25)
intro string1(rank:15)
=================================================
Progress: 309


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 310


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 311


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 312


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 313


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 314


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 315


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 316


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 317


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 318


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 319


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 320


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:29)
rewrite <- Case2 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
=================================================
Progress: 321


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 322


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:29)
rewrite <- Case2 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
=================================================
Progress: 323


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 324


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 325


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 326


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 327


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 328


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 329


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 330


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:29)
rewrite <- Case2 in goal at 0(rank:29)
rewrite <- Case3 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
=================================================
Progress: 331


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 332


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:29)
rewrite <- Case2 in goal at 0(rank:29)
rewrite <- Case3 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
=================================================
Progress: 333


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 334


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:29)
rewrite <- Case2 in goal at 0(rank:29)
rewrite <- Case3 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
=================================================
Progress: 335


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 336


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:7)
=================================================
Progress: 337


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 338


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:8)
case string_eq (string2) (string1)(rank:8)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 339


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:8)
=================================================
Progress: 340


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:8)
=================================================
Progress: 341


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:8)
rewrite <- Case1 in goal at 1(rank:8)
rewrite Case1 in goal at 0(rank:24)
rewrite Case1 in goal at 1(rank:24)
rewrite Case1 in goal at 2(rank:24)
rewrite Case1 in goal at 3(rank:24)
rewrite <- Case1 in goal at 2(rank:8)
case string_eq (string2) (string1)(rank:9)
rewrite <- Cond1 in goal at 0(rank:16)
rewrite Cond1 in goal at 0(rank:16)
=================================================
Progress: 342


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:8)
rewrite Case1 in goal at 2(rank:24)
case string_eq (string1) (string2)(rank:9)
rewrite Case1 in goal at 0(rank:24)
rewrite Case1 in goal at 1(rank:24)
=================================================
Progress: 343


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8)
=================================================
Progress: 344


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8)
=================================================
Progress: 345


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:8)
=================================================
Progress: 346


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:8)
=================================================
Progress: 347


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 348


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 9
Tactic List : 3
case string_eq (string2) (string1)(rank:8)
rewrite Cond1 in goal at 0(rank:15)
rewrite <- Case1 in goal at 0(rank:15)
=================================================
Progress: 349


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 350


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:6)
=================================================
Progress: 351


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 5
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 352


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:6)
=================================================
Progress: 353


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 6)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6)
=================================================
Progress: 354


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:6)
=================================================
Progress: 355


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 6)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Model : lambda2: P ("beq") (V ("tjz")), string1: "gox", string2: "jrm"
Model : lambda2: P ("peu") (V ("bgd")), string1: "jkf", string2: "csy"
Model : lambda2: V ("hyb"), string1: "jhh", string2: "agv"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (P ("beq") (V ("tjz"))) (("jrm"::("gox"::(Nil)))) = true
sub_check_ta1 (P ("peu") (V ("bgd"))) (("csy"::("jkf"::(Nil)))) = true
sub_check_ta1 (V ("hyb")) (("agv"::("jhh"::(Nil)))) = true
Simplifying took 0.004624 seconds
Result : true
advanced_generalize done
=================================================
Progress: 356


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 357


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 358


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 359


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 360


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 361


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 362


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 363


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string2(rank:15)
intro string3(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 364


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string3(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 365


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 366


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 367


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string2(rank:15)
intro string3(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 368


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string3(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 369


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 370


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 371


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 372


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 373


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 374


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 375


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 376


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 377


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string3(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 378


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 379


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 380


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 381


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string3(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 382


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 383


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 384


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 385


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 386


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 387


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 388


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 389


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:16)
case string_eq (string4) (string3)(rank:16)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 390


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 391


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 392


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 393


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 394


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 395


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 396


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 397


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 398


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 399


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:16)
case string_eq (string4) (string3)(rank:16)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 400


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 401


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 402


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 403


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 404


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 405


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:16)
case string_eq (string4) (string3)(rank:16)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 406


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:15)
=================================================
Progress: 407


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("fje"), string1: "glm", string2: "kus", string3: "ppl"
Model : lambda1: V ("uge"), string1: "zer", string2: "omi", string3: "koa"
Model : lambda1: V ("fiw"), string1: "fsu", string2: "iwe", string3: "swn"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("fje")) (("ppl"::("kus"::("glm"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("fje"))) ("ppl")) ("kus")) ("glm")) ((Nil))
sub_check_ta1 (V ("uge")) (("koa"::("omi"::("zer"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("uge"))) ("koa")) ("omi")) ("zer")) ((Nil))
sub_check_ta1 (V ("fiw")) (("swn"::("iwe"::("fsu"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("fiw"))) ("swn")) ("iwe")) ("fsu")) ((Nil))
Simplifying took 0.010746 seconds
Result : true
advanced_generalize done
=================================================
Progress: 408


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:15)
=================================================
Progress: 409


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
Model : lambda1: V ("xma"), string1: "xni", string2: "kxi", string3: "ixp"
Model : lambda1: V ("obj"), string1: "bkt", string2: "dmr", string3: "gpe"
Model : lambda1: V ("ntx"), string1: "pog", string2: "fyt", string3: "ivc"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("xma")) (("ixp"::("kxi"::("xni"::(Nil))))) = true
sub_check_ta1 (V ("obj")) (("gpe"::("dmr"::("bkt"::(Nil))))) = true
sub_check_ta1 (V ("ntx")) (("ivc"::("fyt"::("pog"::(Nil))))) = true
Simplifying took 0.008599 seconds
Result : true
advanced_generalize done
=================================================
Progress: 410


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
Model : lambda1: V ("lwc"), string1: "wnt", string2: "pyu", string3: "sdl"
Model : lambda1: V ("ofc"), string1: "tnr", string2: "bnl", string3: "vkk"
Model : lambda1: V ("rcv"), string1: "axg", string2: "zac", string3: "hmp"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("lwc")) (("sdl"::("pyu"::("wnt"::(Nil))))) = true
sub_check_ta1 (V ("ofc")) (("vkk"::("bnl"::("tnr"::(Nil))))) = true
sub_check_ta1 (V ("rcv")) (("hmp"::("zac"::("axg"::(Nil))))) = true
Simplifying took 0.009081 seconds
Result : true
advanced_generalize done
=================================================
Progress: 411


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("hss"), string1: "tww", string2: "tll", string3: "cuo"
Model : lambda1: V ("bxu"), string1: "lee", string2: "izk", string3: "gpj"
Model : lambda1: V ("xpw"), string1: "tah", string2: "zzt", string3: "lao"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("hss")) (("cuo"::("tll"::("tww"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("hss"))) ("cuo")) ("tll")) ("tww")) ((Nil))
sub_check_ta1 (V ("bxu")) (("gpj"::("izk"::("lee"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("bxu"))) ("gpj")) ("izk")) ("lee")) ((Nil))
sub_check_ta1 (V ("xpw")) (("lao"::("zzt"::("tah"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("xpw"))) ("lao")) ("zzt")) ("tah")) ((Nil))
Simplifying took 0.013882 seconds
Result : true
advanced_generalize done
=================================================
Progress: 412


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 413


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 414


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:16)
=================================================
Progress: 415


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:16)
=================================================
Progress: 416


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 417


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 418


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:16)
=================================================
Progress: 419


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:16)
=================================================
Progress: 420


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 421


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string4)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 422


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:16)
=================================================
Progress: 423


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:16)
=================================================
Progress: 424


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 425


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 426


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:16)
rewrite <- Case1 in goal at 1(rank:16)
rewrite Case1 in goal at 0(rank:32)
rewrite Case1 in goal at 1(rank:32)
rewrite Case1 in goal at 2(rank:32)
rewrite Case1 in goal at 3(rank:32)
rewrite <- Case1 in goal at 2(rank:16)
case string_eq (string4) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
rewrite Cond1 in goal at 0(rank:24)
=================================================
Progress: 427


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:16)
rewrite Case1 in goal at 2(rank:32)
case string_eq (string3) (string4)(rank:17)
rewrite Case1 in goal at 0(rank:32)
rewrite Case1 in goal at 1(rank:32)
=================================================
Progress: 428


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 429


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 430


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:16)
rewrite <- Case1 in goal at 1(rank:16)
rewrite Case1 in goal at 0(rank:32)
rewrite Case1 in goal at 1(rank:32)
rewrite Case1 in goal at 2(rank:32)
rewrite Case1 in goal at 3(rank:32)
rewrite <- Case1 in goal at 2(rank:16)
case string_eq (string4) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
rewrite Cond1 in goal at 0(rank:24)
=================================================
Progress: 431


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:16)
rewrite Case1 in goal at 2(rank:32)
case string_eq (string3) (string4)(rank:17)
rewrite Case1 in goal at 0(rank:32)
rewrite Case1 in goal at 1(rank:32)
=================================================
Progress: 432


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 433


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 434


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:16)
rewrite <- Case1 in goal at 1(rank:16)
rewrite Case1 in goal at 0(rank:32)
rewrite Case1 in goal at 1(rank:32)
rewrite Case1 in goal at 2(rank:32)
rewrite Case1 in goal at 3(rank:32)
rewrite <- Case1 in goal at 2(rank:16)
case string_eq (string4) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
rewrite Cond1 in goal at 0(rank:24)
=================================================
Progress: 435


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:16)
rewrite Case1 in goal at 2(rank:32)
case string_eq (string3) (string4)(rank:17)
rewrite Case1 in goal at 0(rank:32)
rewrite Case1 in goal at 1(rank:32)
=================================================
Progress: 436


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 437


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:31)
rewrite <- Case2 in goal at 0(rank:31)
rewrite <- Case3 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
=================================================
Progress: 438


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:16)
=================================================
Progress: 439


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:16)
=================================================
Progress: 440


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 441


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:16)
=================================================
Progress: 442


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 443


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:31)
rewrite <- Case2 in goal at 0(rank:31)
rewrite <- Case3 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
=================================================
Progress: 444


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:16)
=================================================
Progress: 445


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:16)
=================================================
Progress: 446


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 447


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:16)
=================================================
Progress: 448


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 449


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:31)
rewrite <- Case2 in goal at 0(rank:31)
rewrite <- Case3 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
=================================================
Progress: 450


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:16)
=================================================
Progress: 451


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:16)
=================================================
Progress: 452


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 453


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:16)
=================================================
Progress: 454


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 455


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string2) (string4)(rank:16)
case string_eq (string4) (string3)(rank:16)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 456


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 457


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string4)(rank:16)
case string_eq (string4) (string2)(rank:16)
rewrite Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
=================================================
Progress: 458


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 459


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string2) (string4)(rank:16)
case string_eq (string4) (string3)(rank:16)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 460


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 461


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string4)(rank:16)
case string_eq (string4) (string2)(rank:16)
rewrite Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
=================================================
Progress: 462


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 463


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string2) (string4)(rank:16)
case string_eq (string4) (string3)(rank:16)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 464


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 465


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string4)(rank:16)
case string_eq (string4) (string2)(rank:16)
rewrite Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
=================================================
Progress: 466


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 467


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 468


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 469


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 470


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 471


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 472


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 473


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 474


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 475


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 476


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 477


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:16)
=================================================
Progress: 478


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:16)
rewrite <- Case2 in goal at 2(rank:16)
rewrite <- Cond1 in goal at 0(rank:24)
case string_eq (string4) (string3)(rank:17)
rewrite Cond1 in goal at 0(rank:24)
rewrite Case2 in goal at 0(rank:32)
rewrite <- Case2 in goal at 1(rank:16)
=================================================
Progress: 479


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:17)
rewrite Case2 in goal at 2(rank:32)
rewrite Case2 in goal at 0(rank:32)
rewrite Case2 in goal at 1(rank:32)
=================================================
Progress: 480


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:16)
rewrite <- Case2 in goal at 1(rank:16)
rewrite <- Case2 in goal at 2(rank:16)
case string_eq (string4) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
rewrite Cond1 in goal at 0(rank:24)
=================================================
Progress: 481


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:16)
rewrite Case2 in goal at 2(rank:32)
case string_eq (string3) (string4)(rank:17)
rewrite Case2 in goal at 0(rank:32)
rewrite Case2 in goal at 1(rank:32)
=================================================
Progress: 482


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:16)
rewrite <- Case2 in goal at 2(rank:16)
rewrite <- Cond1 in goal at 0(rank:24)
case string_eq (string4) (string3)(rank:17)
rewrite Cond1 in goal at 0(rank:24)
rewrite Case2 in goal at 0(rank:32)
rewrite <- Case2 in goal at 1(rank:16)
=================================================
Progress: 483


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:17)
rewrite Case2 in goal at 2(rank:32)
rewrite Case2 in goal at 0(rank:32)
rewrite Case2 in goal at 1(rank:32)
=================================================
Progress: 484


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:16)
rewrite <- Case2 in goal at 1(rank:16)
rewrite <- Case2 in goal at 2(rank:16)
case string_eq (string4) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
rewrite Cond1 in goal at 0(rank:24)
=================================================
Progress: 485


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:16)
rewrite Case2 in goal at 2(rank:32)
case string_eq (string3) (string4)(rank:17)
rewrite Case2 in goal at 0(rank:32)
rewrite Case2 in goal at 1(rank:32)
=================================================
Progress: 486


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:16)
rewrite <- Case2 in goal at 2(rank:16)
rewrite <- Cond1 in goal at 0(rank:24)
case string_eq (string4) (string3)(rank:17)
rewrite Cond1 in goal at 0(rank:24)
rewrite Case2 in goal at 0(rank:32)
rewrite <- Case2 in goal at 1(rank:16)
=================================================
Progress: 487


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:17)
rewrite Case2 in goal at 2(rank:32)
rewrite Case2 in goal at 0(rank:32)
rewrite Case2 in goal at 1(rank:32)
=================================================
Progress: 488


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:16)
rewrite <- Case2 in goal at 1(rank:16)
rewrite <- Case2 in goal at 2(rank:16)
case string_eq (string4) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
rewrite Cond1 in goal at 0(rank:24)
=================================================
Progress: 489


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:16)
rewrite Case2 in goal at 2(rank:32)
case string_eq (string3) (string4)(rank:17)
rewrite Case2 in goal at 0(rank:32)
rewrite Case2 in goal at 1(rank:32)
=================================================
Progress: 490


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 491


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 492


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 493


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 494


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 495


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 496


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:17)
=================================================
Progress: 497


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 498


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 499


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 500


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 501


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 502


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 503


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:17)
=================================================
Progress: 504


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 505


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 506


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 507


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 508


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 509


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 510


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:17)
=================================================
Progress: 511


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 17)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 512


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (listStation (V (string2))) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9)
=================================================
Progress: 513


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 514


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string2)(rank:10)
rewrite <- Cond1 in goal at 2(rank:17)
rewrite <- Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 1(rank:25)
=================================================
Progress: 515


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 516


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
=================================================
Progress: 517


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 17)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 518


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9)
=================================================
Progress: 519


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:9)
=================================================
Progress: 520


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 521


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10)
rewrite <- Cond1 in goal at 2(rank:17)
rewrite <- Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 1(rank:25)
=================================================
Progress: 522


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 523


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:10)
rewrite <- Cond1 in goal at 2(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 1(rank:25)
=================================================
Progress: 524


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 525


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25)
rewrite <- Case2 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
=================================================
Progress: 526


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 17)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 527


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string2:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:9)
=================================================
Progress: 528


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string2:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 529


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:10)
rewrite <- Cond1 in goal at 2(rank:17)
rewrite <- Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 1(rank:25)
=================================================
Progress: 530


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 531


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string3)(rank:10)
rewrite <- Cond1 in goal at 2(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 1(rank:25)
=================================================
Progress: 532


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 533


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:25)
rewrite <- Case2 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
=================================================
Progress: 534


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 17)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:10)
case string_eq (string2) (string1)(rank:10)
=================================================
Progress: 535


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10)
=================================================
Progress: 536


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string1)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10)
=================================================
Progress: 537


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10)
rewrite <- Case1 in goal at 1(rank:10)
rewrite Case1 in goal at 0(rank:26)
rewrite Case1 in goal at 1(rank:26)
rewrite Case1 in goal at 2(rank:26)
rewrite Case1 in goal at 3(rank:26)
rewrite <- Case1 in goal at 2(rank:10)
case string_eq (string2) (string1)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
rewrite Cond1 in goal at 0(rank:18)
=================================================
Progress: 538


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string2) (string1) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10)
rewrite Case1 in goal at 2(rank:26)
case string_eq (string1) (string2)(rank:11)
rewrite Case1 in goal at 0(rank:26)
rewrite Case1 in goal at 1(rank:26)
=================================================
Progress: 539


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 540


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 541


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10)
=================================================
Progress: 542


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 543


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 1(rank:18)
rewrite <- Cond1 in goal at 0(rank:26)
rewrite <- Cond1 in goal at 2(rank:26)
=================================================
Progress: 544


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 1(rank:18)
rewrite <- Cond1 in goal at 0(rank:26)
rewrite <- Cond1 in goal at 2(rank:26)
=================================================
Progress: 545


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string1 = string2
---------------------------------------
list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string1)(rank:11)
=================================================
Progress: 546


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if string_eq (string2) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 547


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string2 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string2) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:8)
=================================================
Progress: 548


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string2) (string1) = false
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 18
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 549


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (listStation (P (string2) (lambda2))) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8)
=================================================
Progress: 550


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- Cond1 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 551


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Model : lambda2: V ("gos"), string1: "nfh", string2: "lgu"
Model : lambda2: V ("kxx"), string1: "rvh", string2: "bjf"
Model : lambda2: P ("euz") (V ("jlt")), string1: "qrv", string2: "ykj"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("gos")) (("lgu"::("nfh"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("gos"))) ("lgu")) ("nfh")) ((Nil))
sub_check_ta1 (V ("kxx")) (("bjf"::("rvh"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V ("kxx"))) ("bjf")) ("rvh")) ((Nil))
sub_check_ta1 (P ("euz") (V ("jlt"))) (("ykj"::("qrv"::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P ("euz") (V ("jlt")))) ("ykj")) ("qrv")) ((Nil))
Simplifying took 0.009147 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 552


1st goal of : forall (lambda1:lambda) (string1:string), list_eq (deleteAll (listStation (lambda1)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (listStation (lambda2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda2:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:9)
intro string1(rank:9)
intro string2(rank:9)
induction lambda1(rank:19)
=================================================
Progress: 553


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9)
=================================================
Progress: 554


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string2(rank:9)
induction lambda1(rank:19)
=================================================
Progress: 555


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11)
=================================================
Progress: 556


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9)
=================================================
Progress: 557


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11)
=================================================
Progress: 558


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 559


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9)
=================================================
Progress: 560


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
Model : lambda1: V ("pma"), string1: "rrw", string2: "hiv"
Model : lambda1: P ("mde") (P ("wnd") (V ("jiq"))), string1: "jay", string2: "dwx"
Model : lambda1: V ("qya"), string1: "hbn", string2: "pvg"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("pma")) (("hiv"::("rrw"::(Nil)))) = true
sub_check_ta1 (P ("mde") (P ("wnd") (V ("jiq")))) (("dwx"::("jay"::(Nil)))) = true
sub_check_ta1 (V ("qya")) (("pvg"::("hbn"::(Nil)))) = true
Simplifying took 0.007056 seconds
Result : true
advanced_generalize done
=================================================
Progress: 561


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 562


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 563


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11)
=================================================
Progress: 564


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (V (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 565


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 566


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12)
case string_eq (string3) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 567


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string3)(rank:12)
case string_eq (string3) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 568


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 569


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 570


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 571


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 572


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12)
rewrite <- Case1 in goal at 1(rank:12)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
rewrite Case1 in goal at 2(rank:28)
rewrite Case1 in goal at 3(rank:28)
rewrite <- Case1 in goal at 2(rank:12)
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 573


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12)
rewrite Case1 in goal at 2(rank:28)
case string_eq (string2) (string3)(rank:13)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
=================================================
Progress: 574


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12)
rewrite <- Case1 in goal at 1(rank:12)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
rewrite Case1 in goal at 2(rank:28)
rewrite Case1 in goal at 3(rank:28)
rewrite <- Case1 in goal at 2(rank:12)
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 575


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12)
rewrite Case1 in goal at 2(rank:28)
case string_eq (string2) (string3)(rank:13)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
=================================================
Progress: 576


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 577


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 578


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 579


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 580


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 581


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 582


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 583


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 584


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 585


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string3)(rank:12)
case string_eq (string3) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 586


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 587


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:12)
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 588


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 589


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string3)(rank:12)
case string_eq (string3) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 590


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 591


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:12)
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 592


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 593


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 594


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 595


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 596


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 597


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 598


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 599


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 600


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string3) (string2)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case2 in goal at 0(rank:28)
rewrite <- Case2 in goal at 1(rank:12)
=================================================
Progress: 601


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 602


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 603


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12)
rewrite Case2 in goal at 2(rank:28)
case string_eq (string2) (string3)(rank:13)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 604


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string3) (string2)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case2 in goal at 0(rank:28)
rewrite <- Case2 in goal at 1(rank:12)
=================================================
Progress: 605


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string3)(rank:13)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 606


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 607


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12)
rewrite Case2 in goal at 2(rank:28)
case string_eq (string2) (string3)(rank:13)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 608


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 609


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 610


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 611


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 612


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 613


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 614


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13)
=================================================
Progress: 615


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 616


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 617


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 618


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 619


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 620


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 621


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:13)
=================================================
Progress: 622


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
case string_eq (string3) (string1)(rank:13)
=================================================
Progress: 623


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13)
=================================================
Progress: 624


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
case string_eq (string3) (string1)(rank:13)
=================================================
Progress: 625


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:13)
=================================================
Progress: 626


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 627


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 3(rank:28)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 628


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 629


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 630


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 631


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 632


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 4
case string_eq (string3) (string2)(rank:12)
rewrite <- Case2 in goal at 0(rank:19)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
=================================================
Progress: 633


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 634


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string3 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
=================================================
Progress: 635


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 636


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
=================================================
Progress: 637


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 638


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 639


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:12)
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 640


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 641


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 642


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 643


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string1) (string3)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 644


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 645


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 646


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 647


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 648


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 649


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
=================================================
Progress: 650


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 651


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10)
=================================================
Progress: 652


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 653


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 654


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10)
=================================================
Progress: 655


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Model : lambda2: P ("tkw") (V ("kdp")), string1: "uua", string2: "tdq", string3: "qxf"
Model : lambda2: V ("drt"), string1: "hgy", string2: "lfo", string3: "svf"
Model : lambda2: V ("dvf"), string1: "zfj", string2: "kna", string3: "zkf"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (P ("tkw") (V ("kdp"))) (("qxf"::("tdq"::("uua"::(Nil))))) = true
sub_check_ta1 (V ("drt")) (("svf"::("lfo"::("hgy"::(Nil))))) = true
sub_check_ta1 (V ("dvf")) (("zkf"::("kna"::("zfj"::(Nil))))) = true
Simplifying took 0.006878 seconds
Result : true
advanced_generalize done
=================================================
Progress: 656


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 657


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 3(rank:28)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 658


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 659


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 660


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 661


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 662


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string1 = string3
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 4
case string_eq (string3) (string2)(rank:12)
rewrite <- Case2 in goal at 0(rank:19)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
=================================================
Progress: 663


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 664


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string_eq (string3) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
Case3 : string3 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
=================================================
Progress: 665


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 666


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string3 = string2
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
=================================================
Progress: 667


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 668


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 669


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:12)
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 670


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 671


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 672


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 673


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string1) (string3)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 674


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 675


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 676


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 677


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 678


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 679


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
=================================================
Progress: 680


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 681


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10)
=================================================
Progress: 682


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 28
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 683


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:10)
=================================================
Progress: 684


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 685


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10)
=================================================
Progress: 686


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil))
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Model : lambda2: V ("hhz"), string1: "yrx", string2: "tcp", string3: "tyo"
Model : lambda2: C (V ("fko")) (V ("wbm")), string1: "pav", string2: "uqv", string3: "dso"
Model : lambda2: V ("uji"), string1: "rck", string2: "nke", string3: "jfp"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("hhz")) (("tyo"::("tcp"::("yrx"::(Nil))))) = true
sub_check_ta1 (C (V ("fko")) (V ("wbm"))) (("dso"::("uqv"::("pav"::(Nil))))) = true
sub_check_ta1 (V ("uji")) (("jfp"::("nke"::("rck"::(Nil))))) = true
Simplifying took 0.009905 seconds
Result : true
advanced_generalize done
=================================================
Progress: 687


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 17)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:10)
case string_eq (string3) (string2)(rank:10)
=================================================
Progress: 688


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10)
=================================================
Progress: 689


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10)
=================================================
Progress: 690


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10)
rewrite <- Case1 in goal at 1(rank:10)
rewrite Case1 in goal at 0(rank:26)
rewrite Case1 in goal at 1(rank:26)
rewrite Case1 in goal at 2(rank:26)
rewrite Case1 in goal at 3(rank:26)
rewrite <- Case1 in goal at 2(rank:10)
case string_eq (string3) (string2)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
rewrite Cond1 in goal at 0(rank:18)
=================================================
Progress: 691


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10)
rewrite Case1 in goal at 2(rank:26)
case string_eq (string2) (string3)(rank:11)
rewrite Case1 in goal at 0(rank:26)
rewrite Case1 in goal at 1(rank:26)
=================================================
Progress: 692


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 693


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 694


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
=================================================
Progress: 695


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 696


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 1(rank:18)
rewrite <- Cond1 in goal at 0(rank:26)
rewrite <- Cond1 in goal at 2(rank:26)
=================================================
Progress: 697


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 1(rank:18)
rewrite <- Cond1 in goal at 0(rank:26)
rewrite <- Cond1 in goal at 2(rank:26)
=================================================
Progress: 698


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 699


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:10)
case string_eq (string3) (string1)(rank:10)
rewrite Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
=================================================
Progress: 700


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10)
=================================================
Progress: 701


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10)
=================================================
Progress: 702


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:10)
rewrite <- Case2 in goal at 1(rank:10)
rewrite <- Case2 in goal at 2(rank:10)
case string_eq (string3) (string1)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
rewrite Cond1 in goal at 0(rank:18)
=================================================
Progress: 703


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10)
rewrite Case2 in goal at 2(rank:26)
case string_eq (string2) (string3)(rank:11)
rewrite Case2 in goal at 0(rank:26)
rewrite Case2 in goal at 1(rank:26)
=================================================
Progress: 704


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
=================================================
Progress: 705


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10)
=================================================
Progress: 706


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10)
=================================================
Progress: 707


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:11)
=================================================
Progress: 708


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11)
case string_eq (string3) (string1)(rank:11)
=================================================
Progress: 709


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:11)
=================================================
Progress: 710


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 711


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:10)
rewrite <- Case1 in goal at 1(rank:10)
rewrite <- Case1 in goal at 2(rank:10)
case string_eq (string3) (string1)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
rewrite Cond1 in goal at 0(rank:18)
=================================================
Progress: 712


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
=================================================
Progress: 713


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10)
=================================================
Progress: 714


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10)
=================================================
Progress: 715


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11)
case string_eq (string3) (string1)(rank:11)
=================================================
Progress: 716


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:11)
=================================================
Progress: 717


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:11)
=================================================
Progress: 718


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 719


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:9)
=================================================
Progress: 720


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:10)
case string_eq (string3) (string1)(rank:10)
rewrite Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
=================================================
Progress: 721


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:10)
=================================================
Progress: 722


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:10)
=================================================
Progress: 723


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:10)
rewrite <- Case3 in goal at 1(rank:10)
rewrite Case3 in goal at 0(rank:26)
rewrite Case3 in goal at 1(rank:26)
rewrite Case3 in goal at 2(rank:26)
rewrite Case3 in goal at 3(rank:26)
rewrite <- Case3 in goal at 2(rank:10)
case string_eq (string3) (string1)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
rewrite Cond1 in goal at 0(rank:18)
=================================================
Progress: 724


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:10)
rewrite Case3 in goal at 2(rank:26)
case string_eq (string1) (string3)(rank:11)
rewrite Case3 in goal at 0(rank:26)
rewrite Case3 in goal at 1(rank:26)
=================================================
Progress: 725


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 726


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 727


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10)
=================================================
Progress: 728


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 729


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 730


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:10)
rewrite Cond1 in goal at 0(rank:17)
rewrite <- Case1 in goal at 0(rank:17)
rewrite <- Case2 in goal at 0(rank:17)
rewrite <- Case3 in goal at 0(rank:17)
=================================================
Progress: 731


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 732


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:8)
=================================================
Progress: 733


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 44
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 734


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8)
=================================================
Progress: 735


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:17)
rewrite <- Cond1 in goal at 0(rank:24)
=================================================
Progress: 736


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 2(rank : 17)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:10)
case string_eq (string3) (string2)(rank:10)
=================================================
Progress: 737


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10)
=================================================
Progress: 738


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10)
=================================================
Progress: 739


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:10)
rewrite <- Case1 in goal at 1(rank:10)
rewrite Case1 in goal at 0(rank:26)
rewrite Case1 in goal at 1(rank:26)
rewrite Case1 in goal at 2(rank:26)
rewrite Case1 in goal at 3(rank:26)
rewrite <- Case1 in goal at 2(rank:10)
case string_eq (string3) (string2)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
rewrite Cond1 in goal at 0(rank:18)
=================================================
Progress: 740


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:10)
rewrite Case1 in goal at 2(rank:26)
case string_eq (string2) (string3)(rank:11)
rewrite Case1 in goal at 0(rank:26)
rewrite Case1 in goal at 1(rank:26)
=================================================
Progress: 741


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 742


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 743


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
=================================================
Progress: 744


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 745


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 1(rank:18)
rewrite <- Cond1 in goal at 0(rank:26)
rewrite <- Cond1 in goal at 2(rank:26)
=================================================
Progress: 746


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 1(rank:18)
rewrite <- Cond1 in goal at 0(rank:26)
rewrite <- Cond1 in goal at 2(rank:26)
=================================================
Progress: 747


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 748


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string3 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string3)(rank:10)
case string_eq (string3) (string1)(rank:10)
rewrite Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
=================================================
Progress: 749


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10)
=================================================
Progress: 750


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:10)
=================================================
Progress: 751


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:10)
rewrite <- Case2 in goal at 1(rank:10)
rewrite <- Case2 in goal at 2(rank:10)
case string_eq (string3) (string1)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
rewrite Cond1 in goal at 0(rank:18)
=================================================
Progress: 752


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:10)
rewrite Case2 in goal at 2(rank:26)
case string_eq (string2) (string3)(rank:11)
rewrite Case2 in goal at 0(rank:26)
rewrite Case2 in goal at 1(rank:26)
=================================================
Progress: 753


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
=================================================
Progress: 754


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10)
=================================================
Progress: 755


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10)
=================================================
Progress: 756


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string3 = string1
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string3::(Nil))) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:11)
=================================================
Progress: 757


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11)
case string_eq (string3) (string1)(rank:11)
=================================================
Progress: 758


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:11)
=================================================
Progress: 759


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 760


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:10)
rewrite <- Case1 in goal at 1(rank:10)
rewrite <- Case1 in goal at 2(rank:10)
case string_eq (string3) (string1)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
rewrite Cond1 in goal at 0(rank:18)
=================================================
Progress: 761


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
=================================================
Progress: 762


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10)
=================================================
Progress: 763


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10)
=================================================
Progress: 764


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:11)
case string_eq (string3) (string1)(rank:11)
=================================================
Progress: 765


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = false
---------------------------------------
list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string1)(rank:11)
=================================================
Progress: 766


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string2 = string3
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string2 = string3
Case2 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:11)
=================================================
Progress: 767


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10)
=================================================
Progress: 768


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:9)
=================================================
Progress: 769


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string2 = string3
Case3 : string_eq (string3) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string3)(rank:10)
case string_eq (string3) (string1)(rank:10)
rewrite Cond1 in goal at 0(rank:25)
rewrite <- Cond1 in goal at 0(rank:25)
=================================================
Progress: 770


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:10)
=================================================
Progress: 771


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string3) (string1)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:10)
=================================================
Progress: 772


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = true
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:10)
rewrite <- Case3 in goal at 1(rank:10)
rewrite Case3 in goal at 0(rank:26)
rewrite Case3 in goal at 1(rank:26)
rewrite Case3 in goal at 2(rank:26)
rewrite Case3 in goal at 3(rank:26)
rewrite <- Case3 in goal at 2(rank:10)
case string_eq (string3) (string1)(rank:11)
rewrite <- Cond1 in goal at 0(rank:18)
rewrite Cond1 in goal at 0(rank:18)
=================================================
Progress: 773


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = true
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:10)
rewrite Case3 in goal at 2(rank:26)
case string_eq (string1) (string3)(rank:11)
rewrite Case3 in goal at 0(rank:26)
rewrite Case3 in goal at 1(rank:26)
=================================================
Progress: 774


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 775


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 776


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:10)
=================================================
Progress: 777


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:10)
=================================================
Progress: 778


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 779


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string1 = string3
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string1) (string3) = false
---------------------------------------
false = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 9
Tactic List : 5
case string_eq (string3) (string1)(rank:10)
rewrite Cond1 in goal at 0(rank:17)
rewrite <- Case1 in goal at 0(rank:17)
rewrite <- Case2 in goal at 0(rank:17)
rewrite <- Case3 in goal at 0(rank:17)
=================================================
Progress: 780


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if string_eq (string3) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 781


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string3 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string3) = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:8)
=================================================
Progress: 782


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string3) (string2) = false
Case2 : string_eq (string2) (string3) = false
Case3 : string_eq (string3) (string1) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 44
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 783


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (listStation (P (string3) (lambda2))) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:8)
=================================================
Progress: 784


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8)
=================================================
Progress: 785


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:8)
=================================================
Progress: 786


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
rewrite <- Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda2: P ("yah") (V ("hkt")), string1: "ojp", string2: "oya", string3: "tpr"
Model : lambda2: V ("mms"), string1: "hjf", string2: "myj", string3: "hpm"
Model : lambda2: V ("pir"), string1: "mzy", string2: "uei", string3: "ndz"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (P ("yah") (V ("hkt"))) (("tpr"::("oya"::("ojp"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P ("yah") (V ("hkt")))) ("tpr")) ("oya")) ("ojp")) ((Nil))
sub_check_ta1 (V ("mms")) (("hpm"::("myj"::("hjf"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("mms"))) ("hpm")) ("myj")) ("hjf")) ((Nil))
sub_check_ta1 (V ("pir")) (("ndz"::("uei"::("mzy"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("pir"))) ("ndz")) ("uei")) ("mzy")) ((Nil))
Simplifying took 0.014626 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 787


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (listStation (lambda1)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), list_eq (deleteAll (deleteAll (listStation (lambda2)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda2:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:9)
intro string2(rank:9)
intro string3(rank:9)
induction lambda1(rank:19)
intro string1(rank:9)
=================================================
Progress: 788


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9)
=================================================
Progress: 789


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro string2(rank:9)
intro string3(rank:9)
induction lambda1(rank:19)
=================================================
Progress: 790


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9)
induction lambda1(rank:19)
=================================================
Progress: 791


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11)
=================================================
Progress: 792


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9)
=================================================
Progress: 793


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9)
induction lambda1(rank:19)
=================================================
Progress: 794


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11)
=================================================
Progress: 795


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:9)
induction lambda1(rank:19)
=================================================
Progress: 796


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string3(rank:9)
=================================================
Progress: 797


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11)
=================================================
Progress: 798


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9)
=================================================
Progress: 799


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 800


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 801


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9)
=================================================
Progress: 802


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("mmp"), string1: "dzn", string2: "zrz", string3: "mcl"
Model : lambda1: V ("jgz"), string1: "rif", string2: "zpf", string3: "iud"
Model : lambda1: V ("dri"), string1: "ims", string2: "xsn", string3: "urf"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("mmp")) (("mcl"::("zrz"::("dzn"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("mmp"))) ("mcl")) ("zrz")) ("dzn")) ((Nil))
sub_check_ta1 (V ("jgz")) (("iud"::("zpf"::("rif"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("jgz"))) ("iud")) ("zpf")) ("rif")) ((Nil))
sub_check_ta1 (V ("dri")) (("urf"::("xsn"::("ims"::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V ("dri"))) ("urf")) ("xsn")) ("ims")) ((Nil))
Simplifying took 0.011298 seconds
Result : true
advanced_generalize done
=================================================
Progress: 803


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
Model : lambda1: V ("bnq"), string1: "oqo", string2: "dai", string3: "zjo"
Model : lambda1: C (V ("zky")) (V ("yfi")), string1: "ocz", string2: "joo", string3: "grz"
Model : lambda1: V ("twg"), string1: "ulm", string2: "cgc", string3: "kcf"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("bnq")) (("zjo"::("dai"::("oqo"::(Nil))))) = true
sub_check_ta1 (C (V ("zky")) (V ("yfi"))) (("grz"::("joo"::("ocz"::(Nil))))) = true
sub_check_ta1 (V ("twg")) (("kcf"::("cgc"::("ulm"::(Nil))))) = true
Simplifying took 0.012881 seconds
Result : true
advanced_generalize done
=================================================
Progress: 804


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 805


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 806


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 807


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11)
=================================================
Progress: 808


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11)
=================================================
Progress: 809


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (V (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 810


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11)
=================================================
Progress: 811


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 812


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12)
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 813


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 814


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12)
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 815


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string3) (string4)(rank:12)
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 816


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 817


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 818


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 819


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 820


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 821


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12)
=================================================
Progress: 822


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12)
rewrite <- Case1 in goal at 1(rank:12)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
rewrite Case1 in goal at 2(rank:28)
rewrite Case1 in goal at 3(rank:28)
rewrite <- Case1 in goal at 2(rank:12)
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 823


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12)
rewrite Case1 in goal at 2(rank:28)
case string_eq (string3) (string4)(rank:13)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
=================================================
Progress: 824


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12)
rewrite <- Case1 in goal at 1(rank:12)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
rewrite Case1 in goal at 2(rank:28)
rewrite Case1 in goal at 3(rank:28)
rewrite <- Case1 in goal at 2(rank:12)
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 825


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12)
rewrite Case1 in goal at 2(rank:28)
case string_eq (string3) (string4)(rank:13)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
=================================================
Progress: 826


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:12)
rewrite <- Case1 in goal at 1(rank:12)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
rewrite Case1 in goal at 2(rank:28)
rewrite Case1 in goal at 3(rank:28)
rewrite <- Case1 in goal at 2(rank:12)
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 827


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:12)
rewrite Case1 in goal at 2(rank:28)
case string_eq (string3) (string4)(rank:13)
rewrite Case1 in goal at 0(rank:28)
rewrite Case1 in goal at 1(rank:28)
=================================================
Progress: 828


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 829


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 830


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 831


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 832


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 833


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 834


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 835


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 836


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 837


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 838


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 839


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 840


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 841


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 842


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 843


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string4)(rank:12)
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 844


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 845


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 846


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 847


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string4)(rank:12)
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 848


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string3) (string3) then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 849


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if true then deleteAll ((Nil)) (string3) else (string3::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 850


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 851


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string4 = string3
---------------------------------------
if true then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string3) (string4)(rank:12)
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 852


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 853


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 854


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 855


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 856


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 857


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 858


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 859


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 860


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 861


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 862


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 863


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case2 at 0(rank:12)
=================================================
Progress: 864


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string3)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case2 in goal at 0(rank:28)
rewrite <- Case2 in goal at 1(rank:12)
=================================================
Progress: 865


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:13)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 866


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 867


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12)
rewrite Case2 in goal at 2(rank:28)
case string_eq (string3) (string4)(rank:13)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 868


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string3)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case2 in goal at 0(rank:28)
rewrite <- Case2 in goal at 1(rank:12)
=================================================
Progress: 869


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:13)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 870


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 871


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12)
rewrite Case2 in goal at 2(rank:28)
case string_eq (string3) (string4)(rank:13)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 872


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string3)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case2 in goal at 0(rank:28)
rewrite <- Case2 in goal at 1(rank:12)
=================================================
Progress: 873


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string2) (string4)(rank:13)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 874


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 875


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case2 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12)
rewrite Case2 in goal at 2(rank:28)
case string_eq (string3) (string4)(rank:13)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 876


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 877


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 878


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 879


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 880


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 881


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 882


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13)
=================================================
Progress: 883


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 884


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 885


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 886


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 887


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 888


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 889


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13)
=================================================
Progress: 890


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 891


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string2) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 892


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string2::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 893


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 894


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 895


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 896


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string4::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13)
=================================================
Progress: 897


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 898


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 3(rank:28)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 899


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 900


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 901


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 902


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 903


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string1) (string4)(rank:12)
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 904


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 905


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 906


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string3)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case3 in goal at 0(rank:28)
rewrite <- Case3 in goal at 1(rank:12)
=================================================
Progress: 907


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 908


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 909


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 910


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 911


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 912


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:13)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 913


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 914


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 915


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 916


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 917


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 918


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 919


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 920


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 921


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12)
rewrite Case2 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 922


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 923


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 924


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string3) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 925


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 926


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 927


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 928


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string3) (string4)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 929


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 930


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 931


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 932


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13)
=================================================
Progress: 933


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 934


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 935


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 936


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 3(rank:28)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 937


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 938


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 939


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 940


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 941


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string1) (string4)(rank:12)
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 942


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 943


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 944


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string3)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case3 in goal at 0(rank:28)
rewrite <- Case3 in goal at 1(rank:12)
=================================================
Progress: 945


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 946


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 947


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 948


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 949


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 950


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:13)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 951


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 952


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 953


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 954


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 955


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 956


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 957


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 958


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 959


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12)
rewrite Case2 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 960


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 961


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 962


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string3) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 963


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 964


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 965


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 966


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string3) (string4)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 967


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 968


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 969


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 970


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13)
=================================================
Progress: 971


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 972


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 973


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 974


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 3(rank:28)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 975


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 976


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 977


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 978


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 979


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string2 = string4
Case3 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string1) (string4)(rank:12)
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 980


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 981


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 982


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string3)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case3 in goal at 0(rank:28)
rewrite <- Case3 in goal at 1(rank:12)
=================================================
Progress: 983


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string4) (string3) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 984


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 985


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 986


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string3)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 987


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 988


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string4)(rank:13)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 989


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 990


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:12)
rewrite <- Case2 in goal at 1(rank:12)
rewrite <- Case2 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 991


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 992


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 993


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 994


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 995


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 996


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 997


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:12)
rewrite Case2 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 998


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 999


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1000


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string4 = string2
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 8
Tactic List : 4
case string_eq (string3) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1001


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 1002


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 1003


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1004


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string3) (string4)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 1005


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1006


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1007


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1008


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:13)
=================================================
Progress: 1009


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string3) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1010


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1011


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1012


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 1013


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13)
=================================================
Progress: 1014


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13)
=================================================
Progress: 1015


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1016


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 1017


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13)
=================================================
Progress: 1018


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13)
=================================================
Progress: 1019


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1020


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string3) (string1) then deleteAll ((Nil)) (string1) else (string3::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
case string_eq (string3) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Case2 in goal at 2(rank:28)
rewrite Case2 in goal at 0(rank:28)
rewrite Case2 in goal at 1(rank:28)
=================================================
Progress: 1021


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string3) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string3) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13)
=================================================
Progress: 1022


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string3::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:13)
=================================================
Progress: 1023


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1024


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string2)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case3 in goal at 0(rank:28)
rewrite <- Case3 in goal at 1(rank:12)
=================================================
Progress: 1025


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1026


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1027


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1028


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1029


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case4 in goal at 0(rank:28)
=================================================
Progress: 1030


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1031


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
case string_eq (string1) (string2)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1032


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1033


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1034


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13)
=================================================
Progress: 1035


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1036


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
rewrite <- Case4 in goal at 0(rank:28)
=================================================
Progress: 1037


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1038


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 1039


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1040


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 1041


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 1042


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1043


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 1044


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1045


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1046


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1047


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1048


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1049


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string4)(rank:12)
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 1050


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1051


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1052


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1053


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1054


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1055


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1056


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string2)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case4 in goal at 0(rank:28)
rewrite <- Case4 in goal at 1(rank:12)
=================================================
Progress: 1057


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13)
rewrite Case4 in goal at 2(rank:28)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
=================================================
Progress: 1058


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 1(rank:12)
rewrite <- Case4 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1059


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12)
rewrite Case4 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
=================================================
Progress: 1060


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1061


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1062


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1063


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1064


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1065


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1066


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13)
=================================================
Progress: 1067


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1068


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1069


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1070


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 1071


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1072


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1073


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1074


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 1(rank:12)
rewrite <- Case4 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1075


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12)
rewrite Case4 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
=================================================
Progress: 1076


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1077


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1078


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1079


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13)
=================================================
Progress: 1080


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1081


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1082


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1083


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 1084


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13)
=================================================
Progress: 1085


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13)
=================================================
Progress: 1086


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1087


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string2)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case3 in goal at 0(rank:28)
rewrite <- Case3 in goal at 1(rank:12)
=================================================
Progress: 1088


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1089


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1090


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1091


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1092


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case4 in goal at 0(rank:28)
=================================================
Progress: 1093


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1094


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
case string_eq (string1) (string2)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1095


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1096


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1097


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13)
=================================================
Progress: 1098


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1099


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
rewrite <- Case4 in goal at 0(rank:28)
=================================================
Progress: 1100


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1101


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 1102


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1103


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 1104


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 1105


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1106


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 1107


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1108


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1109


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1110


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1111


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1112


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string4)(rank:12)
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 1113


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1114


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1115


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1116


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1117


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1118


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1119


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string2)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case4 in goal at 0(rank:28)
rewrite <- Case4 in goal at 1(rank:12)
=================================================
Progress: 1120


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13)
rewrite Case4 in goal at 2(rank:28)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
=================================================
Progress: 1121


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 1(rank:12)
rewrite <- Case4 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1122


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12)
rewrite Case4 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
=================================================
Progress: 1123


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1124


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1125


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1126


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1127


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1128


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1129


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13)
=================================================
Progress: 1130


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1131


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1132


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1133


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 1134


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1135


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1136


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1137


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 1(rank:12)
rewrite <- Case4 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1138


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12)
rewrite Case4 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
=================================================
Progress: 1139


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1140


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1141


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1142


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13)
=================================================
Progress: 1143


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1144


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1145


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1146


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 1147


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13)
=================================================
Progress: 1148


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13)
=================================================
Progress: 1149


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1150


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 7
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string2)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case3 in goal at 0(rank:28)
rewrite <- Case3 in goal at 1(rank:12)
=================================================
Progress: 1151


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1152


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1153


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1154


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1155


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string4 = string3
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case4 in goal at 0(rank:28)
=================================================
Progress: 1156


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1157


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 6
case string_eq (string1) (string2)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1158


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string1) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1159


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string1) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1160


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string1::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13)
=================================================
Progress: 1161


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1162


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string4 = string3
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
rewrite <- Case4 in goal at 0(rank:28)
=================================================
Progress: 1163


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1164


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 1165


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string3 = string4
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 19
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1166


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 1167


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case3 at 0(rank:12)
=================================================
Progress: 1168


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1169


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case3 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 1170


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1171


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1172


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1173


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1174


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string2) (string2) then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1175


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string2 = string4
---------------------------------------
true = list_eq (deleteAll (if true then deleteAll ((Nil)) (string2) else (string2::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 10
Tactic List : 4
case string_eq (string1) (string4)(rank:12)
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Cond1 in goal at 0(rank:19)
=================================================
Progress: 1176


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1177


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string4 = string2
---------------------------------------
if true then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1178


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1179


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1180


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1181


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1182


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 2(rank:12)
rewrite <- Cond1 in goal at 0(rank:20)
case string_eq (string4) (string2)(rank:13)
rewrite Cond1 in goal at 0(rank:20)
rewrite Case4 in goal at 0(rank:28)
rewrite <- Case4 in goal at 1(rank:12)
=================================================
Progress: 1183


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string4) (string2) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case string_eq (string1) (string4)(rank:13)
rewrite Case4 in goal at 2(rank:28)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
=================================================
Progress: 1184


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 1(rank:12)
rewrite <- Case4 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1185


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12)
rewrite Case4 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
=================================================
Progress: 1186


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1187


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string1) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string1) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1188


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string1::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string4) (string2)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1189


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1190


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1191


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1192


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13)
=================================================
Progress: 1193


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1194


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1195


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1196


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 1197


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string3 = string4
Case4 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string2) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1198


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1199


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1200


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string2) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 1(rank:12)
rewrite <- Case4 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1201


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case4 in goal at 0(rank:12)
rewrite Case4 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
=================================================
Progress: 1202


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
=================================================
Progress: 1203


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1204


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1205


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string4 = string1
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13)
=================================================
Progress: 1206


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string2) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case string_eq (string2) (string1)(rank:13)
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1207


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string_eq (string3) (string4) = false
Case4 : string2 = string4
---------------------------------------
list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string2::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string1)(rank:13)
=================================================
Progress: 1208


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1209


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case3 in goal at 0(rank:12)
rewrite Case3 in goal at 2(rank:28)
case string_eq (string2) (string4)(rank:13)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
=================================================
Progress: 1210


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string4::(Nil))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string4)(rank:13)
=================================================
Progress: 1211


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string4::(Nil)))) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string4) (string2) = false
Case3 : string4 = string1
Case4 : string_eq (string3) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:13)
=================================================
Progress: 1212


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1213


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1214


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1215


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1216


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1217


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1218


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 33
Tactic List : 5
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
=================================================
Progress: 1219


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string_eq (string4) (string3) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1220


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string_eq (string4) (string3) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string4 = string3
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
=================================================
Progress: 1221


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1222


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 1(rank:12)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
rewrite Case4 in goal at 2(rank:28)
rewrite Case4 in goal at 3(rank:28)
rewrite <- Case4 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1223


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1224


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1225


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1226


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1227


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 6
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
rewrite <- Case4 in goal at 0(rank:19)
=================================================
Progress: 1228


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12)
=================================================
Progress: 1229


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string4 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
rewrite <- Case4 in goal at 0(rank:28)
=================================================
Progress: 1230


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1231


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
rewrite <- Case5 in goal at 0(rank:28)
=================================================
Progress: 1232


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1233


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 1234


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1235


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12)
=================================================
Progress: 1236


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12)
=================================================
Progress: 1237


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case5 in goal at 0(rank:12)
rewrite <- Case5 in goal at 1(rank:12)
rewrite Case5 in goal at 0(rank:28)
rewrite Case5 in goal at 1(rank:28)
rewrite Case5 in goal at 2(rank:28)
rewrite Case5 in goal at 3(rank:28)
rewrite <- Case5 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1238


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case5 in goal at 0(rank:12)
rewrite Case5 in goal at 2(rank:28)
case string_eq (string1) (string4)(rank:13)
rewrite Case5 in goal at 0(rank:28)
rewrite Case5 in goal at 1(rank:28)
=================================================
Progress: 1239


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1240


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1241


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1242


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1243


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1244


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 7
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
rewrite <- Case4 in goal at 0(rank:19)
rewrite <- Case5 in goal at 0(rank:19)
=================================================
Progress: 1245


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1246


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10)
=================================================
Progress: 1247


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 92
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 1248


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 1249


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10)
=================================================
Progress: 1250


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda2: V ("bfs"), string1: "ebb", string2: "lnx", string3: "lnp", string4: "ddo"
Model : lambda2: V ("prp"), string1: "fbb", string2: "zpg", string3: "wgk", string4: "smv"
Model : lambda2: V ("mlo"), string1: "zeo", string2: "cfn", string3: "ytz", string4: "vaj"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("bfs")) (("ddo"::("lnp"::("lnx"::("ebb"::(Nil)))))) = true
sub_check_ta1 (V ("prp")) (("smv"::("wgk"::("zpg"::("fbb"::(Nil)))))) = true
sub_check_ta1 (V ("mlo")) (("vaj"::("ytz"::("cfn"::("zeo"::(Nil)))))) = true
Simplifying took 0.009323 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 1251


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda2:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:11)
intro string2(rank:11)
intro string3(rank:11)
intro string4(rank:11)
induction lambda1(rank:21)
intro string1(rank:11)
=================================================
Progress: 1252


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11)
=================================================
Progress: 1253


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro string2(rank:11)
intro string3(rank:11)
intro string4(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 1254


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11)
intro string4(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 1255


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 1256


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13)
=================================================
Progress: 1257


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11)
=================================================
Progress: 1258


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11)
intro string4(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 1259


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 1260


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13)
=================================================
Progress: 1261


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:11)
intro string4(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 1262


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 1263


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 1264


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11)
=================================================
Progress: 1265


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 1266


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13)
=================================================
Progress: 1267


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11)
induction lambda1(rank:21)
=================================================
Progress: 1268


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11)
=================================================
Progress: 1269


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13)
=================================================
Progress: 1270


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11)
=================================================
Progress: 1271


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11)
=================================================
Progress: 1272


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11)
=================================================
Progress: 1273


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13)
=================================================
Progress: 1274


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11)
=================================================
Progress: 1275


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11)
=================================================
Progress: 1276


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11)
=================================================
Progress: 1277


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11)
=================================================
Progress: 1278


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 1279


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 1280


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 1281


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 1282


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 1283


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:11)
=================================================
Progress: 1284


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda1: V ("sul"), string1: "qjy", string2: "fcm", string3: "amj", string4: "ixt"
Model : lambda1: V ("xgz"), string1: "ati", string2: "mll", string3: "hua", string4: "yhb"
Model : lambda1: V ("xoi"), string1: "kmv", string2: "oqi", string3: "yor", string4: "tpm"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("sul")) (("ixt"::("amj"::("fcm"::("qjy"::(Nil)))))) = true
sub_check_ta1 (V ("xgz")) (("yhb"::("hua"::("mll"::("ati"::(Nil)))))) = true
sub_check_ta1 (V ("xoi")) (("tpm"::("yor"::("oqi"::("kmv"::(Nil)))))) = true
Simplifying took 0.012134 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1285


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:13)
intro string2(rank:13)
intro string3(rank:13)
intro string4(rank:13)
induction lambda1(rank:23)
intro string1(rank:13)
=================================================
Progress: 1286


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda1: V ("ojm"), string1: "mgk", string2: "gnt", string3: "grv", string4: "wfg"
Model : lambda1: C (P ("byl") (V ("zud"))) (V ("qhu")), string1: "elw", string2: "fki", string3: "tty", string4: "fkz"
Model : lambda1: V ("mqh"), string1: "krk", string2: "jjb", string3: "zat", string4: "cru"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("ojm")) (("wfg"::("grv"::("gnt"::("mgk"::(Nil)))))) = true
sub_check_ta1 (C (P ("byl") (V ("zud"))) (V ("qhu"))) (("fkz"::("tty"::("fki"::("elw"::(Nil)))))) = true
sub_check_ta1 (V ("mqh")) (("cru"::("zat"::("jjb"::("krk"::(Nil)))))) = true
Simplifying took 0.014344 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1287


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda1: V ("bro"), string1: "fub", string2: "sdb", string3: "rif", string4: "svw"
Model : lambda1: V ("zyx"), string1: "fcz", string2: "vlb", string3: "zlg", string4: "lal"
Model : lambda1: V ("pch"), string1: "ojr", string2: "wdc", string3: "dnj", string4: "yst"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("bro")) (("svw"::("rif"::("sdb"::("fub"::(Nil)))))) = true
sub_check_ta1 (V ("zyx")) (("lal"::("zlg"::("vlb"::("fcz"::(Nil)))))) = true
sub_check_ta1 (V ("pch")) (("yst"::("dnj"::("wdc"::("ojr"::(Nil)))))) = true
Simplifying took 0.011471 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1288


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda1: C (V ("ckh")) (V ("fbb")), string1: "are", string2: "nll", string3: "qkq", string4: "eih"
Model : lambda1: C (V ("msj")) (V ("tyq")), string1: "rmd", string2: "axl", string3: "oug", string4: "usz"
Model : lambda1: V ("dch"), string1: "was", string2: "ojm", string3: "sxf", string4: "ghj"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (C (V ("ckh")) (V ("fbb"))) (("eih"::("qkq"::("nll"::("are"::(Nil)))))) = true
sub_check_ta1 (C (V ("msj")) (V ("tyq"))) (("usz"::("oug"::("axl"::("rmd"::(Nil)))))) = true
sub_check_ta1 (V ("dch")) (("ghj"::("sxf"::("ojm"::("was"::(Nil)))))) = true
Simplifying took 0.013182 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1289


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("ldx"), string1: "txm", string2: "eap", string3: "aza", string4: "cfd"
Model : lambda1: V ("dxh"), string1: "qju", string2: "nam", string3: "ggn", string4: "lit"
Model : lambda1: V ("vou"), string1: "lrz", string2: "tot", string3: "fde", string4: "azs"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("ldx")) (("cfd"::("aza"::("eap"::("txm"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("ldx"))) ("cfd")) ("aza")) ("eap")) ("txm")) ((Nil))
sub_check_ta1 (V ("dxh")) (("lit"::("ggn"::("nam"::("qju"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("dxh"))) ("lit")) ("ggn")) ("nam")) ("qju")) ((Nil))
sub_check_ta1 (V ("vou")) (("azs"::("fde"::("tot"::("lrz"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("vou"))) ("azs")) ("fde")) ("tot")) ("lrz")) ((Nil))
Simplifying took 0.011623 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 1290


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:13)
intro string2(rank:13)
intro string3(rank:13)
intro string4(rank:13)
induction lambda1(rank:23)
intro string1(rank:13)
=================================================
Progress: 1291


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1292


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1293


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1294


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1295


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1296


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1297


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 33
Tactic List : 5
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
=================================================
Progress: 1298


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string_eq (string4) (string3) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1299


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string_eq (string4) (string3) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string4 = string3
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
=================================================
Progress: 1300


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1301


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 1(rank:12)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
rewrite Case4 in goal at 2(rank:28)
rewrite Case4 in goal at 3(rank:28)
rewrite <- Case4 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1302


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1303


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1304


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1305


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1306


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 6
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
rewrite <- Case4 in goal at 0(rank:19)
=================================================
Progress: 1307


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12)
=================================================
Progress: 1308


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string4 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
rewrite <- Case4 in goal at 0(rank:28)
=================================================
Progress: 1309


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1310


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
rewrite <- Case5 in goal at 0(rank:28)
=================================================
Progress: 1311


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1312


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 1313


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1314


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12)
=================================================
Progress: 1315


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12)
=================================================
Progress: 1316


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case5 in goal at 0(rank:12)
rewrite <- Case5 in goal at 1(rank:12)
rewrite Case5 in goal at 0(rank:28)
rewrite Case5 in goal at 1(rank:28)
rewrite Case5 in goal at 2(rank:28)
rewrite Case5 in goal at 3(rank:28)
rewrite <- Case5 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1317


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case5 in goal at 0(rank:12)
rewrite Case5 in goal at 2(rank:28)
case string_eq (string1) (string4)(rank:13)
rewrite Case5 in goal at 0(rank:28)
rewrite Case5 in goal at 1(rank:28)
=================================================
Progress: 1318


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1319


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1320


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1321


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1322


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1323


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 7
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
rewrite <- Case4 in goal at 0(rank:19)
rewrite <- Case5 in goal at 0(rank:19)
=================================================
Progress: 1324


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1325


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10)
=================================================
Progress: 1326


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 92
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 1327


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:10)
=================================================
Progress: 1328


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 1329


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10)
=================================================
Progress: 1330


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string2
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda2: V ("dzp"), string1: "rse", string2: "dnw", string3: "puw", string4: "syz"
Model : lambda2: V ("fkn"), string1: "lka", string2: "ycn", string3: "rwk", string4: "sdf"
Model : lambda2: V ("hdr"), string1: "ixo", string2: "ytt", string3: "lrq", string4: "cwv"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("dzp")) (("syz"::("puw"::("dnw"::("rse"::(Nil)))))) = true
sub_check_ta1 (V ("fkn")) (("sdf"::("rwk"::("ycn"::("lka"::(Nil)))))) = true
sub_check_ta1 (V ("hdr")) (("cwv"::("lrq"::("ytt"::("ixo"::(Nil)))))) = true
Simplifying took 0.009192 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1331


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1332


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case3 in goal at 0(rank:12)
rewrite <- Case3 in goal at 1(rank:12)
rewrite Case3 in goal at 0(rank:28)
rewrite Case3 in goal at 1(rank:28)
rewrite Case3 in goal at 2(rank:28)
rewrite Case3 in goal at 3(rank:28)
rewrite <- Case3 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1333


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1334


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1335


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case3 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1336


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1337


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string1 = string4
Case4 : string_eq (string4) (string3) = false
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 33
Tactic List : 5
case string_eq (string4) (string3)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
=================================================
Progress: 1338


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (deleteAll (if string_eq (string4) (string3) then deleteAll ((Nil)) (string3) else (string4::deleteAll ((Nil)) (string3))) (string2)) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string3)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string_eq (string4) (string3) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case4 at 0(rank:12)
=================================================
Progress: 1339


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string_eq (string4) (string3) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case4 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
Case4 : string4 = string3
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
=================================================
Progress: 1340


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
---------------------------------------
true = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1341


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case4 in goal at 0(rank:12)
rewrite <- Case4 in goal at 1(rank:12)
rewrite Case4 in goal at 0(rank:28)
rewrite Case4 in goal at 1(rank:28)
rewrite Case4 in goal at 2(rank:28)
rewrite Case4 in goal at 3(rank:28)
rewrite <- Case4 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1342


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1343


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1344


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case4 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1345


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1346


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string1 = string4
Case5 : string_eq (string4) (string2) = false
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 18
Tactic List : 6
case string_eq (string4) (string2)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
rewrite <- Case4 in goal at 0(rank:19)
=================================================
Progress: 1347


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (deleteAll (if string_eq (string4) (string2) then deleteAll ((Nil)) (string2) else (string4::deleteAll ((Nil)) (string2))) (string1)) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12)
=================================================
Progress: 1348


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string_eq (string4) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string_eq (string1) (string4) = false
Case5 : string4 = string2
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
rewrite <- Case4 in goal at 0(rank:28)
=================================================
Progress: 1349


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1350


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string2) (string4) = false
Case4 : string4 = string2
Case5 : string_eq (string1) (string4) = false
---------------------------------------
false = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:28)
rewrite <- Case2 in goal at 0(rank:28)
rewrite <- Case3 in goal at 0(rank:28)
rewrite <- Case5 in goal at 0(rank:28)
=================================================
Progress: 1351


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12)
=================================================
Progress: 1352


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = true
---------------------------------------
true = true

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 1353


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string2 = string4
Case5 : string_eq (string4) (string1) = false
---------------------------------------
true = false

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 7
Tactic List : 4
case string_eq (string1) (string4)(rank:12)
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:27)
rewrite <- Cond1 in goal at 0(rank:27)
=================================================
Progress: 1354


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12)
=================================================
Progress: 1355


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string4) (string1)(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case5 at 0(rank:12)
=================================================
Progress: 1356


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = true
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
rewrite <- Case5 in goal at 0(rank:12)
rewrite <- Case5 in goal at 1(rank:12)
rewrite Case5 in goal at 0(rank:28)
rewrite Case5 in goal at 1(rank:28)
rewrite Case5 in goal at 2(rank:28)
rewrite Case5 in goal at 3(rank:28)
rewrite <- Case5 in goal at 2(rank:12)
case string_eq (string4) (string1)(rank:13)
rewrite <- Cond1 in goal at 0(rank:20)
rewrite Cond1 in goal at 0(rank:20)
=================================================
Progress: 1357


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = true
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case5 at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- Case5 in goal at 0(rank:12)
rewrite Case5 in goal at 2(rank:28)
case string_eq (string1) (string4)(rank:13)
rewrite Case5 in goal at 0(rank:28)
rewrite Case5 in goal at 1(rank:28)
=================================================
Progress: 1358


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1359


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 1(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1360


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 2(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:12)
=================================================
Progress: 1361


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case5 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_refl in goal at 0(rank:12)
=================================================
Progress: 1362


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if string_eq (string1) (string1) then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1363


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string1 = string4
---------------------------------------
true = list_eq (if true then deleteAll ((Nil)) (string1) else (string1::deleteAll ((Nil)) (string1))) ((Nil))

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil)) = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string1) (string4) = false
---------------------------------------
false = list_eq (if string_eq (string4) (string1) then deleteAll ((Nil)) (string1) else (string4::deleteAll ((Nil)) (string1))) ((Nil))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 9
Tactic List : 7
case string_eq (string4) (string1)(rank:12)
rewrite Cond1 in goal at 0(rank:19)
rewrite <- Case1 in goal at 0(rank:19)
rewrite <- Case2 in goal at 0(rank:19)
rewrite <- Case3 in goal at 0(rank:19)
rewrite <- Case4 in goal at 0(rank:19)
rewrite <- Case5 in goal at 0(rank:19)
=================================================
Progress: 1364


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if string_eq (string4) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_refl in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 1365


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string4 = string1
---------------------------------------
if true then true else is_mem_ta1 ((Nil)) (string4) = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:10)
=================================================
Progress: 1366


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string4) (string3) = false
Case2 : string_eq (string3) (string4) = false
Case3 : string_eq (string4) (string2) = false
Case4 : string_eq (string2) (string4) = false
Case5 : string_eq (string4) (string1) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = false

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 92
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 1367


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (P (string4) (lambda2))) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:10)
=================================================
Progress: 1368


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:10)
=================================================
Progress: 1369


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 1370


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10)
=================================================
Progress: 1371


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = list_eq (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string3)) (string2)) (string1)) ((Nil))
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro string2
intro Cond1
rewrite Cond1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (lambda2:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda2)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda2: P ("rai") (V ("bnj")), string1: "zjs", string2: "xtg", string3: "dah", string4: "jlz"
Model : lambda2: V ("wug"), string1: "pda", string2: "bew", string3: "unn", string4: "eok"
Model : lambda2: C (V ("yam")) (P ("kov") (V ("gkk"))), string1: "dow", string2: "ejp", string3: "vla", string4: "dfo"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (P ("rai") (V ("bnj"))) (("jlz"::("dah"::("xtg"::("zjs"::(Nil)))))) = true
sub_check_ta1 (V ("wug")) (("eok"::("unn"::("bew"::("pda"::(Nil)))))) = true
sub_check_ta1 (C (V ("yam")) (P ("kov") (V ("gkk")))) (("dfo"::("vla"::("ejp"::("dow"::(Nil)))))) = true
Simplifying took 0.012746 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1372


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 1373


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 1374


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 1375


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 1376


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 1377


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 1378


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro string2(rank:13)
intro string3(rank:13)
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1379


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13)
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1380


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1381


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 1382


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 1383


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro string2(rank:13)
intro string3(rank:13)
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1384


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13)
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1385


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1386


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 1387


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 1388


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 1389


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13)
=================================================
Progress: 1390


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 1391


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1392


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 1393


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13)
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1394


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1395


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 1396


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:13)
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1397


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1398


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1399


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 1400


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13)
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1401


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1402


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 1403


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:13)
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1404


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1405


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1406


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 1407


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13)
=================================================
Progress: 1408


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1409


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1410


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1411


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13)
=================================================
Progress: 1412


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1413


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 1414


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1415


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 1416


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 1417


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 1418


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 1419


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13)
=================================================
Progress: 1420


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1421


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 1422


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13)
induction lambda1(rank:23)
=================================================
Progress: 1423


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 1424


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 1425


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 1426


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13)
=================================================
Progress: 1427


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13)
=================================================
Progress: 1428


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1429


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1430


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1431


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13)
=================================================
Progress: 1432


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 1433


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 1434


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13)
=================================================
Progress: 1435


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13)
=================================================
Progress: 1436


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 1437


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13)
=================================================
Progress: 1438


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15)
=================================================
Progress: 1439


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 1440


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13)
=================================================
Progress: 1441


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13)
=================================================
Progress: 1442


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13)
=================================================
Progress: 1443


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1444


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1445


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1446


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1447


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1448


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1449


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1450


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1451


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1452


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1453


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1454


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 1455


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1456


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:13)
=================================================
Progress: 1457


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda1: V ("rgw"), string1: "svl", string2: "nbx", string3: "sxl", string4: "lrd"
Model : lambda1: V ("kfm"), string1: "knl", string2: "rzh", string3: "men", string4: "yom"
Model : lambda1: V ("kht"), string1: "dcu", string2: "kmt", string3: "rwf", string4: "gdt"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("rgw")) (("lrd"::("sxl"::("nbx"::("svl"::(Nil)))))) = true
sub_check_ta1 (V ("kfm")) (("yom"::("men"::("rzh"::("knl"::(Nil)))))) = true
sub_check_ta1 (V ("kht")) (("gdt"::("rwf"::("kmt"::("dcu"::(Nil)))))) = true
Simplifying took 0.012218 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1458


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda1: V ("tmk"), string1: "uju", string2: "yzl", string3: "sra", string4: "uqb"
Model : lambda1: V ("ixh"), string1: "max", string2: "dly", string3: "ftj", string4: "hxq"
Model : lambda1: V ("abj"), string1: "ktp", string2: "axw", string3: "wue", string4: "qio"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("tmk")) (("uqb"::("sra"::("yzl"::("uju"::(Nil)))))) = true
sub_check_ta1 (V ("ixh")) (("hxq"::("ftj"::("dly"::("max"::(Nil)))))) = true
sub_check_ta1 (V ("abj")) (("qio"::("wue"::("axw"::("ktp"::(Nil)))))) = true
Simplifying took 0.011038 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1459


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda1: V ("yxr"), string1: "vyg", string2: "bmb", string3: "wrd", string4: "xcf"
Model : lambda1: V ("rzr"), string1: "ogl", string2: "god", string3: "hvr", string4: "jqp"
Model : lambda1: V ("ygf"), string1: "ufy", string2: "nmi", string3: "fmm", string4: "zak"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("yxr")) (("xcf"::("wrd"::("bmb"::("vyg"::(Nil)))))) = true
sub_check_ta1 (V ("rzr")) (("jqp"::("hvr"::("god"::("ogl"::(Nil)))))) = true
sub_check_ta1 (V ("ygf")) (("zak"::("fmm"::("nmi"::("ufy"::(Nil)))))) = true
Simplifying took 0.015086 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1460


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda1: V ("ebo"), string1: "yqp", string2: "klg", string3: "ixo", string4: "ntg"
Model : lambda1: V ("bju"), string1: "vxo", string2: "uhd", string3: "qob", string4: "kln"
Model : lambda1: V ("uyi"), string1: "hdu", string2: "unt", string3: "mjx", string4: "fxf"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("ebo")) (("ntg"::("ixo"::("klg"::("yqp"::(Nil)))))) = true
sub_check_ta1 (V ("bju")) (("kln"::("qob"::("uhd"::("vxo"::(Nil)))))) = true
sub_check_ta1 (V ("uyi")) (("fxf"::("mjx"::("unt"::("hdu"::(Nil)))))) = true
Simplifying took 0.010532 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1461


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:13)
=================================================
Progress: 1462


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("ntz"), string1: "sif", string2: "cfa", string3: "yht", string4: "isk"
Model : lambda1: V ("cpn"), string1: "gxw", string2: "mgm", string3: "fop", string4: "mku"
Model : lambda1: V ("ezh"), string1: "air", string2: "ltm", string3: "rmx", string4: "fyy"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("ntz")) (("isk"::("yht"::("cfa"::("sif"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("ntz"))) ("isk")) ("yht")) ("cfa")) ("sif")) ((Nil))
sub_check_ta1 (V ("cpn")) (("mku"::("fop"::("mgm"::("gxw"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("cpn"))) ("mku")) ("fop")) ("mgm")) ("gxw")) ((Nil))
sub_check_ta1 (V ("ezh")) (("fyy"::("rmx"::("ltm"::("air"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("ezh"))) ("fyy")) ("rmx")) ("ltm")) ("air")) ((Nil))
Simplifying took 0.012446 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 1463


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:15)
intro string2(rank:15)
intro string3(rank:15)
intro string4(rank:15)
induction lambda1(rank:25)
intro string1(rank:15)
=================================================
Progress: 1464


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("xfk"), string1: "szm", string2: "ljw", string3: "cti", string4: "mou"
Model : lambda1: V ("vty"), string1: "pyj", string2: "lgy", string3: "dws", string4: "fqp"
Model : lambda1: C (V ("mqf")) (P ("mrx") (V ("dey"))), string1: "gtb", string2: "eyr", string3: "bwv", string4: "ijh"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("xfk")) (("mou"::("cti"::("ljw"::("szm"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("xfk"))) ("mou")) ("cti")) ("ljw")) ("szm")) ((Nil))
sub_check_ta1 (V ("vty")) (("fqp"::("dws"::("lgy"::("pyj"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("vty"))) ("fqp")) ("dws")) ("lgy")) ("pyj")) ((Nil))
sub_check_ta1 (C (V ("mqf")) (P ("mrx") (V ("dey")))) (("ijh"::("bwv"::("eyr"::("gtb"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (V ("mqf")) (P ("mrx") (V ("dey"))))) ("ijh")) ("bwv")) ("eyr")) ("gtb")) ((Nil))
Simplifying took 0.022154 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1465


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("hko"), string1: "liz", string2: "nvp", string3: "ngd", string4: "sne"
Model : lambda1: V ("fdj"), string1: "ryu", string2: "gxo", string3: "kzi", string4: "yjh"
Model : lambda1: C (V ("wot")) (V ("ldc")), string1: "yhu", string2: "tcy", string3: "jsv", string4: "otw"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("hko")) (("sne"::("ngd"::("nvp"::("liz"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("hko"))) ("sne")) ("ngd")) ("nvp")) ("liz")) ((Nil))
sub_check_ta1 (V ("fdj")) (("yjh"::("kzi"::("gxo"::("ryu"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("fdj"))) ("yjh")) ("kzi")) ("gxo")) ("ryu")) ((Nil))
sub_check_ta1 (C (V ("wot")) (V ("ldc"))) (("otw"::("jsv"::("tcy"::("yhu"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (V ("wot")) (V ("ldc")))) ("otw")) ("jsv")) ("tcy")) ("yhu")) ((Nil))
Simplifying took 0.024493 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1466


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("dsa"), string1: "ypd", string2: "mep", string3: "dml", string4: "wet"
Model : lambda1: C (C (V ("cjz")) (V ("ewu"))) (V ("isq")), string1: "wpi", string2: "rig", string3: "pqj", string4: "mwt"
Model : lambda1: V ("abf"), string1: "sta", string2: "rqi", string3: "iuh", string4: "tgu"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("dsa")) (("wet"::("dml"::("mep"::("ypd"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("dsa"))) ("wet")) ("dml")) ("mep")) ("ypd")) ((Nil))
sub_check_ta1 (C (C (V ("cjz")) (V ("ewu"))) (V ("isq"))) (("mwt"::("pqj"::("rig"::("wpi"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (C (C (V ("cjz")) (V ("ewu"))) (V ("isq")))) ("mwt")) ("pqj")) ("rig")) ("wpi")) ((Nil))
sub_check_ta1 (V ("abf")) (("tgu"::("iuh"::("rqi"::("sta"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("abf"))) ("tgu")) ("iuh")) ("rqi")) ("sta")) ((Nil))
Simplifying took 0.022648 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1467


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
Model : lambda1: V ("vdx"), string1: "kol", string2: "fzw", string3: "nsp", string4: "uhc"
Model : lambda1: V ("xnk"), string1: "doq", string2: "jcz", string3: "wbk", string4: "drj"
Model : lambda1: V ("zmc"), string1: "xwk", string2: "bmk", string3: "wxj", string4: "agd"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("vdx")) (("uhc"::("nsp"::("fzw"::("kol"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("vdx"))) ("uhc")) ("nsp")) ("fzw")) ("kol")) ((Nil))
sub_check_ta1 (V ("xnk")) (("drj"::("wbk"::("jcz"::("doq"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("xnk"))) ("drj")) ("wbk")) ("jcz")) ("doq")) ((Nil))
sub_check_ta1 (V ("zmc")) (("agd"::("wxj"::("bmk"::("xwk"::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V ("zmc"))) ("agd")) ("wxj")) ("bmk")) ("xwk")) ((Nil))
Simplifying took 0.020086 seconds
Result : true
advanced_generalize done
=================================================
Progress: 1468


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Lemma : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Model : lambda1: V ("gba"), string1: "hcs", string2: "uth", string3: "nci", string4: "jwz"
Model : lambda1: C (V ("jqb")) (P ("woc") (V ("ysp"))), string1: "jul", string2: "hjj", string3: "ztz", string4: "fqt"
Model : lambda1: V ("txn"), string1: "doh", string2: "ijs", string3: "kbw", string4: "nbf"
Substituting variables...
Simplifying conditions and property...
let rec deleteAll list_input target =
match (list_input) with
| Cons l remain_list -> if string_eq (l) (target) then deleteAll (remain_list) (target) else (l::deleteAll (remain_list) (target))
| Nil -> (Nil)
let rec check lambda_input =
if list_eq (listStation (lambda_input)) ((Nil)) then true else false
prop list:
sub_check_ta1 (V ("gba")) (("jwz"::("nci"::("uth"::("hcs"::(Nil)))))) = true
sub_check_ta1 (C (V ("jqb")) (P ("woc") (V ("ysp")))) (("fqt"::("ztz"::("hjj"::("jul"::(Nil)))))) = true
sub_check_ta1 (V ("txn")) (("nbf"::("kbw"::("ijs"::("doh"::(Nil)))))) = true
Simplifying took 0.018830 seconds
Result : true
advanced_generalize done


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 1469


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:15)
intro string2(rank:15)
intro string3(rank:15)
intro string4(rank:15)
induction lambda1(rank:25)
intro string1(rank:15)
=================================================
Progress: 1470


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1471


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string3) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1472


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1473


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string3) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1474


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1475


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string3) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1476


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1477


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string3) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1478


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1479


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string3) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1480


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1481


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1482


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1483


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1484


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1485


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1486


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1487


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1488


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1489


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string2) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1490


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1491


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1492


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1493


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1494


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1495


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1496


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1497


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1498


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1499


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 4
case string_eq (string1) (string5)(rank:14)
rewrite <- Cond1 in goal at 2(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 1(rank:29)
=================================================
Progress: 1500


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1501


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:29)
rewrite <- Case3 in goal at 0(rank:29)
rewrite <- Case4 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Case2 in goal at 0(rank:29)
=================================================
Progress: 1502


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1503


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:29)
rewrite <- Case3 in goal at 0(rank:29)
rewrite <- Case4 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Case2 in goal at 0(rank:29)
=================================================
Progress: 1504


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1505


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:29)
rewrite <- Case3 in goal at 0(rank:29)
rewrite <- Case4 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Case2 in goal at 0(rank:29)
=================================================
Progress: 1506


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1507


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:29)
rewrite <- Case3 in goal at 0(rank:29)
rewrite <- Case4 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Case2 in goal at 0(rank:29)
=================================================
Progress: 1508


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 1509


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:29)
rewrite <- Case3 in goal at 0(rank:29)
rewrite <- Case4 in goal at 0(rank:29)
rewrite <- Cond1 in goal at 0(rank:29)
rewrite <- Case2 in goal at 0(rank:29)
=================================================
Progress: 1510


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1511


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1512


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1513


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1514


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1515


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1516


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1517


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1518


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1519


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1520


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1521


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro string2(rank:15)
intro string3(rank:15)
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1522


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string3(rank:15)
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1523


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1524


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 1525


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1526


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro string2(rank:15)
intro string3(rank:15)
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1527


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string3(rank:15)
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1528


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1529


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 1530


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1531


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1532


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 1533


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 1534


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 1535


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1536


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 1537


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1538


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 1539


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (V (string5))) (string4)) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 1540


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 1541


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string3(rank:15)
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1542


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1543


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 1544


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15)
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1545


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1546


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1547


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 1548


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string3(rank:15)
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1549


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1550


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 1551


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15)
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1552


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1553


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1554


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 1555


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 1556


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 1557


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 1558


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 1559


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 1560


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 1561


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 1562


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 1563


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:16)
case string_eq (string5) (string4)(rank:16)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 1564


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 1565


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1566


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 1567


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1568


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1569


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 1570


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1571


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1572


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 1573


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string4(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1574


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 1575


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15)
induction lambda1(rank:25)
=================================================
Progress: 1576


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1577


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 1578


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1579


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15)
=================================================
Progress: 1580


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 1581


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 1582


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 1583


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 1584


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 1585


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 1586


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:16)
case string_eq (string5) (string4)(rank:16)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 1587


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:16)
case string_eq (string5) (string4)(rank:16)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 1588


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15)
=================================================
Progress: 1589


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 1590


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 1591


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15)
=================================================
Progress: 1592


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 1593


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 1594


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15)
=================================================
Progress: 1595


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17)
=================================================
Progress: 1596


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 1597


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15)
=================================================
Progress: 1598


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15)
=================================================
Progress: 1599


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15)
=================================================
Progress: 1600


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 1601


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 1602


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:16)
rewrite <- Cond1 in goal at 2(rank:31)
rewrite <- Cond1 in goal at 0(rank:31)
rewrite <- Cond1 in goal at 1(rank:31)
=================================================
Progress: 1603


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil)) = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = list_eq (deleteAll (deleteAll (deleteAll (if string_eq (string5) (string4) then deleteAll ((Nil)) (string4) else (string5::deleteAll ((Nil)) (string4))) (string3)) (string2)) (string1)) ((Nil))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
case string_eq (string4) (string5)(rank:16)
case string_eq (string5) (string4)(rank:16)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- Cond1 in goal at 0(rank:23)
=================================================
Progress: 1604


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 1605


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil)) = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = list_eq (deleteAll (deleteAll (deleteAll (deleteAll (listStation (lambda1)) (string4)) (string3)) (string2)) (string1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
